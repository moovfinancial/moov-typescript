/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { brandingGetBrand } from "../funcs/brandingGetBrand.js";
import { brandingPostBrand } from "../funcs/brandingPostBrand.js";
import { brandingUpdateBrand } from "../funcs/brandingUpdateBrand.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Branding extends ClientSDK {
  /**
   * Creates the brand properties for the specified account.
   */
  async postBrand(
    security: operations.PostBrandSecurity,
    request: operations.PostBrandRequest,
    options?: RequestOptions,
  ): Promise<components.Brand> {
    return unwrapAsync(brandingPostBrand(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Gets the brand properties for the specified account.
   */
  async getBrand(
    security: operations.GetBrandSecurity,
    request: operations.GetBrandRequest,
    options?: RequestOptions,
  ): Promise<components.Brand> {
    return unwrapAsync(brandingGetBrand(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Updates the brand properties for the specified account.
   */
  async updateBrand(
    security: operations.UpdateBrandSecurity,
    request: operations.UpdateBrandRequest,
    options?: RequestOptions,
  ): Promise<components.Brand> {
    return unwrapAsync(brandingUpdateBrand(
      this,
      security,
      request,
      options,
    ));
  }
}
