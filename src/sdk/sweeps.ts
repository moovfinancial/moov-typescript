/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { sweepsCreateSweepConfig } from "../funcs/sweepsCreateSweepConfig.js";
import { sweepsGetSweep } from "../funcs/sweepsGetSweep.js";
import { sweepsGetSweepConfig } from "../funcs/sweepsGetSweepConfig.js";
import { sweepsListSweepConfigs } from "../funcs/sweepsListSweepConfigs.js";
import { sweepsListSweeps } from "../funcs/sweepsListSweeps.js";
import { sweepsPatchSweepConfig } from "../funcs/sweepsPatchSweepConfig.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Sweeps extends ClientSDK {
  /**
   * Create a sweep config for a wallet.
   */
  async createSweepConfig(
    security: operations.CreateSweepConfigSecurity,
    request: operations.CreateSweepConfigRequest,
    options?: RequestOptions,
  ): Promise<components.SweepConfig> {
    return unwrapAsync(sweepsCreateSweepConfig(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * List sweep configs associated with an account.
   */
  async listSweepConfigs(
    security: operations.ListSweepConfigsSecurity,
    request: operations.ListSweepConfigsRequest,
    options?: RequestOptions,
  ): Promise<Array<components.SweepConfig>> {
    return unwrapAsync(sweepsListSweepConfigs(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Get a sweep config associated with a wallet.
   */
  async getSweepConfig(
    security: operations.GetSweepConfigSecurity,
    request: operations.GetSweepConfigRequest,
    options?: RequestOptions,
  ): Promise<components.SweepConfig> {
    return unwrapAsync(sweepsGetSweepConfig(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Update settings on a sweep config.
   */
  async patchSweepConfig(
    security: operations.PatchSweepConfigSecurity,
    request: operations.PatchSweepConfigRequest,
    options?: RequestOptions,
  ): Promise<components.SweepConfig> {
    return unwrapAsync(sweepsPatchSweepConfig(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * List sweeps associated with a wallet.
   */
  async listSweeps(
    security: operations.ListSweepsSecurity,
    request: operations.ListSweepsRequest,
    options?: RequestOptions,
  ): Promise<Array<components.Sweep>> {
    return unwrapAsync(sweepsListSweeps(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Get details on a specific sweep.
   */
  async getSweep(
    security: operations.GetSweepSecurity,
    request: operations.GetSweepRequest,
    options?: RequestOptions,
  ): Promise<components.Sweep> {
    return unwrapAsync(sweepsGetSweep(
      this,
      security,
      request,
      options,
    ));
  }
}
