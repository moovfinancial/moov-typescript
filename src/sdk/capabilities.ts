/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { capabilitiesDisable } from "../funcs/capabilitiesDisable.js";
import { capabilitiesGet } from "../funcs/capabilitiesGet.js";
import { capabilitiesList } from "../funcs/capabilitiesList.js";
import { capabilitiesRequest } from "../funcs/capabilitiesRequest.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Capabilities extends ClientSDK {
  /**
   * Retrieve all the capabilities an account has requested.
   *
   * Read our [capabilities guide](https://docs.moov.io/guides/accounts/capabilities/) to learn more.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/accounts/{accountID}/capabilities.read` scope.
   */
  async list(
    request: operations.ListCapabilitiesRequest,
    options?: RequestOptions,
  ): Promise<operations.ListCapabilitiesResponse> {
    return unwrapAsync(capabilitiesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Request capabilities for a specific account. Read our [capabilities guide](https://docs.moov.io/guides/accounts/capabilities/) to learn more.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/accounts/{accountID}/capabilities.write` scope.
   */
  async request(
    request: operations.RequestCapabilitiesRequest,
    options?: RequestOptions,
  ): Promise<operations.RequestCapabilitiesResponse> {
    return unwrapAsync(capabilitiesRequest(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a specific capability that an account has requested. Read our [capabilities guide](https://docs.moov.io/guides/accounts/capabilities/) to learn more.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/accounts/{accountID}/capabilities.read` scope.
   */
  async get(
    request: operations.GetCapabilityRequest,
    options?: RequestOptions,
  ): Promise<operations.GetCapabilityResponse> {
    return unwrapAsync(capabilitiesGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Disable a specific capability that an account has requested. Read our [capabilities guide](https://docs.moov.io/guides/accounts/capabilities/) to learn more.
   *
   *   To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/accounts/{accountID}/capabilities.write` scope.
   */
  async disable(
    request: operations.DisableCapabilityRequest,
    options?: RequestOptions,
  ): Promise<operations.DisableCapabilityResponse | undefined> {
    return unwrapAsync(capabilitiesDisable(
      this,
      request,
      options,
    ));
  }
}
