/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { paymentLinksCreatePaymentLink } from "../funcs/paymentLinksCreatePaymentLink.js";
import { paymentLinksDisablePaymentLink } from "../funcs/paymentLinksDisablePaymentLink.js";
import { paymentLinksGetPaymentLink } from "../funcs/paymentLinksGetPaymentLink.js";
import {
  GetPaymentLinkQRCodeAcceptEnum,
  paymentLinksGetPaymentLinkQRCode,
} from "../funcs/paymentLinksGetPaymentLinkQRCode.js";
import { paymentLinksListPaymentLinks } from "../funcs/paymentLinksListPaymentLinks.js";
import { paymentLinksUpdatePaymentLink } from "../funcs/paymentLinksUpdatePaymentLink.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { GetPaymentLinkQRCodeAcceptEnum } from "../funcs/paymentLinksGetPaymentLinkQRCode.js";

export class PaymentLinks extends ClientSDK {
  /**
   * Create a payment link that allows an end user to make a payment on Moov's hosted payment link page.
   *
   * To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need
   * to specify the `/accounts/{accountID}/transfers.write` scope.
   */
  async createPaymentLink(
    security: operations.CreatePaymentLinkSecurity,
    request: operations.CreatePaymentLinkRequest,
    options?: RequestOptions,
  ): Promise<components.PaymentLink> {
    return unwrapAsync(paymentLinksCreatePaymentLink(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * List all the payment links created under a Moov account.
   *
   * To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need
   * to specify the `/accounts/{accountID}/transfers.read` scope.
   */
  async listPaymentLinks(
    security: operations.ListPaymentLinksSecurity,
    request: operations.ListPaymentLinksRequest,
    options?: RequestOptions,
  ): Promise<Array<components.PaymentLink>> {
    return unwrapAsync(paymentLinksListPaymentLinks(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Retrieve a payment link by code.
   *
   * To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need
   * to specify the `/accounts/{accountID}/transfers.read` scope.
   */
  async getPaymentLink(
    security: operations.GetPaymentLinkSecurity,
    request: operations.GetPaymentLinkRequest,
    options?: RequestOptions,
  ): Promise<components.PaymentLink> {
    return unwrapAsync(paymentLinksGetPaymentLink(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Update a payment link.
   *
   * To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need
   * to specify the `/accounts/{accountID}/transfers.write` scope.
   */
  async updatePaymentLink(
    security: operations.UpdatePaymentLinkSecurity,
    request: operations.UpdatePaymentLinkRequest,
    options?: RequestOptions,
  ): Promise<components.PaymentLink> {
    return unwrapAsync(paymentLinksUpdatePaymentLink(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Disable a payment link.
   *
   * To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need
   * to specify the `/accounts/{accountID}/transfers.write` scope.
   */
  async disablePaymentLink(
    security: operations.DisablePaymentLinkSecurity,
    request: operations.DisablePaymentLinkRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(paymentLinksDisablePaymentLink(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Retrieve the payment link encoded in a QR code.
   *
   * Use the `Accept` header to specify the format of the response. Supported formats are `application/json` and `image/png`.
   *
   * To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need
   * to specify the `/accounts/{accountID}/transfers.write` scope.
   */
  async getPaymentLinkQRCode(
    security: operations.GetPaymentLinkQRCodeSecurity,
    request: operations.GetPaymentLinkQRCodeRequest,
    options?: RequestOptions & {
      acceptHeaderOverride?: GetPaymentLinkQRCodeAcceptEnum;
    },
  ): Promise<operations.GetPaymentLinkQRCodeResponse> {
    return unwrapAsync(paymentLinksGetPaymentLinkQRCode(
      this,
      security,
      request,
      options,
    ));
  }
}
