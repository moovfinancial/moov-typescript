/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { issuingTransactionsGet } from "../funcs/issuingTransactionsGet.js";
import { issuingTransactionsGetAuthorization } from "../funcs/issuingTransactionsGetAuthorization.js";
import { issuingTransactionsList } from "../funcs/issuingTransactionsList.js";
import { issuingTransactionsListAuthorizationEvents } from "../funcs/issuingTransactionsListAuthorizationEvents.js";
import { issuingTransactionsListAuthorizations } from "../funcs/issuingTransactionsListAuthorizations.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class IssuingTransactions extends ClientSDK {
  /**
   * List issued card authorizations associated with a Moov account.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/accounts/{accountID}/issued-cards.read` scope.
   */
  async listAuthorizations(
    request: operations.ListIssuedCardAuthorizationsRequest,
    options?: RequestOptions,
  ): Promise<operations.ListIssuedCardAuthorizationsResponse> {
    return unwrapAsync(issuingTransactionsListAuthorizations(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieves details of an authorization associated with a specific Moov account.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/accounts/{accountID}/issued-cards.read` scope.
   */
  async getAuthorization(
    request: operations.GetIssuedCardAuthorizationRequest,
    options?: RequestOptions,
  ): Promise<operations.GetIssuedCardAuthorizationResponse> {
    return unwrapAsync(issuingTransactionsGetAuthorization(
      this,
      request,
      options,
    ));
  }

  /**
   * List card network and Moov platform events that affect the authorization and its hold on a wallet balance.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/accounts/{accountID}/issued-cards.read` scope.
   */
  async listAuthorizationEvents(
    request: operations.ListIssuedCardAuthorizationEventsRequest,
    options?: RequestOptions,
  ): Promise<operations.ListIssuedCardAuthorizationEventsResponse> {
    return unwrapAsync(issuingTransactionsListAuthorizationEvents(
      this,
      request,
      options,
    ));
  }

  /**
   * List issued card transactions associated with a Moov account.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/accounts/{accountID}/issued-cards.read` scope.
   */
  async list(
    request: operations.ListIssuedCardTransactionsRequest,
    options?: RequestOptions,
  ): Promise<operations.ListIssuedCardTransactionsResponse> {
    return unwrapAsync(issuingTransactionsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieves details of an issued card transaction associated with a specific Moov account.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/accounts/{accountID}/issued-cards.read` scope.
   */
  async get(
    request: operations.GetIssuedCardTransactionRequest,
    options?: RequestOptions,
  ): Promise<operations.GetIssuedCardTransactionResponse> {
    return unwrapAsync(issuingTransactionsGet(
      this,
      request,
      options,
    ));
  }
}
