/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { cardIssuingGetFullIssuedCard } from "../funcs/cardIssuingGetFullIssuedCard.js";
import { cardIssuingGetIssuedCard } from "../funcs/cardIssuingGetIssuedCard.js";
import { cardIssuingListIssuedCards } from "../funcs/cardIssuingListIssuedCards.js";
import { cardIssuingRequestCard } from "../funcs/cardIssuingRequestCard.js";
import { cardIssuingUpdateIssuedCard } from "../funcs/cardIssuingUpdateIssuedCard.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class CardIssuing extends ClientSDK {
  /**
   * Request a virtual card be issued.
   *
   * To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/issued-cards.write` scope when generating
   * a [token](https://docs.moov.io/api/authentication/access-tokens/).
   */
  async requestCard(
    security: operations.RequestCardSecurity,
    request: operations.RequestCardRequest,
    options?: RequestOptions,
  ): Promise<components.IssuedCard> {
    return unwrapAsync(cardIssuingRequestCard(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * List Moov issued cards existing for the account.
   *
   * To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/issued-cards.read` scope when generating
   * a [token](https://docs.moov.io/api/authentication/access-tokens/).
   */
  async listIssuedCards(
    security: operations.ListIssuedCardsSecurity,
    request: operations.ListIssuedCardsRequest,
    options?: RequestOptions,
  ): Promise<Array<components.IssuedCard>> {
    return unwrapAsync(cardIssuingListIssuedCards(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Retrieve a single issued card associated with a Moov account.
   *
   * To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/issued-cards.read` scope when generating
   * a [token](https://docs.moov.io/api/authentication/access-tokens/).
   */
  async getIssuedCard(
    security: operations.GetIssuedCardSecurity,
    request: operations.GetIssuedCardRequest,
    options?: RequestOptions,
  ): Promise<components.IssuedCard> {
    return unwrapAsync(cardIssuingGetIssuedCard(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Update a Moov issued card.
   *
   * To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/issued-cards.write` scope when generating
   * a [token](https://docs.moov.io/api/authentication/access-tokens/).
   */
  async updateIssuedCard(
    security: operations.UpdateIssuedCardSecurity,
    request: operations.UpdateIssuedCardRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(cardIssuingUpdateIssuedCard(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Get issued card with PAN, CVV, and expiration.
   *
   * Only use this endpoint if you have provided Moov with a copy of your PCI attestation of compliance.
   *
   * To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/issued-cards.read-secure` scope when generating
   * a [token](https://docs.moov.io/api/authentication/access-tokens/).
   */
  async getFullIssuedCard(
    security: operations.GetFullIssuedCardSecurity,
    request: operations.GetFullIssuedCardRequest,
    options?: RequestOptions,
  ): Promise<components.FullIssuedCard> {
    return unwrapAsync(cardIssuingGetFullIssuedCard(
      this,
      security,
      request,
      options,
    ));
  }
}
