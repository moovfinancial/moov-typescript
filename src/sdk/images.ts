/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { imagesDelete } from "../funcs/imagesDelete.js";
import { imagesGetMetadata } from "../funcs/imagesGetMetadata.js";
import {
  GetPublicAcceptEnum,
  imagesGetPublic,
} from "../funcs/imagesGetPublic.js";
import { imagesList } from "../funcs/imagesList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { GetPublicAcceptEnum } from "../funcs/imagesGetPublic.js";

export class Images extends ClientSDK {
  /**
   * List metadata for all images in the specified account.
   */
  async list(
    request: operations.ListImageMetadataRequest,
    options?: RequestOptions,
  ): Promise<operations.ListImageMetadataResponse> {
    return unwrapAsync(imagesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve metadata for a specific image by its ID.
   */
  async getMetadata(
    request: operations.GetImageMetadataRequest,
    options?: RequestOptions,
  ): Promise<operations.GetImageMetadataResponse> {
    return unwrapAsync(imagesGetMetadata(
      this,
      request,
      options,
    ));
  }

  /**
   * Permanently delete an image by its ID.
   */
  async delete(
    request: operations.DeleteImageRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteImageResponse | undefined> {
    return unwrapAsync(imagesDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Get an image by its public ID.
   */
  async getPublic(
    request: operations.GetPublicImageRequest,
    options?: RequestOptions & { acceptHeaderOverride?: GetPublicAcceptEnum },
  ): Promise<operations.GetPublicImageResponse | undefined> {
    return unwrapAsync(imagesGetPublic(
      this,
      request,
      options,
    ));
  }
}
