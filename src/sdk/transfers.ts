/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { transfersCreateTransfer } from "../funcs/transfersCreateTransfer.js";
import { transfersCreateTransferOptions } from "../funcs/transfersCreateTransferOptions.js";
import { transfersGetRefund } from "../funcs/transfersGetRefund.js";
import { transfersGetTransfer } from "../funcs/transfersGetTransfer.js";
import { transfersListRefunds } from "../funcs/transfersListRefunds.js";
import { transfersListTransfers } from "../funcs/transfersListTransfers.js";
import { transfersPatchTransfer } from "../funcs/transfersPatchTransfer.js";
import { transfersRefundTransfer } from "../funcs/transfersRefundTransfer.js";
import { transfersReverseTransfer } from "../funcs/transfersReverseTransfer.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Transfers extends ClientSDK {
  /**
   * Move money by providing the source, destination, and amount in the request body.
   *
   * Read our [transfers overview guide](https://docs.moov.io/guides/money-movement/overview/) to learn more.
   *
   * To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need to specify the `/accounts/{accountID}/transfers.write`
   * scope.
   */
  async createTransfer(
    security: operations.CreateTransferSecurity,
    request: operations.CreateTransferRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateTransferResponse> {
    return unwrapAsync(transfersCreateTransfer(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * List all the transfers associated with a particular Moov account.
   *
   * Read our [transfers overview guide](https://docs.moov.io/guides/money-movement/overview/) to learn more.
   *
   * When you run this request, you retrieve 200 transfers at a time. You can advance past a results set of 200 transfers by using the `skip` parameter (for example,
   * if you set `skip`= 10, you will see a results set of 200 transfers after the first 2000). If you are searching a high volume of transfers, the request will likely
   * process very slowly. To achieve faster performance, restrict the data as much as you can by using the `StartDateTime` and `EndDateTime` parameters for a limited
   * period of time. You can run multiple requests in smaller time window increments until you've retrieved all the transfers you need.
   *
   * To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need to specify the `/accounts/{accountID}/transfers.read`
   * scope.
   */
  async listTransfers(
    security: operations.ListTransfersSecurity,
    request: operations.ListTransfersRequest,
    options?: RequestOptions,
  ): Promise<Array<components.Transfer>> {
    return unwrapAsync(transfersListTransfers(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Retrieve full transfer details for an individual transfer of a particular Moov account.
   *
   * Payment rail-specific details are included in the source and destination. Read our [transfers overview guide](https://docs.moov.io/guides/money-movement/overview/)
   * to learn more.
   *
   * To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need to specify the `/accounts/{accountID}/transfers.read`
   * scope.
   */
  async getTransfer(
    security: operations.GetTransferSecurity,
    request: operations.GetTransferRequest,
    options?: RequestOptions,
  ): Promise<components.Transfer> {
    return unwrapAsync(transfersGetTransfer(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Update the metadata contained on a transfer.
   *
   * Read our [transfers overview guide](https://docs.moov.io/guides/money-movement/overview/) to learn more.
   *
   * To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need to specify the `/accounts/{accountID}/transfers.write`
   * scope.
   */
  async patchTransfer(
    security: operations.PatchTransferSecurity,
    request: operations.PatchTransferRequest,
    options?: RequestOptions,
  ): Promise<components.Transfer> {
    return unwrapAsync(transfersPatchTransfer(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Initiate a refund for a card transfer.
   *
   * **Use the [Cancel or refund a card transfer](https://docs.moov.io/api/money-movement/refunds/cancel/) endpoint for more comprehensive cancel and refund options.**
   * See the [reversals](https://docs.moov.io/guides/money-movement/accept-payments/card-acceptance/reversals/) guide for more information.
   *
   * To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need to specify the `/accounts/{accountID}/transfers.write`
   * scope.
   */
  async refundTransfer(
    security: operations.RefundTransferSecurity,
    request: operations.RefundTransferRequest,
    options?: RequestOptions,
  ): Promise<operations.RefundTransferResponse> {
    return unwrapAsync(transfersRefundTransfer(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Get a list of refunds for a card transfer.
   *
   * To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need to specify the `/accounts/{accountID}/transfers.read`
   * scope.
   */
  async listRefunds(
    security: operations.ListRefundsSecurity,
    request: operations.ListRefundsRequest,
    options?: RequestOptions,
  ): Promise<Array<components.CardAcquiringRefund>> {
    return unwrapAsync(transfersListRefunds(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Get details of a refund for a card transfer.
   *
   * To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need to specify the `/accounts/{accountID}/transfers.read`
   * scope.
   */
  async getRefund(
    security: operations.GetRefundSecurity,
    request: operations.GetRefundRequest,
    options?: RequestOptions,
  ): Promise<components.CardAcquiringRefund> {
    return unwrapAsync(transfersGetRefund(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Reverses a card transfer by initiating a cancellation or refund depending on the transaction status.
   * Read our [reversals guide](https://docs.moov.io/guides/money-movement/accept-payments/card-acceptance/reversals/)
   * to learn more.
   *
   * To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need
   * to specify the `/accounts/{accountID}/transfers.write` scope.
   */
  async reverseTransfer(
    security: operations.ReverseTransferSecurity,
    request: operations.ReverseTransferRequest,
    options?: RequestOptions,
  ): Promise<components.Reversal> {
    return unwrapAsync(transfersReverseTransfer(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Generate available payment method options for one or multiple transfer participants depending on the accountID or paymentMethodID you
   * supply in the request.
   *
   * Read our [transfers overview guide](https://docs.moov.io/guides/money-movement/overview/) to learn more.
   *
   * To use this endpoint from the browser, you'll need to specify the `/accounts/{yourAccountID}/transfers.read` scope when generating a
   * [token](https://docs.moov.io/api/authentication/access-tokens/). The accountID included must be your accountID. You can find your
   * accountID on the [Business details](https://dashboard.moov.io/settings/business) page.
   */
  async createTransferOptions(
    security: operations.CreateTransferOptionsSecurity,
    request: operations.CreateTransferOptionsRequest,
    options?: RequestOptions,
  ): Promise<components.TransferOptions> {
    return unwrapAsync(transfersCreateTransferOptions(
      this,
      security,
      request,
      options,
    ));
  }
}
