/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { terminalApplicationsCreate } from "../funcs/terminalApplicationsCreate.js";
import { terminalApplicationsCreateVersion } from "../funcs/terminalApplicationsCreateVersion.js";
import { terminalApplicationsDelete } from "../funcs/terminalApplicationsDelete.js";
import { terminalApplicationsGet } from "../funcs/terminalApplicationsGet.js";
import { terminalApplicationsList } from "../funcs/terminalApplicationsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class TerminalApplications extends ClientSDK {
  /**
   * Create a new terminal application.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/terminal-applications.write` scope.
   */
  async create(
    request: components.CreateTerminalApplication,
    options?: RequestOptions,
  ): Promise<operations.CreateTerminalApplicationResponse> {
    return unwrapAsync(terminalApplicationsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * List all the terminal applications for a Moov Account.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/terminal-applications.read` scope.
   */
  async list(
    request: operations.ListTerminalApplicationsRequest,
    options?: RequestOptions,
  ): Promise<operations.ListTerminalApplicationsResponse> {
    return unwrapAsync(terminalApplicationsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Fetch a specific terminal application.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/terminal-applications.read` scope.
   */
  async get(
    request: operations.GetTerminalApplicationRequest,
    options?: RequestOptions,
  ): Promise<operations.GetTerminalApplicationResponse> {
    return unwrapAsync(terminalApplicationsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a specific terminal application.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/terminal-applications.write` scope.
   */
  async delete(
    request: operations.DeleteTerminalApplicationRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteTerminalApplicationResponse | undefined> {
    return unwrapAsync(terminalApplicationsDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Register a new version of a terminal application. For Android applications, this is used to register a new version code of the application.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/terminal-applications.write` scope.
   */
  async createVersion(
    request: operations.CreateTerminalApplicationVersionRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateTerminalApplicationVersionResponse> {
    return unwrapAsync(terminalApplicationsCreateVersion(
      this,
      request,
      options,
    ));
  }
}
