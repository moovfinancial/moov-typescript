/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { cardsDisable } from "../funcs/cardsDisable.js";
import { cardsGet } from "../funcs/cardsGet.js";
import { cardsLink } from "../funcs/cardsLink.js";
import { cardsList } from "../funcs/cardsList.js";
import { cardsUpdate } from "../funcs/cardsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Cards extends ClientSDK {
  /**
   * Link a card to an existing Moov account.
   *
   * Read our [accept card payments guide](https://docs.moov.io/guides/sources/cards/accept-card-payments/#link-a-card) to learn more.
   *
   * Only use this endpoint if you have provided Moov with a copy of your PCI attestation of compliance.
   *
   * During card linking, the provided data will be verified by submitting a $0 authorization (account verification) request.
   * If `merchantAccountID` is provided, the authorization request will contain that account's statement descriptor and address.
   * Otherwise, the platform account's profile will be used. If no statement descriptor has been set, the authorization will
   * use the account's name instead.
   *
   * It is strongly recommended that callers include the `X-Wait-For` header, set to `payment-method`, if the newly linked
   * card is intended to be used right away. If this header is not included, the caller will need to poll the [List Payment
   * Methods](https://docs.moov.io/api/sources/payment-methods/list/)
   * endpoint to wait for the new payment methods to be available for use.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/accounts/{accountID}/cards.write` scope.
   */
  async link(
    request: operations.LinkCardRequest,
    options?: RequestOptions,
  ): Promise<operations.LinkCardResponse> {
    return unwrapAsync(cardsLink(
      this,
      request,
      options,
    ));
  }

  /**
   * List all the active cards associated with a Moov account.
   *
   * Read our [accept card payments guide](https://docs.moov.io/guides/sources/cards/accept-card-payments/) to learn more.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/accounts/{accountID}/cards.read` scope.
   */
  async list(
    request: operations.ListCardsRequest,
    options?: RequestOptions,
  ): Promise<operations.ListCardsResponse> {
    return unwrapAsync(cardsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Fetch a specific card associated with a Moov account.
   *
   * Read our [accept card payments guide](https://docs.moov.io/guides/sources/cards/accept-card-payments/) to learn more.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/accounts/{accountID}/cards.read` scope.
   */
  async get(
    request: operations.GetCardRequest,
    options?: RequestOptions,
  ): Promise<operations.GetCardResponse> {
    return unwrapAsync(cardsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a linked card and/or resubmit it for verification.
   *
   * If a value is provided for CVV, a new verification ($0 authorization) will be submitted for the card. Updating the expiration
   * date or
   * address will update the information stored on file for the card but will not be verified.
   *
   * Read our [accept card payments guide](https://docs.moov.io/guides/sources/cards/accept-card-payments/#reverify-a-card) to learn
   * more.
   *
   * Only use this endpoint if you have provided Moov with a copy of your PCI attestation of compliance.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/accounts/{accountID}/cards.write` scope.
   */
  async update(
    request: operations.UpdateCardRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateCardResponse> {
    return unwrapAsync(cardsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Disables a card associated with a Moov account.
   *
   * To access this endpoint using an [access token](https://docs.moov.io/api/authentication/access-tokens/)
   * you'll need to specify the `/accounts/{accountID}/cards.write` scope.
   */
  async disable(
    request: operations.DisableCardRequest,
    options?: RequestOptions,
  ): Promise<operations.DisableCardResponse | undefined> {
    return unwrapAsync(cardsDisable(
      this,
      request,
      options,
    ));
  }
}
