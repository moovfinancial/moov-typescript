/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { authenticationCreateAuthToken } from "../funcs/authenticationCreateAuthToken.js";
import { authenticationRevokeAuthToken } from "../funcs/authenticationRevokeAuthToken.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Authentication extends ClientSDK {
  /**
   * Revoke an auth token.
   *
   * Allows clients to notify the authorization server that a previously obtained refresh or access token is no longer needed.
   */
  async revokeAuthToken(
    request: operations.RevokeAuthTokenRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(authenticationRevokeAuthToken(
      this,
      request,
      options,
    ));
  }

  /**
   * Create or refresh an access token.
   */
  async createAuthToken(
    request: operations.CreateAuthTokenRequest,
    options?: RequestOptions,
  ): Promise<components.AuthToken> {
    return unwrapAsync(authenticationCreateAuthToken(
      this,
      request,
      options,
    ));
  }
}
