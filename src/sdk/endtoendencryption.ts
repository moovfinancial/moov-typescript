/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { endToEndEncryptionGenerateEndToEndKey } from "../funcs/endToEndEncryptionGenerateEndToEndKey.js";
import { endToEndEncryptionTestEndToEndToken } from "../funcs/endToEndEncryptionTestEndToEndToken.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class EndToEndEncryption extends ClientSDK {
  /**
   * Allows for testing a JWE token to ensure it's acceptable by Moov.
   *
   * To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need
   * to specify the `/ping.read` scope.
   */
  async testEndToEndToken(
    security: operations.TestEndToEndTokenSecurity,
    request: operations.TestEndToEndTokenRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(endToEndEncryptionTestEndToEndToken(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Generates a public key used to create a JWE token for passing secure authentication data through non-PCI compliant intermediaries.
   */
  async generateEndToEndKey(
    request: operations.GenerateEndToEndKeyRequest,
    options?: RequestOptions,
  ): Promise<components.JSONWebKey> {
    return unwrapAsync(endToEndEncryptionGenerateEndToEndKey(
      this,
      request,
      options,
    ));
  }
}
