// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type CreateTransferGlobals struct {
	// Specify an API version.
	//
	// API versioning follows the format `vYYYY.QQ.BB`, where
	//   - `YYYY` is the year
	//   - `QQ` is the two-digit month for the first month of the quarter (e.g., 01, 04, 07, 10)
	//   - `BB` is the build number, starting at `.01`, for subsequent builds in the same quarter.
	//     - For example, `v2024.01.00` is the initial release of the first quarter of 2024.
	//
	// The `latest` version represents the most recent development state. It may include breaking changes and should be treated as a beta release.
	XMoovVersion *string `default:"v2024.01.00" header:"style=simple,explode=false,name=x-moov-version"`
}

func (c CreateTransferGlobals) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateTransferGlobals) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateTransferGlobals) GetXMoovVersion() *string {
	if o == nil {
		return nil
	}
	return o.XMoovVersion
}

type CreateTransferRequest struct {
	// Specify an API version.
	//
	// API versioning follows the format `vYYYY.QQ.BB`, where
	//   - `YYYY` is the year
	//   - `QQ` is the two-digit month for the first month of the quarter (e.g., 01, 04, 07, 10)
	//   - `BB` is the build number, starting at `.01`, for subsequent builds in the same quarter.
	//     - For example, `v2024.01.00` is the initial release of the first quarter of 2024.
	//
	// The `latest` version represents the most recent development state. It may include breaking changes and should be treated as a beta release.
	XMoovVersion *string `default:"v2024.01.00" header:"style=simple,explode=false,name=x-moov-version"`
	// Prevents duplicate transfers from being created.
	XIdempotencyKey string `header:"style=simple,explode=false,name=x-idempotency-key"`
	// Optional header that indicates whether to return a synchronous response that includes full transfer and rail-specific details or an
	// asynchronous response indicating the transfer was created (this is the default response if the header is omitted). A timeout will occur after 15 seconds.
	XWaitFor *components.TransferWaitFor `header:"style=simple,explode=false,name=x-wait-for"`
	// Your Moov account ID.
	AccountID      string                    `pathParam:"style=simple,explode=false,name=accountID"`
	CreateTransfer components.CreateTransfer `request:"mediaType=application/json"`
}

func (c CreateTransferRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateTransferRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateTransferRequest) GetXMoovVersion() *string {
	if o == nil {
		return nil
	}
	return o.XMoovVersion
}

func (o *CreateTransferRequest) GetXIdempotencyKey() string {
	if o == nil {
		return ""
	}
	return o.XIdempotencyKey
}

func (o *CreateTransferRequest) GetXWaitFor() *components.TransferWaitFor {
	if o == nil {
		return nil
	}
	return o.XWaitFor
}

func (o *CreateTransferRequest) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *CreateTransferRequest) GetCreateTransfer() components.CreateTransfer {
	if o == nil {
		return components.CreateTransfer{}
	}
	return o.CreateTransfer
}

type CreateTransferResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request completed successfully.
	CreatedTransfer *components.CreatedTransfer
	// A transfer was successfully created but an error occurred while generating the synchronous response. The asynchronous response object will be returned.
	AsyncTransfer *components.AsyncTransfer
	// The transfer was created, but rail-specific details may not be available within the 15 second timeout window.
	Transfer *components.Transfer
	Headers  map[string][]string
}

func (o *CreateTransferResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateTransferResponse) GetCreatedTransfer() *components.CreatedTransfer {
	if o == nil {
		return nil
	}
	return o.CreatedTransfer
}

func (o *CreateTransferResponse) GetAsyncTransfer() *components.AsyncTransfer {
	if o == nil {
		return nil
	}
	return o.AsyncTransfer
}

func (o *CreateTransferResponse) GetTransfer() *components.Transfer {
	if o == nil {
		return nil
	}
	return o.Transfer
}

func (o *CreateTransferResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
