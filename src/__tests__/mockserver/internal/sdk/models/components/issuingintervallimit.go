// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// IssuingIntervalLimit - Specifies the time frame for the velocity limit. Currently supports only per-transaction limits.
type IssuingIntervalLimit string

const (
	IssuingIntervalLimitPerTransaction IssuingIntervalLimit = "per-transaction"
)

func (e IssuingIntervalLimit) ToPointer() *IssuingIntervalLimit {
	return &e
}
func (e *IssuingIntervalLimit) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "per-transaction":
		*e = IssuingIntervalLimit(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IssuingIntervalLimit: %v", v)
	}
}
