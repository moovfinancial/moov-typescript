// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

// FileDetails - Describes a file linked to a Moov account.
type FileDetails struct {
	FileID    string `json:"fileID"`
	FileName  string `json:"fileName"`
	AccountID string `json:"accountID"`
	// The file's purpose.
	FilePurpose FilePurpose `json:"filePurpose"`
	// The file's status.
	FileStatus     FileStatus `json:"fileStatus"`
	Metadata       string     `json:"metadata"`
	DecisionReason *string    `json:"decisionReason,omitempty"`
	FileSizeBytes  int64      `json:"fileSizeBytes"`
	CreatedOn      time.Time  `json:"createdOn"`
	UpdatedOn      time.Time  `json:"updatedOn"`
}

func (f FileDetails) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *FileDetails) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *FileDetails) GetFileID() string {
	if o == nil {
		return ""
	}
	return o.FileID
}

func (o *FileDetails) GetFileName() string {
	if o == nil {
		return ""
	}
	return o.FileName
}

func (o *FileDetails) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *FileDetails) GetFilePurpose() FilePurpose {
	if o == nil {
		return FilePurpose("")
	}
	return o.FilePurpose
}

func (o *FileDetails) GetFileStatus() FileStatus {
	if o == nil {
		return FileStatus("")
	}
	return o.FileStatus
}

func (o *FileDetails) GetMetadata() string {
	if o == nil {
		return ""
	}
	return o.Metadata
}

func (o *FileDetails) GetDecisionReason() *string {
	if o == nil {
		return nil
	}
	return o.DecisionReason
}

func (o *FileDetails) GetFileSizeBytes() int64 {
	if o == nil {
		return 0
	}
	return o.FileSizeBytes
}

func (o *FileDetails) GetCreatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedOn
}

func (o *FileDetails) GetUpdatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedOn
}
