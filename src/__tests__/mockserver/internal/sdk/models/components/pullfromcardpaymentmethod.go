// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type PullFromCardPaymentMethodPaymentMethodType string

const (
	PullFromCardPaymentMethodPaymentMethodTypePullFromCard PullFromCardPaymentMethodPaymentMethodType = "pull-from-card"
)

func (e PullFromCardPaymentMethodPaymentMethodType) ToPointer() *PullFromCardPaymentMethodPaymentMethodType {
	return &e
}
func (e *PullFromCardPaymentMethodPaymentMethodType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pull-from-card":
		*e = PullFromCardPaymentMethodPaymentMethodType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PullFromCardPaymentMethodPaymentMethodType: %v", v)
	}
}

type PullFromCardPaymentMethod struct {
	// ID of the payment method.
	PaymentMethodID   string                                     `json:"paymentMethodID"`
	PaymentMethodType PullFromCardPaymentMethodPaymentMethodType `json:"paymentMethodType"`
	// A card as contained within a payment method.
	Card PaymentMethodsCard `json:"card"`
}

func (o *PullFromCardPaymentMethod) GetPaymentMethodID() string {
	if o == nil {
		return ""
	}
	return o.PaymentMethodID
}

func (o *PullFromCardPaymentMethod) GetPaymentMethodType() PullFromCardPaymentMethodPaymentMethodType {
	if o == nil {
		return PullFromCardPaymentMethodPaymentMethodType("")
	}
	return o.PaymentMethodType
}

func (o *PullFromCardPaymentMethod) GetCard() PaymentMethodsCard {
	if o == nil {
		return PaymentMethodsCard{}
	}
	return o.Card
}
