// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type FulfillmentMethod string

const (
	FulfillmentMethodBillOrDebtPayment        FulfillmentMethod = "bill-or-debt-payment"
	FulfillmentMethodDigitalContent           FulfillmentMethod = "digital-content"
	FulfillmentMethodDonation                 FulfillmentMethod = "donation"
	FulfillmentMethodInPersonService          FulfillmentMethod = "in-person-service"
	FulfillmentMethodLocalPickupOrDelivery    FulfillmentMethod = "local-pickup-or-delivery"
	FulfillmentMethodOther                    FulfillmentMethod = "other"
	FulfillmentMethodRemoteService            FulfillmentMethod = "remote-service"
	FulfillmentMethodShippedPhysicalGoods     FulfillmentMethod = "shipped-physical-goods"
	FulfillmentMethodSubscriptionOrMembership FulfillmentMethod = "subscription-or-membership"
)

func (e FulfillmentMethod) ToPointer() *FulfillmentMethod {
	return &e
}
func (e *FulfillmentMethod) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "bill-or-debt-payment":
		fallthrough
	case "digital-content":
		fallthrough
	case "donation":
		fallthrough
	case "in-person-service":
		fallthrough
	case "local-pickup-or-delivery":
		fallthrough
	case "other":
		fallthrough
	case "remote-service":
		fallthrough
	case "shipped-physical-goods":
		fallthrough
	case "subscription-or-membership":
		*e = FulfillmentMethod(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FulfillmentMethod: %v", v)
	}
}
