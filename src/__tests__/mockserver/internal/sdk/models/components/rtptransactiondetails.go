// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

// RTPTransactionDetails - RTP specific details about the transaction.
type RTPTransactionDetails struct {
	// Status of a transaction within the RTP lifecycle.
	Status RTPTransactionStatus `json:"status"`
	// Response code returned by network on failure.
	NetworkResponseCode *string `json:"networkResponseCode,omitempty"`
	// Status codes for RTP failures.
	FailureCode              *RTPFailureCode `json:"failureCode,omitempty"`
	InitiatedOn              *time.Time      `json:"initiatedOn,omitempty"`
	CompletedOn              *time.Time      `json:"completedOn,omitempty"`
	FailedOn                 *time.Time      `json:"failedOn,omitempty"`
	AcceptedWithoutPostingOn *time.Time      `json:"acceptedWithoutPostingOn,omitempty"`
}

func (r RTPTransactionDetails) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RTPTransactionDetails) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RTPTransactionDetails) GetStatus() RTPTransactionStatus {
	if o == nil {
		return RTPTransactionStatus("")
	}
	return o.Status
}

func (o *RTPTransactionDetails) GetNetworkResponseCode() *string {
	if o == nil {
		return nil
	}
	return o.NetworkResponseCode
}

func (o *RTPTransactionDetails) GetFailureCode() *RTPFailureCode {
	if o == nil {
		return nil
	}
	return o.FailureCode
}

func (o *RTPTransactionDetails) GetInitiatedOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.InitiatedOn
}

func (o *RTPTransactionDetails) GetCompletedOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.CompletedOn
}

func (o *RTPTransactionDetails) GetFailedOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.FailedOn
}

func (o *RTPTransactionDetails) GetAcceptedWithoutPostingOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.AcceptedWithoutPostingOn
}
