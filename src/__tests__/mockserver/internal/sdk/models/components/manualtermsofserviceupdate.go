// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

// ManualTermsOfServiceUpdate - Describes the acceptance of the Terms of Service. All data is required, and must be from the user.
type ManualTermsOfServiceUpdate struct {
	// The date and time the terms of service were accepted.
	AcceptedDate *time.Time `json:"acceptedDate,omitempty"`
	// The IP address from which the terms of service were accepted.
	AcceptedIP *string `json:"acceptedIP,omitempty"`
	// The user-agent of the user making the request.
	AcceptedUserAgent *string `json:"acceptedUserAgent,omitempty"`
	AcceptedDomain    *string `json:"acceptedDomain,omitempty"`
}

func (m ManualTermsOfServiceUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *ManualTermsOfServiceUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *ManualTermsOfServiceUpdate) GetAcceptedDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.AcceptedDate
}

func (o *ManualTermsOfServiceUpdate) GetAcceptedIP() *string {
	if o == nil {
		return nil
	}
	return o.AcceptedIP
}

func (o *ManualTermsOfServiceUpdate) GetAcceptedUserAgent() *string {
	if o == nil {
		return nil
	}
	return o.AcceptedUserAgent
}

func (o *ManualTermsOfServiceUpdate) GetAcceptedDomain() *string {
	if o == nil {
		return nil
	}
	return o.AcceptedDomain
}
