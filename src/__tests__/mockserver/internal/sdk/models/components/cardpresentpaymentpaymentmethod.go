// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type CardPresentPaymentPaymentMethodPaymentMethodType string

const (
	CardPresentPaymentPaymentMethodPaymentMethodTypeCardPresentPayment CardPresentPaymentPaymentMethodPaymentMethodType = "card-present-payment"
)

func (e CardPresentPaymentPaymentMethodPaymentMethodType) ToPointer() *CardPresentPaymentPaymentMethodPaymentMethodType {
	return &e
}
func (e *CardPresentPaymentPaymentMethodPaymentMethodType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "card-present-payment":
		*e = CardPresentPaymentPaymentMethodPaymentMethodType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CardPresentPaymentPaymentMethodPaymentMethodType: %v", v)
	}
}

// CardPresentPaymentPaymentMethod - A card used at point of sale terminal for a card present transaction as contained within a payment method.
type CardPresentPaymentPaymentMethod struct {
	// ID of the payment method.
	PaymentMethodID   string                                           `json:"paymentMethodID"`
	PaymentMethodType CardPresentPaymentPaymentMethodPaymentMethodType `json:"paymentMethodType"`
	// Describes payment card details captured with tap or in-person payment.
	TerminalCard *TerminalCard `json:"terminalCard,omitempty"`
}

func (o *CardPresentPaymentPaymentMethod) GetPaymentMethodID() string {
	if o == nil {
		return ""
	}
	return o.PaymentMethodID
}

func (o *CardPresentPaymentPaymentMethod) GetPaymentMethodType() CardPresentPaymentPaymentMethodPaymentMethodType {
	if o == nil {
		return CardPresentPaymentPaymentMethodPaymentMethodType("")
	}
	return o.PaymentMethodType
}

func (o *CardPresentPaymentPaymentMethod) GetTerminalCard() *TerminalCard {
	if o == nil {
		return nil
	}
	return o.TerminalCard
}
