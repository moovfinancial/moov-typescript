// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type CardTransactionFailureCode string

const (
	CardTransactionFailureCodeCallIssuer                CardTransactionFailureCode = "call-issuer"
	CardTransactionFailureCodeDoNotHonor                CardTransactionFailureCode = "do-not-honor"
	CardTransactionFailureCodeProcessingError           CardTransactionFailureCode = "processing-error"
	CardTransactionFailureCodeInvalidTransaction        CardTransactionFailureCode = "invalid-transaction"
	CardTransactionFailureCodeInvalidAmount             CardTransactionFailureCode = "invalid-amount"
	CardTransactionFailureCodeNoSuchIssuer              CardTransactionFailureCode = "no-such-issuer"
	CardTransactionFailureCodeReenterTransaction        CardTransactionFailureCode = "reenter-transaction"
	CardTransactionFailureCodeCvvMismatch               CardTransactionFailureCode = "cvv-mismatch"
	CardTransactionFailureCodeLostOrStolen              CardTransactionFailureCode = "lost-or-stolen"
	CardTransactionFailureCodeInsufficientFunds         CardTransactionFailureCode = "insufficient-funds"
	CardTransactionFailureCodeInvalidCardNumber         CardTransactionFailureCode = "invalid-card-number"
	CardTransactionFailureCodeInvalidMerchant           CardTransactionFailureCode = "invalid-merchant"
	CardTransactionFailureCodeExpiredCard               CardTransactionFailureCode = "expired-card"
	CardTransactionFailureCodeIncorrectPin              CardTransactionFailureCode = "incorrect-pin"
	CardTransactionFailureCodeTransactionNotAllowed     CardTransactionFailureCode = "transaction-not-allowed"
	CardTransactionFailureCodeSuspectedFraud            CardTransactionFailureCode = "suspected-fraud"
	CardTransactionFailureCodeAmountLimitExceeded       CardTransactionFailureCode = "amount-limit-exceeded"
	CardTransactionFailureCodeVelocityLimitExceeded     CardTransactionFailureCode = "velocity-limit-exceeded"
	CardTransactionFailureCodeRevocationOfAuthorization CardTransactionFailureCode = "revocation-of-authorization"
	CardTransactionFailureCodeCardNotActivated          CardTransactionFailureCode = "card-not-activated"
	CardTransactionFailureCodeIssuerNotAvailable        CardTransactionFailureCode = "issuer-not-available"
	CardTransactionFailureCodeCouldNotRoute             CardTransactionFailureCode = "could-not-route"
	CardTransactionFailureCodeCardholderAccountClosed   CardTransactionFailureCode = "cardholder-account-closed"
	CardTransactionFailureCodeUnknownIssue              CardTransactionFailureCode = "unknown-issue"
	CardTransactionFailureCodeDuplicateTransaction      CardTransactionFailureCode = "duplicate-transaction"
)

func (e CardTransactionFailureCode) ToPointer() *CardTransactionFailureCode {
	return &e
}
func (e *CardTransactionFailureCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "call-issuer":
		fallthrough
	case "do-not-honor":
		fallthrough
	case "processing-error":
		fallthrough
	case "invalid-transaction":
		fallthrough
	case "invalid-amount":
		fallthrough
	case "no-such-issuer":
		fallthrough
	case "reenter-transaction":
		fallthrough
	case "cvv-mismatch":
		fallthrough
	case "lost-or-stolen":
		fallthrough
	case "insufficient-funds":
		fallthrough
	case "invalid-card-number":
		fallthrough
	case "invalid-merchant":
		fallthrough
	case "expired-card":
		fallthrough
	case "incorrect-pin":
		fallthrough
	case "transaction-not-allowed":
		fallthrough
	case "suspected-fraud":
		fallthrough
	case "amount-limit-exceeded":
		fallthrough
	case "velocity-limit-exceeded":
		fallthrough
	case "revocation-of-authorization":
		fallthrough
	case "card-not-activated":
		fallthrough
	case "issuer-not-available":
		fallthrough
	case "could-not-route":
		fallthrough
	case "cardholder-account-closed":
		fallthrough
	case "unknown-issue":
		fallthrough
	case "duplicate-transaction":
		*e = CardTransactionFailureCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CardTransactionFailureCode: %v", v)
	}
}
