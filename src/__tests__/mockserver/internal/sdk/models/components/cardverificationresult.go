// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type CardVerificationResult string

const (
	CardVerificationResultNoMatch      CardVerificationResult = "noMatch"
	CardVerificationResultMatch        CardVerificationResult = "match"
	CardVerificationResultNotChecked   CardVerificationResult = "notChecked"
	CardVerificationResultUnavailable  CardVerificationResult = "unavailable"
	CardVerificationResultPartialMatch CardVerificationResult = "partialMatch"
)

func (e CardVerificationResult) ToPointer() *CardVerificationResult {
	return &e
}
func (e *CardVerificationResult) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "noMatch":
		fallthrough
	case "match":
		fallthrough
	case "notChecked":
		fallthrough
	case "unavailable":
		fallthrough
	case "partialMatch":
		*e = CardVerificationResult(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CardVerificationResult: %v", v)
	}
}
