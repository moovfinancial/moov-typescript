// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type AchDebitCollectPaymentMethodPaymentMethodType string

const (
	AchDebitCollectPaymentMethodPaymentMethodTypeAchDebitCollect AchDebitCollectPaymentMethodPaymentMethodType = "ach-debit-collect"
)

func (e AchDebitCollectPaymentMethodPaymentMethodType) ToPointer() *AchDebitCollectPaymentMethodPaymentMethodType {
	return &e
}
func (e *AchDebitCollectPaymentMethodPaymentMethodType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ach-debit-collect":
		*e = AchDebitCollectPaymentMethodPaymentMethodType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AchDebitCollectPaymentMethodPaymentMethodType: %v", v)
	}
}

type AchDebitCollectPaymentMethod struct {
	// ID of the payment method.
	PaymentMethodID   string                                        `json:"paymentMethodID"`
	PaymentMethodType AchDebitCollectPaymentMethodPaymentMethodType `json:"paymentMethodType"`
	// A bank account as contained within a payment method.
	BankAccount PaymentMethodsBankAccount `json:"bankAccount"`
}

func (o *AchDebitCollectPaymentMethod) GetPaymentMethodID() string {
	if o == nil {
		return ""
	}
	return o.PaymentMethodID
}

func (o *AchDebitCollectPaymentMethod) GetPaymentMethodType() AchDebitCollectPaymentMethodPaymentMethodType {
	if o == nil {
		return AchDebitCollectPaymentMethodPaymentMethodType("")
	}
	return o.PaymentMethodType
}

func (o *AchDebitCollectPaymentMethod) GetBankAccount() PaymentMethodsBankAccount {
	if o == nil {
		return PaymentMethodsBankAccount{}
	}
	return o.BankAccount
}
