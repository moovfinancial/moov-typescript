// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type SweepStatus string

const (
	SweepStatusAccruing       SweepStatus = "accruing"
	SweepStatusActionRequired SweepStatus = "action-required"
	SweepStatusCanceled       SweepStatus = "canceled"
	SweepStatusClosed         SweepStatus = "closed"
	SweepStatusFailed         SweepStatus = "failed"
	SweepStatusPaid           SweepStatus = "paid"
)

func (e SweepStatus) ToPointer() *SweepStatus {
	return &e
}
func (e *SweepStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "accruing":
		fallthrough
	case "action-required":
		fallthrough
	case "canceled":
		fallthrough
	case "closed":
		fallthrough
	case "failed":
		fallthrough
	case "paid":
		*e = SweepStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SweepStatus: %v", v)
	}
}
