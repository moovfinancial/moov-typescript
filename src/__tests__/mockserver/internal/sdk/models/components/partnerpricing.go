// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type PartnerPricing struct {
	PlanID string `json:"planID"`
	// The name of the fee plan.
	Name string `json:"name"`
	// A description of the fee plan.
	Description *string `json:"description,omitempty"`
	// The integer percentage value of the revenue split for partner.
	RevenueShare int64 `json:"revenueShare"`
	// Specifies the card processing pricing model
	CardAcquiringModel CardAcquiringModel `json:"cardAcquiringModel"`
	BillableFees       []BillableFee      `json:"billableFees"`
	// The minimum spending amount that must be met in the billing period. If actual usage is below the minimum amount, account is charged the difference.
	MinimumCommitment MinimumCommitment `json:"minimumCommitment"`
	// Fixed recurring amount paid in the billing period regardless of usage.
	MonthlyPlatformFee MonthlyPlatformFee `json:"monthlyPlatformFee"`
	CreatedAt          time.Time          `json:"createdAt"`
}

func (p PartnerPricing) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PartnerPricing) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PartnerPricing) GetPlanID() string {
	if o == nil {
		return ""
	}
	return o.PlanID
}

func (o *PartnerPricing) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *PartnerPricing) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *PartnerPricing) GetRevenueShare() int64 {
	if o == nil {
		return 0
	}
	return o.RevenueShare
}

func (o *PartnerPricing) GetCardAcquiringModel() CardAcquiringModel {
	if o == nil {
		return CardAcquiringModel("")
	}
	return o.CardAcquiringModel
}

func (o *PartnerPricing) GetBillableFees() []BillableFee {
	if o == nil {
		return []BillableFee{}
	}
	return o.BillableFees
}

func (o *PartnerPricing) GetMinimumCommitment() MinimumCommitment {
	if o == nil {
		return MinimumCommitment{}
	}
	return o.MinimumCommitment
}

func (o *PartnerPricing) GetMonthlyPlatformFee() MonthlyPlatformFee {
	if o == nil {
		return MonthlyPlatformFee{}
	}
	return o.MonthlyPlatformFee
}

func (o *PartnerPricing) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}
