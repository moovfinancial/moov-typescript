// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

// Occurrence - Occurrences to either create or modify.
type Occurrence struct {
	// If set to true, will cancel the occurrence. If set false will resume the occurrence. If unset leaves the value unchanged.
	Canceled *bool `json:"canceled,omitempty"`
	//   If set this defines what occurrence to modify, if invalid will fail the request.
	//   If null or "" it defines to add a new occurrence.
	OccurrenceID *string `json:"occurrenceID,omitempty"`
	// Timestamp to run the transfer after. Value must be into the future.
	RunOn *time.Time `json:"runOn,omitempty"`
	// Defines the attributes of a transfer.
	RunTransfer *RunTransfer `json:"runTransfer,omitempty"`
}

func (o Occurrence) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *Occurrence) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Occurrence) GetCanceled() *bool {
	if o == nil {
		return nil
	}
	return o.Canceled
}

func (o *Occurrence) GetOccurrenceID() *string {
	if o == nil {
		return nil
	}
	return o.OccurrenceID
}

func (o *Occurrence) GetRunOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.RunOn
}

func (o *Occurrence) GetRunTransfer() *RunTransfer {
	if o == nil {
		return nil
	}
	return o.RunTransfer
}
