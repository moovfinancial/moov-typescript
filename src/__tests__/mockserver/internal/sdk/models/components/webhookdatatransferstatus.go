// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type WebhookDataTransferStatus string

const (
	WebhookDataTransferStatusCreated                           WebhookDataTransferStatus = "created"
	WebhookDataTransferStatusPending                           WebhookDataTransferStatus = "pending"
	WebhookDataTransferStatusCompleted                         WebhookDataTransferStatus = "completed"
	WebhookDataTransferStatusFailed                            WebhookDataTransferStatus = "failed"
	WebhookDataTransferStatusReversed                          WebhookDataTransferStatus = "reversed"
	WebhookDataTransferStatusQueued                            WebhookDataTransferStatus = "queued"
	WebhookDataTransferStatusCanceled                          WebhookDataTransferStatus = "canceled"
	WebhookDataTransferStatusSourceCompleted                   WebhookDataTransferStatus = "source.completed"
	WebhookDataTransferStatusSourceCorrected                   WebhookDataTransferStatus = "source.corrected"
	WebhookDataTransferStatusSourceInitiated                   WebhookDataTransferStatus = "source.initiated"
	WebhookDataTransferStatusSourceReturned                    WebhookDataTransferStatus = "source.returned"
	WebhookDataTransferStatusSourceOriginated                  WebhookDataTransferStatus = "source.originated"
	WebhookDataTransferStatusSourceConfirmed                   WebhookDataTransferStatus = "source.confirmed"
	WebhookDataTransferStatusSourceSettled                     WebhookDataTransferStatus = "source.settled"
	WebhookDataTransferStatusSourceFailed                      WebhookDataTransferStatus = "source.failed"
	WebhookDataTransferStatusSourceCanceled                    WebhookDataTransferStatus = "source.canceled"
	WebhookDataTransferStatusDestinationCompleted              WebhookDataTransferStatus = "destination.completed"
	WebhookDataTransferStatusDestinationCorrected              WebhookDataTransferStatus = "destination.corrected"
	WebhookDataTransferStatusDestinationInitiated              WebhookDataTransferStatus = "destination.initiated"
	WebhookDataTransferStatusDestinationReturned               WebhookDataTransferStatus = "destination.returned"
	WebhookDataTransferStatusDestinationOriginated             WebhookDataTransferStatus = "destination.originated"
	WebhookDataTransferStatusDestinationConfirmed              WebhookDataTransferStatus = "destination.confirmed"
	WebhookDataTransferStatusDestinationFailed                 WebhookDataTransferStatus = "destination.failed"
	WebhookDataTransferStatusDestinationAcceptedWithoutPosting WebhookDataTransferStatus = "destination.accepted-without-posting"
)

func (e WebhookDataTransferStatus) ToPointer() *WebhookDataTransferStatus {
	return &e
}
func (e *WebhookDataTransferStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created":
		fallthrough
	case "pending":
		fallthrough
	case "completed":
		fallthrough
	case "failed":
		fallthrough
	case "reversed":
		fallthrough
	case "queued":
		fallthrough
	case "canceled":
		fallthrough
	case "source.completed":
		fallthrough
	case "source.corrected":
		fallthrough
	case "source.initiated":
		fallthrough
	case "source.returned":
		fallthrough
	case "source.originated":
		fallthrough
	case "source.confirmed":
		fallthrough
	case "source.settled":
		fallthrough
	case "source.failed":
		fallthrough
	case "source.canceled":
		fallthrough
	case "destination.completed":
		fallthrough
	case "destination.corrected":
		fallthrough
	case "destination.initiated":
		fallthrough
	case "destination.returned":
		fallthrough
	case "destination.originated":
		fallthrough
	case "destination.confirmed":
		fallthrough
	case "destination.failed":
		fallthrough
	case "destination.accepted-without-posting":
		*e = WebhookDataTransferStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebhookDataTransferStatus: %v", v)
	}
}
