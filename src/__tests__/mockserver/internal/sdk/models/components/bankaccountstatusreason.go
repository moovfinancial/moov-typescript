// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// BankAccountStatusReason - The reason the bank account status changed to the current value.
type BankAccountStatusReason string

const (
	BankAccountStatusReasonBankAccountCreated           BankAccountStatusReason = "bank-account-created"
	BankAccountStatusReasonVerificationInitiated        BankAccountStatusReason = "verification-initiated"
	BankAccountStatusReasonMicroDepositAttemptsExceeded BankAccountStatusReason = "micro-deposit-attempts-exceeded"
	BankAccountStatusReasonMicroDepositExpired          BankAccountStatusReason = "micro-deposit-expired"
	BankAccountStatusReasonMaxVerificationFailures      BankAccountStatusReason = "max-verification-failures"
	BankAccountStatusReasonVerificationAttemptsExceeded BankAccountStatusReason = "verification-attempts-exceeded"
	BankAccountStatusReasonVerificationExpired          BankAccountStatusReason = "verification-expired"
	BankAccountStatusReasonVerificationSuccessful       BankAccountStatusReason = "verification-successful"
	BankAccountStatusReasonAchDebitReturn               BankAccountStatusReason = "ach-debit-return"
	BankAccountStatusReasonAchCreditReturn              BankAccountStatusReason = "ach-credit-return"
	BankAccountStatusReasonRtpCreditFailure             BankAccountStatusReason = "rtp-credit-failure"
	BankAccountStatusReasonMicroDepositReturn           BankAccountStatusReason = "micro-deposit-return"
	BankAccountStatusReasonAdminAction                  BankAccountStatusReason = "admin-action"
	BankAccountStatusReasonOther                        BankAccountStatusReason = "other"
)

func (e BankAccountStatusReason) ToPointer() *BankAccountStatusReason {
	return &e
}
func (e *BankAccountStatusReason) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "bank-account-created":
		fallthrough
	case "verification-initiated":
		fallthrough
	case "micro-deposit-attempts-exceeded":
		fallthrough
	case "micro-deposit-expired":
		fallthrough
	case "max-verification-failures":
		fallthrough
	case "verification-attempts-exceeded":
		fallthrough
	case "verification-expired":
		fallthrough
	case "verification-successful":
		fallthrough
	case "ach-debit-return":
		fallthrough
	case "ach-credit-return":
		fallthrough
	case "rtp-credit-failure":
		fallthrough
	case "micro-deposit-return":
		fallthrough
	case "admin-action":
		fallthrough
	case "other":
		*e = BankAccountStatusReason(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BankAccountStatusReason: %v", v)
	}
}
