// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// ReceiptRequest - A receipt request for a specific transfer, schedule, or schedule occurrence.
type ReceiptRequest struct {
	// The type of receipt being requested.
	Kind ReceiptKind `json:"kind"`
	// The email address to send the receipt to.
	// Either email or emailAccountID must be provided, but not both.
	Email *string `json:"email,omitempty"`
	// The accountID to send the receipt to.
	// Either email or emailAccountID must be provided, but not both.
	EmailAccountID *string `json:"emailAccountID,omitempty"`
	// The ID of the transfer associated with this receipt.
	// Exactly one of forTransferID, forScheduleID, or forOccurrenceID must be provided.
	ForTransferID *string `json:"forTransferID,omitempty"`
	// The ID of the schedule associated with this receipt.
	// Exactly one of forTransferID, forScheduleID, or forOccurrenceID must be provided.
	ForScheduleID *string `json:"forScheduleID,omitempty"`
	// The ID of the schedule occurrence associated with this receipt.
	// Exactly one of forTransferID, forScheduleID, or forOccurrenceID must be provided.
	ForOccurrenceID *string `json:"forOccurrenceID,omitempty"`
}

func (o *ReceiptRequest) GetKind() ReceiptKind {
	if o == nil {
		return ReceiptKind("")
	}
	return o.Kind
}

func (o *ReceiptRequest) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *ReceiptRequest) GetEmailAccountID() *string {
	if o == nil {
		return nil
	}
	return o.EmailAccountID
}

func (o *ReceiptRequest) GetForTransferID() *string {
	if o == nil {
		return nil
	}
	return o.ForTransferID
}

func (o *ReceiptRequest) GetForScheduleID() *string {
	if o == nil {
		return nil
	}
	return o.ForScheduleID
}

func (o *ReceiptRequest) GetForOccurrenceID() *string {
	if o == nil {
		return nil
	}
	return o.ForOccurrenceID
}
