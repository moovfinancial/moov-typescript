// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type ApplePayPaymentMethodPaymentMethodType string

const (
	ApplePayPaymentMethodPaymentMethodTypeApplePay ApplePayPaymentMethodPaymentMethodType = "apple-pay"
)

func (e ApplePayPaymentMethodPaymentMethodType) ToPointer() *ApplePayPaymentMethodPaymentMethodType {
	return &e
}
func (e *ApplePayPaymentMethodPaymentMethodType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "apple-pay":
		*e = ApplePayPaymentMethodPaymentMethodType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApplePayPaymentMethodPaymentMethodType: %v", v)
	}
}

type ApplePayPaymentMethod struct {
	// ID of the payment method.
	PaymentMethodID   string                                 `json:"paymentMethodID"`
	PaymentMethodType ApplePayPaymentMethodPaymentMethodType `json:"paymentMethodType"`
	// Describes an Apple Pay token on a Moov account.
	ApplePay ApplePayResponse `json:"applePay"`
}

func (o *ApplePayPaymentMethod) GetPaymentMethodID() string {
	if o == nil {
		return ""
	}
	return o.PaymentMethodID
}

func (o *ApplePayPaymentMethod) GetPaymentMethodType() ApplePayPaymentMethodPaymentMethodType {
	if o == nil {
		return ApplePayPaymentMethodPaymentMethodType("")
	}
	return o.PaymentMethodType
}

func (o *ApplePayPaymentMethod) GetApplePay() ApplePayResponse {
	if o == nil {
		return ApplePayResponse{}
	}
	return o.ApplePay
}
