// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

// ManualTermsOfService - Describes the acceptance of the Terms of Service. All data is required, and must be from the user.
type ManualTermsOfService struct {
	// The date and time the terms of service were accepted.
	AcceptedDate time.Time `json:"acceptedDate"`
	// The IP address from which the terms of service were accepted.
	AcceptedIP string `json:"acceptedIP"`
	// The user-agent of the user making the request.
	AcceptedUserAgent string `json:"acceptedUserAgent"`
	AcceptedDomain    string `json:"acceptedDomain"`
}

func (m ManualTermsOfService) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *ManualTermsOfService) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *ManualTermsOfService) GetAcceptedDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.AcceptedDate
}

func (o *ManualTermsOfService) GetAcceptedIP() string {
	if o == nil {
		return ""
	}
	return o.AcceptedIP
}

func (o *ManualTermsOfService) GetAcceptedUserAgent() string {
	if o == nil {
		return ""
	}
	return o.AcceptedUserAgent
}

func (o *ManualTermsOfService) GetAcceptedDomain() string {
	if o == nil {
		return ""
	}
	return o.AcceptedDomain
}
