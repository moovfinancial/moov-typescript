// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

// WebhookEvent - Webhook events are sent to your webhook URL when certain actions occur in the Moov API. You can subscribe to these events to receive real-time notifications.
type WebhookEvent struct {
	// Unique identifier for the webhook event.
	EventID string `json:"eventID"`
	// The type of event that occurred.
	Type WebhookEventType `json:"type"`
	// The data for the webhook event. The contents are based on the event type.
	Data      WebhookData `json:"data"`
	CreatedOn time.Time   `json:"createdOn"`
}

func (w WebhookEvent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WebhookEvent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WebhookEvent) GetEventID() string {
	if o == nil {
		return ""
	}
	return o.EventID
}

func (o *WebhookEvent) GetType() WebhookEventType {
	if o == nil {
		return WebhookEventType("")
	}
	return o.Type
}

func (o *WebhookEvent) GetData() WebhookData {
	if o == nil {
		return WebhookData{}
	}
	return o.Data
}

func (o *WebhookEvent) GetCreatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedOn
}
