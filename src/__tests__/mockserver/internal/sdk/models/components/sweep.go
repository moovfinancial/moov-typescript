// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type Sweep struct {
	SweepID string      `json:"sweepID"`
	Status  SweepStatus `json:"status"`
	// The total net amount of wallet transactions accrued in the sweep.
	AccruedAmount string `json:"accruedAmount"`
	// Amount remaining in the wallet after the sweep transfer completes.
	ResidualBalance *string `json:"residualBalance,omitempty"`
	// A 3-letter ISO 4217 currency code.
	Currency string `json:"currency"`
	// The date-time the sweep began accruing transactions.
	AccrualStartedOn time.Time `json:"accrualStartedOn"`
	// The date-time the sweep stopped accruing transactions.
	AccrualEndedOn *time.Time `json:"accrualEndedOn,omitempty"`
	// ID of the payment method.
	PushPaymentMethodID *string `json:"pushPaymentMethodID,omitempty"`
	// ID of the payment method.
	PullPaymentMethodID *string `json:"pullPaymentMethodID,omitempty"`
	TransferID          *string `json:"transferID,omitempty"`
	// Amount that is transferred.
	TransferAmount *string `json:"transferAmount,omitempty"`
	// The text that appears on the banking statement. The default descriptor is a 10 character ID if an override is not set in the sweep configs statementDescriptor.
	StatementDescriptor *string `json:"statementDescriptor,omitempty"`
	// The subtotal of each transaction type contributing to the sweep's accrued amount.
	Subtotals []SweepSubtotal `json:"subtotals,omitempty"`
}

func (s Sweep) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *Sweep) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Sweep) GetSweepID() string {
	if o == nil {
		return ""
	}
	return o.SweepID
}

func (o *Sweep) GetStatus() SweepStatus {
	if o == nil {
		return SweepStatus("")
	}
	return o.Status
}

func (o *Sweep) GetAccruedAmount() string {
	if o == nil {
		return ""
	}
	return o.AccruedAmount
}

func (o *Sweep) GetResidualBalance() *string {
	if o == nil {
		return nil
	}
	return o.ResidualBalance
}

func (o *Sweep) GetCurrency() string {
	if o == nil {
		return ""
	}
	return o.Currency
}

func (o *Sweep) GetAccrualStartedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.AccrualStartedOn
}

func (o *Sweep) GetAccrualEndedOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.AccrualEndedOn
}

func (o *Sweep) GetPushPaymentMethodID() *string {
	if o == nil {
		return nil
	}
	return o.PushPaymentMethodID
}

func (o *Sweep) GetPullPaymentMethodID() *string {
	if o == nil {
		return nil
	}
	return o.PullPaymentMethodID
}

func (o *Sweep) GetTransferID() *string {
	if o == nil {
		return nil
	}
	return o.TransferID
}

func (o *Sweep) GetTransferAmount() *string {
	if o == nil {
		return nil
	}
	return o.TransferAmount
}

func (o *Sweep) GetStatementDescriptor() *string {
	if o == nil {
		return nil
	}
	return o.StatementDescriptor
}

func (o *Sweep) GetSubtotals() []SweepSubtotal {
	if o == nil {
		return nil
	}
	return o.Subtotals
}
