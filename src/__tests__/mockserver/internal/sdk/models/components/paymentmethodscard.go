// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// PaymentMethodsCard - A card as contained within a payment method.
type PaymentMethodsCard struct {
	// ID of the card.
	CardID string `json:"cardID"`
	// Uniquely identifies a linked payment card or token.
	// For Apple Pay, the fingerprint is based on the tokenized card number and may vary based on the user's device.
	// This field can be used to identify specific payment methods across multiple accounts on your platform.
	Fingerprint string `json:"fingerprint"`
	// The card brand.
	Brand CardBrand `json:"brand"`
	// The type of the card.
	CardType CardType `json:"cardType"`
	// Last four digits of the card number
	LastFourCardNumber string `json:"lastFourCardNumber"`
	// The first six to eight digits of the card number, which identifies the financial institution that issued the card.
	Bin string `json:"bin"`
	// The expiration date of the card or token.
	Expiration CardExpiration `json:"expiration"`
	// The name of the cardholder as it appears on the card.
	HolderName     *string     `json:"holderName,omitempty"`
	BillingAddress CardAddress `json:"billingAddress"`
	// The results of submitting cardholder data to a card network for verification.
	CardVerification CardVerification `json:"cardVerification"`
	// Financial institution that issued the card.
	Issuer *string `json:"issuer,omitempty"`
	// Country where the card was issued.
	IssuerCountry *string `json:"issuerCountry,omitempty"`
	// Indicates cardholder has authorized card to be stored for future payments.
	CardOnFile        *bool   `json:"cardOnFile,omitempty"`
	MerchantAccountID *string `json:"merchantAccountID,omitempty"`
	// The results of the most recent card update request.
	CardAccountUpdater *CardAccountUpdater `json:"cardAccountUpdater,omitempty"`
	// Indicates which level of domestic push-to-card transfer is supported by the card, if any.
	DomesticPushToCard *DomesticPushToCard `json:"domesticPushToCard,omitempty"`
	// Indicates if the card supports domestic pull-from-card transfer.
	DomesticPullFromCard *DomesticPullFromCard `json:"domesticPullFromCard,omitempty"`
}

func (o *PaymentMethodsCard) GetCardID() string {
	if o == nil {
		return ""
	}
	return o.CardID
}

func (o *PaymentMethodsCard) GetFingerprint() string {
	if o == nil {
		return ""
	}
	return o.Fingerprint
}

func (o *PaymentMethodsCard) GetBrand() CardBrand {
	if o == nil {
		return CardBrand("")
	}
	return o.Brand
}

func (o *PaymentMethodsCard) GetCardType() CardType {
	if o == nil {
		return CardType("")
	}
	return o.CardType
}

func (o *PaymentMethodsCard) GetLastFourCardNumber() string {
	if o == nil {
		return ""
	}
	return o.LastFourCardNumber
}

func (o *PaymentMethodsCard) GetBin() string {
	if o == nil {
		return ""
	}
	return o.Bin
}

func (o *PaymentMethodsCard) GetExpiration() CardExpiration {
	if o == nil {
		return CardExpiration{}
	}
	return o.Expiration
}

func (o *PaymentMethodsCard) GetHolderName() *string {
	if o == nil {
		return nil
	}
	return o.HolderName
}

func (o *PaymentMethodsCard) GetBillingAddress() CardAddress {
	if o == nil {
		return CardAddress{}
	}
	return o.BillingAddress
}

func (o *PaymentMethodsCard) GetCardVerification() CardVerification {
	if o == nil {
		return CardVerification{}
	}
	return o.CardVerification
}

func (o *PaymentMethodsCard) GetIssuer() *string {
	if o == nil {
		return nil
	}
	return o.Issuer
}

func (o *PaymentMethodsCard) GetIssuerCountry() *string {
	if o == nil {
		return nil
	}
	return o.IssuerCountry
}

func (o *PaymentMethodsCard) GetCardOnFile() *bool {
	if o == nil {
		return nil
	}
	return o.CardOnFile
}

func (o *PaymentMethodsCard) GetMerchantAccountID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantAccountID
}

func (o *PaymentMethodsCard) GetCardAccountUpdater() *CardAccountUpdater {
	if o == nil {
		return nil
	}
	return o.CardAccountUpdater
}

func (o *PaymentMethodsCard) GetDomesticPushToCard() *DomesticPushToCard {
	if o == nil {
		return nil
	}
	return o.DomesticPushToCard
}

func (o *PaymentMethodsCard) GetDomesticPullFromCard() *DomesticPullFromCard {
	if o == nil {
		return nil
	}
	return o.DomesticPullFromCard
}
