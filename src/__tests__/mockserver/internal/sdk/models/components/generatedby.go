// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/utils"
)

type GeneratedByType string

const (
	GeneratedByTypeGeneratedByTransferID    GeneratedByType = "GeneratedByTransferID"
	GeneratedByTypeGeneratedByCardID        GeneratedByType = "GeneratedByCardID"
	GeneratedByTypeGeneratedByDisputeID     GeneratedByType = "GeneratedByDisputeID"
	GeneratedByTypeGeneratedByAccountID     GeneratedByType = "GeneratedByAccountID"
	GeneratedByTypeGeneratedByBankAccountID GeneratedByType = "GeneratedByBankAccountID"
)

// GeneratedBy - The entity that generated the fee.
type GeneratedBy struct {
	GeneratedByTransferID    *GeneratedByTransferID    `queryParam:"inline"`
	GeneratedByCardID        *GeneratedByCardID        `queryParam:"inline"`
	GeneratedByDisputeID     *GeneratedByDisputeID     `queryParam:"inline"`
	GeneratedByAccountID     *GeneratedByAccountID     `queryParam:"inline"`
	GeneratedByBankAccountID *GeneratedByBankAccountID `queryParam:"inline"`

	Type GeneratedByType
}

func CreateGeneratedByGeneratedByTransferID(generatedByTransferID GeneratedByTransferID) GeneratedBy {
	typ := GeneratedByTypeGeneratedByTransferID

	return GeneratedBy{
		GeneratedByTransferID: &generatedByTransferID,
		Type:                  typ,
	}
}

func CreateGeneratedByGeneratedByCardID(generatedByCardID GeneratedByCardID) GeneratedBy {
	typ := GeneratedByTypeGeneratedByCardID

	return GeneratedBy{
		GeneratedByCardID: &generatedByCardID,
		Type:              typ,
	}
}

func CreateGeneratedByGeneratedByDisputeID(generatedByDisputeID GeneratedByDisputeID) GeneratedBy {
	typ := GeneratedByTypeGeneratedByDisputeID

	return GeneratedBy{
		GeneratedByDisputeID: &generatedByDisputeID,
		Type:                 typ,
	}
}

func CreateGeneratedByGeneratedByAccountID(generatedByAccountID GeneratedByAccountID) GeneratedBy {
	typ := GeneratedByTypeGeneratedByAccountID

	return GeneratedBy{
		GeneratedByAccountID: &generatedByAccountID,
		Type:                 typ,
	}
}

func CreateGeneratedByGeneratedByBankAccountID(generatedByBankAccountID GeneratedByBankAccountID) GeneratedBy {
	typ := GeneratedByTypeGeneratedByBankAccountID

	return GeneratedBy{
		GeneratedByBankAccountID: &generatedByBankAccountID,
		Type:                     typ,
	}
}

func (u *GeneratedBy) UnmarshalJSON(data []byte) error {

	var generatedByTransferID GeneratedByTransferID = GeneratedByTransferID{}
	if err := utils.UnmarshalJSON(data, &generatedByTransferID, "", true, true); err == nil {
		u.GeneratedByTransferID = &generatedByTransferID
		u.Type = GeneratedByTypeGeneratedByTransferID
		return nil
	}

	var generatedByCardID GeneratedByCardID = GeneratedByCardID{}
	if err := utils.UnmarshalJSON(data, &generatedByCardID, "", true, true); err == nil {
		u.GeneratedByCardID = &generatedByCardID
		u.Type = GeneratedByTypeGeneratedByCardID
		return nil
	}

	var generatedByDisputeID GeneratedByDisputeID = GeneratedByDisputeID{}
	if err := utils.UnmarshalJSON(data, &generatedByDisputeID, "", true, true); err == nil {
		u.GeneratedByDisputeID = &generatedByDisputeID
		u.Type = GeneratedByTypeGeneratedByDisputeID
		return nil
	}

	var generatedByAccountID GeneratedByAccountID = GeneratedByAccountID{}
	if err := utils.UnmarshalJSON(data, &generatedByAccountID, "", true, true); err == nil {
		u.GeneratedByAccountID = &generatedByAccountID
		u.Type = GeneratedByTypeGeneratedByAccountID
		return nil
	}

	var generatedByBankAccountID GeneratedByBankAccountID = GeneratedByBankAccountID{}
	if err := utils.UnmarshalJSON(data, &generatedByBankAccountID, "", true, true); err == nil {
		u.GeneratedByBankAccountID = &generatedByBankAccountID
		u.Type = GeneratedByTypeGeneratedByBankAccountID
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GeneratedBy", string(data))
}

func (u GeneratedBy) MarshalJSON() ([]byte, error) {
	if u.GeneratedByTransferID != nil {
		return utils.MarshalJSON(u.GeneratedByTransferID, "", true)
	}

	if u.GeneratedByCardID != nil {
		return utils.MarshalJSON(u.GeneratedByCardID, "", true)
	}

	if u.GeneratedByDisputeID != nil {
		return utils.MarshalJSON(u.GeneratedByDisputeID, "", true)
	}

	if u.GeneratedByAccountID != nil {
		return utils.MarshalJSON(u.GeneratedByAccountID, "", true)
	}

	if u.GeneratedByBankAccountID != nil {
		return utils.MarshalJSON(u.GeneratedByBankAccountID, "", true)
	}

	return nil, errors.New("could not marshal union type GeneratedBy: all fields are null")
}
