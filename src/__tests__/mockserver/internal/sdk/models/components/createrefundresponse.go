// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/utils"
)

type CreateRefundResponseType string

const (
	CreateRefundResponseTypeCardAcquiringRefund CreateRefundResponseType = "CardAcquiringRefund"
	CreateRefundResponseTypeAsyncCreatedRefund  CreateRefundResponseType = "AsyncCreatedRefund"
)

type CreateRefundResponse struct {
	CardAcquiringRefund *CardAcquiringRefund `queryParam:"inline"`
	AsyncCreatedRefund  *AsyncCreatedRefund  `queryParam:"inline"`

	Type CreateRefundResponseType
}

func CreateCreateRefundResponseCardAcquiringRefund(cardAcquiringRefund CardAcquiringRefund) CreateRefundResponse {
	typ := CreateRefundResponseTypeCardAcquiringRefund

	return CreateRefundResponse{
		CardAcquiringRefund: &cardAcquiringRefund,
		Type:                typ,
	}
}

func CreateCreateRefundResponseAsyncCreatedRefund(asyncCreatedRefund AsyncCreatedRefund) CreateRefundResponse {
	typ := CreateRefundResponseTypeAsyncCreatedRefund

	return CreateRefundResponse{
		AsyncCreatedRefund: &asyncCreatedRefund,
		Type:               typ,
	}
}

func (u *CreateRefundResponse) UnmarshalJSON(data []byte) error {

	var asyncCreatedRefund AsyncCreatedRefund = AsyncCreatedRefund{}
	if err := utils.UnmarshalJSON(data, &asyncCreatedRefund, "", true, true); err == nil {
		u.AsyncCreatedRefund = &asyncCreatedRefund
		u.Type = CreateRefundResponseTypeAsyncCreatedRefund
		return nil
	}

	var cardAcquiringRefund CardAcquiringRefund = CardAcquiringRefund{}
	if err := utils.UnmarshalJSON(data, &cardAcquiringRefund, "", true, true); err == nil {
		u.CardAcquiringRefund = &cardAcquiringRefund
		u.Type = CreateRefundResponseTypeCardAcquiringRefund
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for CreateRefundResponse", string(data))
}

func (u CreateRefundResponse) MarshalJSON() ([]byte, error) {
	if u.CardAcquiringRefund != nil {
		return utils.MarshalJSON(u.CardAcquiringRefund, "", true)
	}

	if u.AsyncCreatedRefund != nil {
		return utils.MarshalJSON(u.AsyncCreatedRefund, "", true)
	}

	return nil, errors.New("could not marshal union type CreateRefundResponse: all fields are null")
}
