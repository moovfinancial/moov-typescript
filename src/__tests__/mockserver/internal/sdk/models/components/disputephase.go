// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// DisputePhase - The phase of a dispute within the dispute lifecycle.
type DisputePhase string

const (
	DisputePhasePreDispute DisputePhase = "pre-dispute"
	DisputePhaseInquiry    DisputePhase = "inquiry"
	DisputePhaseChargeback DisputePhase = "chargeback"
	DisputePhaseUnknown    DisputePhase = "unknown"
)

func (e DisputePhase) ToPointer() *DisputePhase {
	return &e
}
func (e *DisputePhase) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pre-dispute":
		fallthrough
	case "inquiry":
		fallthrough
	case "chargeback":
		fallthrough
	case "unknown":
		*e = DisputePhase(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DisputePhase: %v", v)
	}
}
