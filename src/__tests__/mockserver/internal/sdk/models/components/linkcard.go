// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type LinkCard struct {
	// Wraps a compact-serialized JSON Web Encryption (JWE) token used for secure transmission of sensitive data (e.g., PCI information) through intermediaries.
	// This token is encrypted using the public key from /end-to-end-keys and wraps an AES key. For details and examples, refer to our
	// [GitHub repository](https://github.com/moovfinancial/moov-go/blob/main/examples/e2ee/e2ee_test.go).
	E2ee       *E2EEToken `json:"e2ee,omitempty"`
	CardNumber string     `json:"cardNumber"`
	CardCvv    string     `json:"cardCvv"`
	// The expiration date of the card or token.
	Expiration        CardExpiration `json:"expiration"`
	HolderName        *string        `json:"holderName,omitempty"`
	BillingAddress    CardAddress    `json:"billingAddress"`
	CardOnFile        *bool          `json:"cardOnFile,omitempty"`
	MerchantAccountID *string        `json:"merchantAccountID,omitempty"`
	VerifyName        *bool          `json:"verifyName,omitempty"`
}

func (o *LinkCard) GetE2ee() *E2EEToken {
	if o == nil {
		return nil
	}
	return o.E2ee
}

func (o *LinkCard) GetCardNumber() string {
	if o == nil {
		return ""
	}
	return o.CardNumber
}

func (o *LinkCard) GetCardCvv() string {
	if o == nil {
		return ""
	}
	return o.CardCvv
}

func (o *LinkCard) GetExpiration() CardExpiration {
	if o == nil {
		return CardExpiration{}
	}
	return o.Expiration
}

func (o *LinkCard) GetHolderName() *string {
	if o == nil {
		return nil
	}
	return o.HolderName
}

func (o *LinkCard) GetBillingAddress() CardAddress {
	if o == nil {
		return CardAddress{}
	}
	return o.BillingAddress
}

func (o *LinkCard) GetCardOnFile() *bool {
	if o == nil {
		return nil
	}
	return o.CardOnFile
}

func (o *LinkCard) GetMerchantAccountID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantAccountID
}

func (o *LinkCard) GetVerifyName() *bool {
	if o == nil {
		return nil
	}
	return o.VerifyName
}
