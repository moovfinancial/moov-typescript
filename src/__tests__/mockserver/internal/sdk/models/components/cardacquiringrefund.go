// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

// CardAcquiringRefund - Details of a card refund.
type CardAcquiringRefund struct {
	// Identifier for the refund.
	RefundID    string             `json:"refundID"`
	CreatedOn   time.Time          `json:"createdOn"`
	UpdatedOn   time.Time          `json:"updatedOn"`
	Status      RefundStatus       `json:"status"`
	Amount      Amount             `json:"amount"`
	CardDetails *RefundCardDetails `json:"cardDetails,omitempty"`
}

func (c CardAcquiringRefund) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CardAcquiringRefund) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *CardAcquiringRefund) GetRefundID() string {
	if o == nil {
		return ""
	}
	return o.RefundID
}

func (o *CardAcquiringRefund) GetCreatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedOn
}

func (o *CardAcquiringRefund) GetUpdatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedOn
}

func (o *CardAcquiringRefund) GetStatus() RefundStatus {
	if o == nil {
		return RefundStatus("")
	}
	return o.Status
}

func (o *CardAcquiringRefund) GetAmount() Amount {
	if o == nil {
		return Amount{}
	}
	return o.Amount
}

func (o *CardAcquiringRefund) GetCardDetails() *RefundCardDetails {
	if o == nil {
		return nil
	}
	return o.CardDetails
}
