// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// RTPTransactionStatus - Status of a transaction within the RTP lifecycle.
type RTPTransactionStatus string

const (
	RTPTransactionStatusInitiated              RTPTransactionStatus = "initiated"
	RTPTransactionStatusCompleted              RTPTransactionStatus = "completed"
	RTPTransactionStatusFailed                 RTPTransactionStatus = "failed"
	RTPTransactionStatusAcceptedWithoutPosting RTPTransactionStatus = "accepted-without-posting"
)

func (e RTPTransactionStatus) ToPointer() *RTPTransactionStatus {
	return &e
}
func (e *RTPTransactionStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initiated":
		fallthrough
	case "completed":
		fallthrough
	case "failed":
		fallthrough
	case "accepted-without-posting":
		*e = RTPTransactionStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RTPTransactionStatus: %v", v)
	}
}
