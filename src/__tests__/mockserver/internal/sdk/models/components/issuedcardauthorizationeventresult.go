// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// IssuedCardAuthorizationEventResult - The result of an event.
type IssuedCardAuthorizationEventResult string

const (
	IssuedCardAuthorizationEventResultApproved  IssuedCardAuthorizationEventResult = "approved"
	IssuedCardAuthorizationEventResultDeclined  IssuedCardAuthorizationEventResult = "declined"
	IssuedCardAuthorizationEventResultProcessed IssuedCardAuthorizationEventResult = "processed"
)

func (e IssuedCardAuthorizationEventResult) ToPointer() *IssuedCardAuthorizationEventResult {
	return &e
}
func (e *IssuedCardAuthorizationEventResult) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "approved":
		fallthrough
	case "declined":
		fallthrough
	case "processed":
		*e = IssuedCardAuthorizationEventResult(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IssuedCardAuthorizationEventResult: %v", v)
	}
}
