// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type FeeCategory string

const (
	FeeCategoryAch                FeeCategory = "ach"
	FeeCategoryCardAcquiring      FeeCategory = "card-acquiring"
	FeeCategoryCardOther          FeeCategory = "card-other"
	FeeCategoryCardPull           FeeCategory = "card-pull"
	FeeCategoryCardPush           FeeCategory = "card-push"
	FeeCategoryMonthlyPlatform    FeeCategory = "monthly-platform"
	FeeCategoryNetworkPassthrough FeeCategory = "network-passthrough"
	FeeCategoryOther              FeeCategory = "other"
	FeeCategoryRtp                FeeCategory = "rtp"
)

func (e FeeCategory) ToPointer() *FeeCategory {
	return &e
}
func (e *FeeCategory) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ach":
		fallthrough
	case "card-acquiring":
		fallthrough
	case "card-other":
		fallthrough
	case "card-pull":
		fallthrough
	case "card-push":
		fallthrough
	case "monthly-platform":
		fallthrough
	case "network-passthrough":
		fallthrough
	case "other":
		fallthrough
	case "rtp":
		*e = FeeCategory(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FeeCategory: %v", v)
	}
}
