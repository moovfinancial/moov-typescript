// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"io"
)

type FileUploadRequestMultiPartFile struct {
	FileName string    `multipartForm:"name=fileName"`
	Content  io.Reader `multipartForm:"content"`
}

func (o *FileUploadRequestMultiPartFile) GetFileName() string {
	if o == nil {
		return ""
	}
	return o.FileName
}

func (o *FileUploadRequestMultiPartFile) GetContent() io.Reader {
	if o == nil {
		return nil
	}
	return o.Content
}

// FileUploadRequestMultiPart - Request to upload a file for an account.
type FileUploadRequestMultiPart struct {
	// The file to be added. Valid types are `csv`, `png`, `jpeg`, `pdf`.
	File FileUploadRequestMultiPartFile `multipartForm:"file"`
	// The file's purpose.
	FilePurpose FilePurpose `multipartForm:"name=filePurpose"`
	// Additional metadata to be stored with the file, formatted as a JSON string.
	//
	// Valid keys are `representative_id`, `comment`, `requirement_id`, `error_code`.
	Metadata *string `multipartForm:"name=metadata"`
}

func (o *FileUploadRequestMultiPart) GetFile() FileUploadRequestMultiPartFile {
	if o == nil {
		return FileUploadRequestMultiPartFile{}
	}
	return o.File
}

func (o *FileUploadRequestMultiPart) GetFilePurpose() FilePurpose {
	if o == nil {
		return FilePurpose("")
	}
	return o.FilePurpose
}

func (o *FileUploadRequestMultiPart) GetMetadata() *string {
	if o == nil {
		return nil
	}
	return o.Metadata
}
