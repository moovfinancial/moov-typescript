// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// MonthlyVolumeRange - The low value in each range is included. The high value in each range is excluded.
type MonthlyVolumeRange string

const (
	MonthlyVolumeRangeUnder10k                MonthlyVolumeRange = "under-10k"
	MonthlyVolumeRangeTenK50K                 MonthlyVolumeRange = "10K-50K"
	MonthlyVolumeRangeFiftyK100K              MonthlyVolumeRange = "50K-100K"
	MonthlyVolumeRangeOneHundredK250K         MonthlyVolumeRange = "100K-250K"
	MonthlyVolumeRangeTwoHundredAndFiftyK500K MonthlyVolumeRange = "250K-500K"
	MonthlyVolumeRangeFiveHundredK1M          MonthlyVolumeRange = "500K-1M"
	MonthlyVolumeRangeOneM5M                  MonthlyVolumeRange = "1M-5M"
	MonthlyVolumeRangeOver5m                  MonthlyVolumeRange = "over-5m"
)

func (e MonthlyVolumeRange) ToPointer() *MonthlyVolumeRange {
	return &e
}
func (e *MonthlyVolumeRange) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "under-10k":
		fallthrough
	case "10K-50K":
		fallthrough
	case "50K-100K":
		fallthrough
	case "100K-250K":
		fallthrough
	case "250K-500K":
		fallthrough
	case "500K-1M":
		fallthrough
	case "1M-5M":
		fallthrough
	case "over-5m":
		*e = MonthlyVolumeRange(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MonthlyVolumeRange: %v", v)
	}
}
