// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"io"
)

type CreateEvidenceFileMultiPartFile struct {
	FileName string    `multipartForm:"name=fileName"`
	Content  io.Reader `multipartForm:"content"`
}

func (o *CreateEvidenceFileMultiPartFile) GetFileName() string {
	if o == nil {
		return ""
	}
	return o.FileName
}

func (o *CreateEvidenceFileMultiPartFile) GetContent() io.Reader {
	if o == nil {
		return nil
	}
	return o.Content
}

type CreateEvidenceFileMultiPart struct {
	// The file to upload as evidence. Valid types are [jpeg, tiff, pdf] with a limit of 4MB per file.
	//
	// The `Content-Type` header for this form part must be one of the following:
	//   - `image/jpeg`
	//   - `image/tiff`
	//   - `application/pdf`
	File         CreateEvidenceFileMultiPartFile `multipartForm:"file"`
	EvidenceType EvidenceType                    `multipartForm:"name=evidenceType"`
}

func (o *CreateEvidenceFileMultiPart) GetFile() CreateEvidenceFileMultiPartFile {
	if o == nil {
		return CreateEvidenceFileMultiPartFile{}
	}
	return o.File
}

func (o *CreateEvidenceFileMultiPart) GetEvidenceType() EvidenceType {
	if o == nil {
		return EvidenceType("")
	}
	return o.EvidenceType
}
