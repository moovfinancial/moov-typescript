// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// OccurrenceStatus - Status of the completed occurrence.
type OccurrenceStatus string

const (
	OccurrenceStatusPending   OccurrenceStatus = "pending"
	OccurrenceStatusFailed    OccurrenceStatus = "failed"
	OccurrenceStatusCompleted OccurrenceStatus = "completed"
)

func (e OccurrenceStatus) ToPointer() *OccurrenceStatus {
	return &e
}
func (e *OccurrenceStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "failed":
		fallthrough
	case "completed":
		*e = OccurrenceStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OccurrenceStatus: %v", v)
	}
}
