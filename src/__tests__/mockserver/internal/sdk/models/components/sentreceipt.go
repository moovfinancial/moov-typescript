// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type SentReceipt struct {
	// Unique identifier for the receipt.
	ReceiptID string `json:"receiptID"`
	// The idempotency key used when creating the receipt.
	IdempotencyKey string `json:"idempotencyKey"`
	// When the receipt was sent.
	SentOn time.Time `json:"sentOn"`
}

func (s SentReceipt) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SentReceipt) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SentReceipt) GetReceiptID() string {
	if o == nil {
		return ""
	}
	return o.ReceiptID
}

func (o *SentReceipt) GetIdempotencyKey() string {
	if o == nil {
		return ""
	}
	return o.IdempotencyKey
}

func (o *SentReceipt) GetSentOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.SentOn
}
