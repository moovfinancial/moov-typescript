// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type WalletTransactionSourceType string

const (
	WalletTransactionSourceTypeTransfer               WalletTransactionSourceType = "transfer"
	WalletTransactionSourceTypeDispute                WalletTransactionSourceType = "dispute"
	WalletTransactionSourceTypeIssuingCardTransaction WalletTransactionSourceType = "issuing-card-transaction"
	WalletTransactionSourceTypeIssuingAuthorization   WalletTransactionSourceType = "issuing-authorization"
	WalletTransactionSourceTypeSweep                  WalletTransactionSourceType = "sweep"
	WalletTransactionSourceTypeAdjustment             WalletTransactionSourceType = "adjustment"
	WalletTransactionSourceTypeFee                    WalletTransactionSourceType = "fee"
)

func (e WalletTransactionSourceType) ToPointer() *WalletTransactionSourceType {
	return &e
}
func (e *WalletTransactionSourceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "transfer":
		fallthrough
	case "dispute":
		fallthrough
	case "issuing-card-transaction":
		fallthrough
	case "issuing-authorization":
		fallthrough
	case "sweep":
		fallthrough
	case "adjustment":
		fallthrough
	case "fee":
		*e = WalletTransactionSourceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WalletTransactionSourceType: %v", v)
	}
}
