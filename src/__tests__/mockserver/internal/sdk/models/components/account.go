// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type Account struct {
	// Unique identifier for this account.
	AccountID string `json:"accountID"`
	// The operating mode for an account.
	Mode Mode `json:"mode"`
	// The type of entity represented by this account.
	AccountType AccountType `json:"accountType"`
	DisplayName string      `json:"displayName"`
	// Describes a Moov account profile. A profile will have a business or an individual, depending on the account's type.
	Profile Profile `json:"profile"`
	// Free-form key-value pair list. Useful for storing information that is not captured elsewhere.
	Metadata map[string]string `json:"metadata,omitempty"`
	// Describes the acceptance of the Terms of Service.
	TermsOfService *TermsOfService     `json:"termsOfService,omitempty"`
	Capabilities   []AccountCapability `json:"capabilities,omitempty"`
	// Describes identity verification status and relevant identity verification documents.
	Verification Verification `json:"verification"`
	// Optional alias from a foreign/external system which can be used to reference this resource.
	ForeignID *string `json:"foreignID,omitempty"`
	// User-provided information that can be displayed on credit card transactions for customers to use when
	// contacting a customer support team. This data is only allowed on a business account.
	CustomerSupport *CustomerSupport `json:"customerSupport,omitempty"`
	// User provided settings to manage an account.
	Settings       *Settings  `json:"settings,omitempty"`
	CreatedOn      time.Time  `json:"createdOn"`
	UpdatedOn      time.Time  `json:"updatedOn"`
	DisconnectedOn *time.Time `json:"disconnectedOn,omitempty"`
}

func (a Account) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *Account) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Account) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *Account) GetMode() Mode {
	if o == nil {
		return Mode("")
	}
	return o.Mode
}

func (o *Account) GetAccountType() AccountType {
	if o == nil {
		return AccountType("")
	}
	return o.AccountType
}

func (o *Account) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *Account) GetProfile() Profile {
	if o == nil {
		return Profile{}
	}
	return o.Profile
}

func (o *Account) GetMetadata() map[string]string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *Account) GetTermsOfService() *TermsOfService {
	if o == nil {
		return nil
	}
	return o.TermsOfService
}

func (o *Account) GetCapabilities() []AccountCapability {
	if o == nil {
		return nil
	}
	return o.Capabilities
}

func (o *Account) GetVerification() Verification {
	if o == nil {
		return Verification{}
	}
	return o.Verification
}

func (o *Account) GetForeignID() *string {
	if o == nil {
		return nil
	}
	return o.ForeignID
}

func (o *Account) GetCustomerSupport() *CustomerSupport {
	if o == nil {
		return nil
	}
	return o.CustomerSupport
}

func (o *Account) GetSettings() *Settings {
	if o == nil {
		return nil
	}
	return o.Settings
}

func (o *Account) GetCreatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedOn
}

func (o *Account) GetUpdatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedOn
}

func (o *Account) GetDisconnectedOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.DisconnectedOn
}
