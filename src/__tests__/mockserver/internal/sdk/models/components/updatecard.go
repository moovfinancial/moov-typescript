// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type UpdateCard struct {
	// Wraps a compact-serialized JSON Web Encryption (JWE) token used for secure transmission of sensitive data (e.g., PCI information) through intermediaries.
	// This token is encrypted using the public key from /end-to-end-keys and wraps an AES key. For details and examples, refer to our
	// [GitHub repository](https://github.com/moovfinancial/moov-go/blob/main/examples/e2ee/e2ee_test.go).
	E2ee              *E2EETokenUpdate      `json:"e2ee,omitempty"`
	BillingAddress    *UpdateCardAddress    `json:"billingAddress,omitempty"`
	Expiration        *UpdateCardExpiration `json:"expiration,omitempty"`
	CardCvv           *string               `json:"cardCvv,omitempty"`
	CardOnFile        *bool                 `json:"cardOnFile,omitempty"`
	MerchantAccountID *string               `json:"merchantAccountID,omitempty"`
	VerifyName        *bool                 `json:"verifyName,omitempty"`
	HolderName        *string               `json:"holderName,omitempty"`
}

func (o *UpdateCard) GetE2ee() *E2EETokenUpdate {
	if o == nil {
		return nil
	}
	return o.E2ee
}

func (o *UpdateCard) GetBillingAddress() *UpdateCardAddress {
	if o == nil {
		return nil
	}
	return o.BillingAddress
}

func (o *UpdateCard) GetExpiration() *UpdateCardExpiration {
	if o == nil {
		return nil
	}
	return o.Expiration
}

func (o *UpdateCard) GetCardCvv() *string {
	if o == nil {
		return nil
	}
	return o.CardCvv
}

func (o *UpdateCard) GetCardOnFile() *bool {
	if o == nil {
		return nil
	}
	return o.CardOnFile
}

func (o *UpdateCard) GetMerchantAccountID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantAccountID
}

func (o *UpdateCard) GetVerifyName() *bool {
	if o == nil {
		return nil
	}
	return o.VerifyName
}

func (o *UpdateCard) GetHolderName() *string {
	if o == nil {
		return nil
	}
	return o.HolderName
}
