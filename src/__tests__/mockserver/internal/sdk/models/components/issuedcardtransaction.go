// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type IssuedCardTransaction struct {
	CardTransactionID string `json:"cardTransactionID"`
	IssuedCardID      string `json:"issuedCardID"`
	FundingWalletID   string `json:"fundingWalletID"`
	// A decimal-formatted numerical string that represents up to 2 decimal place precision. In USD for example, 12.34 is $12.34 and 0.99 is $0.99.
	Amount          string              `json:"amount"`
	AuthorizationID *string             `json:"authorizationID,omitempty"`
	AuthorizedOn    time.Time           `json:"authorizedOn"`
	MerchantData    IssuingMerchantData `json:"merchantData"`
	CreatedOn       time.Time           `json:"createdOn"`
}

func (i IssuedCardTransaction) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *IssuedCardTransaction) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *IssuedCardTransaction) GetCardTransactionID() string {
	if o == nil {
		return ""
	}
	return o.CardTransactionID
}

func (o *IssuedCardTransaction) GetIssuedCardID() string {
	if o == nil {
		return ""
	}
	return o.IssuedCardID
}

func (o *IssuedCardTransaction) GetFundingWalletID() string {
	if o == nil {
		return ""
	}
	return o.FundingWalletID
}

func (o *IssuedCardTransaction) GetAmount() string {
	if o == nil {
		return ""
	}
	return o.Amount
}

func (o *IssuedCardTransaction) GetAuthorizationID() *string {
	if o == nil {
		return nil
	}
	return o.AuthorizationID
}

func (o *IssuedCardTransaction) GetAuthorizedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.AuthorizedOn
}

func (o *IssuedCardTransaction) GetMerchantData() IssuingMerchantData {
	if o == nil {
		return IssuingMerchantData{}
	}
	return o.MerchantData
}

func (o *IssuedCardTransaction) GetCreatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedOn
}
