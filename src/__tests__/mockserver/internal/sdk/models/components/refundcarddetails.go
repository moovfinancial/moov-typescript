// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type RefundCardDetails struct {
	Status      RefundCardStatus            `json:"status"`
	FailureCode *CardTransactionFailureCode `json:"failureCode,omitempty"`
	InitiatedOn *time.Time                  `json:"initiatedOn,omitempty"`
	ConfirmedOn *time.Time                  `json:"confirmedOn,omitempty"`
	SettledOn   *time.Time                  `json:"settledOn,omitempty"`
	FailedOn    *time.Time                  `json:"failedOn,omitempty"`
	CompletedOn *time.Time                  `json:"completedOn,omitempty"`
}

func (r RefundCardDetails) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RefundCardDetails) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RefundCardDetails) GetStatus() RefundCardStatus {
	if o == nil {
		return RefundCardStatus("")
	}
	return o.Status
}

func (o *RefundCardDetails) GetFailureCode() *CardTransactionFailureCode {
	if o == nil {
		return nil
	}
	return o.FailureCode
}

func (o *RefundCardDetails) GetInitiatedOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.InitiatedOn
}

func (o *RefundCardDetails) GetConfirmedOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.ConfirmedOn
}

func (o *RefundCardDetails) GetSettledOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.SettledOn
}

func (o *RefundCardDetails) GetFailedOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.FailedOn
}

func (o *RefundCardDetails) GetCompletedOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.CompletedOn
}
