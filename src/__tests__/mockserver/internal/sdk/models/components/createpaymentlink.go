// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

// CreatePaymentLink - Request to create a new payment link.
//
// A payment link must include either `payment` or `payout` details, but not both. For payout payment links,
// `maxUses` will automatically be set to 1, as these are intended for a one-time disbursement
// to a specific recipient.
//
// **Note:** The `payout` option is currently under development and is not yet available for general use.
type CreatePaymentLink struct {
	// The partner's Moov account ID.
	PartnerAccountID string `json:"partnerAccountID"`
	// The merchant's preferred payment method ID. Must be a wallet payment method.
	MerchantPaymentMethodID string `json:"merchantPaymentMethodID"`
	Amount                  Amount `json:"amount"`
	// An optional limit on the number of times this payment link can be used.
	//
	// **For payouts, `maxUses` is always 1.**
	MaxUses *int64 `json:"maxUses,omitempty"`
	// An optional expiration date for this payment link.
	ExpiresOn *time.Time `json:"expiresOn,omitempty"`
	// Customizable display options for a payment link.
	Display  PaymentLinkDisplayOptions   `json:"display"`
	Customer *PaymentLinkCustomerOptions `json:"customer,omitempty"`
	// Options for payment links used to collect payment.
	Payment *PaymentLinkPaymentDetails `json:"payment,omitempty"`
	Payout  *PaymentLinkPayoutDetails  `json:"payout,omitempty"`
}

func (c CreatePaymentLink) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreatePaymentLink) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreatePaymentLink) GetPartnerAccountID() string {
	if o == nil {
		return ""
	}
	return o.PartnerAccountID
}

func (o *CreatePaymentLink) GetMerchantPaymentMethodID() string {
	if o == nil {
		return ""
	}
	return o.MerchantPaymentMethodID
}

func (o *CreatePaymentLink) GetAmount() Amount {
	if o == nil {
		return Amount{}
	}
	return o.Amount
}

func (o *CreatePaymentLink) GetMaxUses() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxUses
}

func (o *CreatePaymentLink) GetExpiresOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.ExpiresOn
}

func (o *CreatePaymentLink) GetDisplay() PaymentLinkDisplayOptions {
	if o == nil {
		return PaymentLinkDisplayOptions{}
	}
	return o.Display
}

func (o *CreatePaymentLink) GetCustomer() *PaymentLinkCustomerOptions {
	if o == nil {
		return nil
	}
	return o.Customer
}

func (o *CreatePaymentLink) GetPayment() *PaymentLinkPaymentDetails {
	if o == nil {
		return nil
	}
	return o.Payment
}

func (o *CreatePaymentLink) GetPayout() *PaymentLinkPayoutDetails {
	if o == nil {
		return nil
	}
	return o.Payout
}
