// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// IssuedCardEventType - The type of event that occurred on the card.
type IssuedCardEventType string

const (
	IssuedCardEventTypeAuthorization            IssuedCardEventType = "authorization"
	IssuedCardEventTypeReversal                 IssuedCardEventType = "reversal"
	IssuedCardEventTypeAuthorizationAdvice      IssuedCardEventType = "authorization-advice"
	IssuedCardEventTypeAuthorizationExpiration  IssuedCardEventType = "authorization-expiration"
	IssuedCardEventTypeAuthorizationIncremental IssuedCardEventType = "authorization-incremental"
	IssuedCardEventTypeClearing                 IssuedCardEventType = "clearing"
)

func (e IssuedCardEventType) ToPointer() *IssuedCardEventType {
	return &e
}
func (e *IssuedCardEventType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "authorization":
		fallthrough
	case "reversal":
		fallthrough
	case "authorization-advice":
		fallthrough
	case "authorization-expiration":
		fallthrough
	case "authorization-incremental":
		fallthrough
	case "clearing":
		*e = IssuedCardEventType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IssuedCardEventType: %v", v)
	}
}
