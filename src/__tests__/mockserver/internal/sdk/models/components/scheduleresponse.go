// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type ScheduleResponse struct {
	// Simple description to place on the transfer.
	Description          *string `json:"description,omitempty"`
	DestinationAccountID string  `json:"destinationAccountID"`
	// The operating mode for an account.
	Mode             Mode                  `json:"mode"`
	Occurrences      []OccurrencesResponse `json:"occurrences,omitempty"`
	OwnerAccountID   string                `json:"ownerAccountID"`
	PartnerAccountID string                `json:"partnerAccountID"`
	// Defines configuration for recurring transfers.
	Recur           *Recur     `json:"recur,omitempty"`
	ScheduleID      string     `json:"scheduleID"`
	SourceAccountID string     `json:"sourceAccountID"`
	CreatedOn       time.Time  `json:"createdOn"`
	UpdatedOn       time.Time  `json:"updatedOn"`
	DisabledOn      *time.Time `json:"disabledOn,omitempty"`
}

func (s ScheduleResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *ScheduleResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ScheduleResponse) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ScheduleResponse) GetDestinationAccountID() string {
	if o == nil {
		return ""
	}
	return o.DestinationAccountID
}

func (o *ScheduleResponse) GetMode() Mode {
	if o == nil {
		return Mode("")
	}
	return o.Mode
}

func (o *ScheduleResponse) GetOccurrences() []OccurrencesResponse {
	if o == nil {
		return nil
	}
	return o.Occurrences
}

func (o *ScheduleResponse) GetOwnerAccountID() string {
	if o == nil {
		return ""
	}
	return o.OwnerAccountID
}

func (o *ScheduleResponse) GetPartnerAccountID() string {
	if o == nil {
		return ""
	}
	return o.PartnerAccountID
}

func (o *ScheduleResponse) GetRecur() *Recur {
	if o == nil {
		return nil
	}
	return o.Recur
}

func (o *ScheduleResponse) GetScheduleID() string {
	if o == nil {
		return ""
	}
	return o.ScheduleID
}

func (o *ScheduleResponse) GetSourceAccountID() string {
	if o == nil {
		return ""
	}
	return o.SourceAccountID
}

func (o *ScheduleResponse) GetCreatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedOn
}

func (o *ScheduleResponse) GetUpdatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedOn
}

func (o *ScheduleResponse) GetDisabledOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.DisabledOn
}
