// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

// EvidenceUploadResponse - Details of a successfully uploaded evidence file.
type EvidenceUploadResponse struct {
	// The ID of the evidence.
	EvidenceID string `json:"evidenceID"`
	// The ID of the dispute the evidence is associated with.
	DisputeID string `json:"disputeID"`
	// The name of the evidence file.
	Filename string `json:"filename"`
	// The MIME type of the evidence file.
	MimeType string `json:"mimeType"`
	// The size of the evidence file.
	Size         int64        `json:"size"`
	EvidenceType EvidenceType `json:"evidenceType"`
	// The date and time the evidence was uploaded.
	CreatedOn time.Time `json:"createdOn"`
}

func (e EvidenceUploadResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EvidenceUploadResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *EvidenceUploadResponse) GetEvidenceID() string {
	if o == nil {
		return ""
	}
	return o.EvidenceID
}

func (o *EvidenceUploadResponse) GetDisputeID() string {
	if o == nil {
		return ""
	}
	return o.DisputeID
}

func (o *EvidenceUploadResponse) GetFilename() string {
	if o == nil {
		return ""
	}
	return o.Filename
}

func (o *EvidenceUploadResponse) GetMimeType() string {
	if o == nil {
		return ""
	}
	return o.MimeType
}

func (o *EvidenceUploadResponse) GetSize() int64 {
	if o == nil {
		return 0
	}
	return o.Size
}

func (o *EvidenceUploadResponse) GetEvidenceType() EvidenceType {
	if o == nil {
		return EvidenceType("")
	}
	return o.EvidenceType
}

func (o *EvidenceUploadResponse) GetCreatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedOn
}
