// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// CardTransactionStatus - Status of a transaction within the card payment lifecycle.
type CardTransactionStatus string

const (
	CardTransactionStatusInitiated CardTransactionStatus = "initiated"
	CardTransactionStatusConfirmed CardTransactionStatus = "confirmed"
	CardTransactionStatusCanceled  CardTransactionStatus = "canceled"
	CardTransactionStatusSettled   CardTransactionStatus = "settled"
	CardTransactionStatusFailed    CardTransactionStatus = "failed"
	CardTransactionStatusCompleted CardTransactionStatus = "completed"
)

func (e CardTransactionStatus) ToPointer() *CardTransactionStatus {
	return &e
}
func (e *CardTransactionStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initiated":
		fallthrough
	case "confirmed":
		fallthrough
	case "canceled":
		fallthrough
	case "settled":
		fallthrough
	case "failed":
		fallthrough
	case "completed":
		*e = CardTransactionStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CardTransactionStatus: %v", v)
	}
}
