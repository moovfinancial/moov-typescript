// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type IssuingControls struct {
	// Indicates if the card is single-use. If true, the card closes after the first authorization.
	SingleUse *bool `json:"singleUse,omitempty"`
	// Sets the spending limit per time interval. Only one limit per interval is supported.
	VelocityLimits []IssuingVelocityLimit `json:"velocityLimits,omitempty"`
}

func (o *IssuingControls) GetSingleUse() *bool {
	if o == nil {
		return nil
	}
	return o.SingleUse
}

func (o *IssuingControls) GetVelocityLimits() []IssuingVelocityLimit {
	if o == nil {
		return nil
	}
	return o.VelocityLimits
}
