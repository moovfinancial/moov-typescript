// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/utils"
)

type ReversalType string

const (
	ReversalTypeReversedWithCancellation ReversalType = "ReversedWithCancellation"
	ReversalTypeReversedWithRefund       ReversalType = "ReversedWithRefund"
)

// Reversal - Contains either a cancellation or refund, depending on the method used to reverse the transfer.
type Reversal struct {
	ReversedWithCancellation *ReversedWithCancellation `queryParam:"inline"`
	ReversedWithRefund       *ReversedWithRefund       `queryParam:"inline"`

	Type ReversalType
}

func CreateReversalReversedWithCancellation(reversedWithCancellation ReversedWithCancellation) Reversal {
	typ := ReversalTypeReversedWithCancellation

	return Reversal{
		ReversedWithCancellation: &reversedWithCancellation,
		Type:                     typ,
	}
}

func CreateReversalReversedWithRefund(reversedWithRefund ReversedWithRefund) Reversal {
	typ := ReversalTypeReversedWithRefund

	return Reversal{
		ReversedWithRefund: &reversedWithRefund,
		Type:               typ,
	}
}

func (u *Reversal) UnmarshalJSON(data []byte) error {

	var reversedWithCancellation ReversedWithCancellation = ReversedWithCancellation{}
	if err := utils.UnmarshalJSON(data, &reversedWithCancellation, "", true, true); err == nil {
		u.ReversedWithCancellation = &reversedWithCancellation
		u.Type = ReversalTypeReversedWithCancellation
		return nil
	}

	var reversedWithRefund ReversedWithRefund = ReversedWithRefund{}
	if err := utils.UnmarshalJSON(data, &reversedWithRefund, "", true, true); err == nil {
		u.ReversedWithRefund = &reversedWithRefund
		u.Type = ReversalTypeReversedWithRefund
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for Reversal", string(data))
}

func (u Reversal) MarshalJSON() ([]byte, error) {
	if u.ReversedWithCancellation != nil {
		return utils.MarshalJSON(u.ReversedWithCancellation, "", true)
	}

	if u.ReversedWithRefund != nil {
		return utils.MarshalJSON(u.ReversedWithRefund, "", true)
	}

	return nil, errors.New("could not marshal union type Reversal: all fields are null")
}
