/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Options for payment links used to collect an ACH payment.
 */
export type ACHPaymentDetails = {
  /**
   * An optional override of the default NACHA company entry description for a transfer.
   */
  companyEntryDescription?: string | undefined;
  /**
   * An optional override of the default NACHA company name for a transfer.
   */
  originatingCompanyName?: string | undefined;
};

/** @internal */
export const ACHPaymentDetails$inboundSchema: z.ZodType<
  ACHPaymentDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyEntryDescription: z.string().optional(),
  originatingCompanyName: z.string().optional(),
});

/** @internal */
export type ACHPaymentDetails$Outbound = {
  companyEntryDescription?: string | undefined;
  originatingCompanyName?: string | undefined;
};

/** @internal */
export const ACHPaymentDetails$outboundSchema: z.ZodType<
  ACHPaymentDetails$Outbound,
  z.ZodTypeDef,
  ACHPaymentDetails
> = z.object({
  companyEntryDescription: z.string().optional(),
  originatingCompanyName: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ACHPaymentDetails$ {
  /** @deprecated use `ACHPaymentDetails$inboundSchema` instead. */
  export const inboundSchema = ACHPaymentDetails$inboundSchema;
  /** @deprecated use `ACHPaymentDetails$outboundSchema` instead. */
  export const outboundSchema = ACHPaymentDetails$outboundSchema;
  /** @deprecated use `ACHPaymentDetails$Outbound` instead. */
  export type Outbound = ACHPaymentDetails$Outbound;
}

export function achPaymentDetailsToJSON(
  achPaymentDetails: ACHPaymentDetails,
): string {
  return JSON.stringify(
    ACHPaymentDetails$outboundSchema.parse(achPaymentDetails),
  );
}

export function achPaymentDetailsFromJSON(
  jsonString: string,
): SafeParseResult<ACHPaymentDetails, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ACHPaymentDetails$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ACHPaymentDetails' from JSON`,
  );
}
