/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AccountNameVerification,
  AccountNameVerification$inboundSchema,
  AccountNameVerification$Outbound,
  AccountNameVerification$outboundSchema,
} from "./accountnameverification.js";
import {
  CardVerificationResult,
  CardVerificationResult$inboundSchema,
  CardVerificationResult$outboundSchema,
} from "./cardverificationresult.js";

/**
 * The results of submitting cardholder data to a card network for verification.
 */
export type CardVerification = {
  cvv: CardVerificationResult;
  addressLine1: CardVerificationResult;
  postalCode: CardVerificationResult;
  /**
   * The results of submitting cardholder name to a card network for verification.
   */
  accountName: AccountNameVerification;
};

/** @internal */
export const CardVerification$inboundSchema: z.ZodType<
  CardVerification,
  z.ZodTypeDef,
  unknown
> = z.object({
  cvv: CardVerificationResult$inboundSchema,
  addressLine1: CardVerificationResult$inboundSchema,
  postalCode: CardVerificationResult$inboundSchema,
  accountName: AccountNameVerification$inboundSchema,
});

/** @internal */
export type CardVerification$Outbound = {
  cvv: string;
  addressLine1: string;
  postalCode: string;
  accountName: AccountNameVerification$Outbound;
};

/** @internal */
export const CardVerification$outboundSchema: z.ZodType<
  CardVerification$Outbound,
  z.ZodTypeDef,
  CardVerification
> = z.object({
  cvv: CardVerificationResult$outboundSchema,
  addressLine1: CardVerificationResult$outboundSchema,
  postalCode: CardVerificationResult$outboundSchema,
  accountName: AccountNameVerification$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardVerification$ {
  /** @deprecated use `CardVerification$inboundSchema` instead. */
  export const inboundSchema = CardVerification$inboundSchema;
  /** @deprecated use `CardVerification$outboundSchema` instead. */
  export const outboundSchema = CardVerification$outboundSchema;
  /** @deprecated use `CardVerification$Outbound` instead. */
  export type Outbound = CardVerification$Outbound;
}

export function cardVerificationToJSON(
  cardVerification: CardVerification,
): string {
  return JSON.stringify(
    CardVerification$outboundSchema.parse(cardVerification),
  );
}

export function cardVerificationFromJSON(
  jsonString: string,
): SafeParseResult<CardVerification, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CardVerification$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CardVerification' from JSON`,
  );
}
