/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type WebhookDataTicketCreated = {
  accountID: string;
  ticketID: string;
  foreignID?: string | undefined;
};

/** @internal */
export const WebhookDataTicketCreated$inboundSchema: z.ZodType<
  WebhookDataTicketCreated,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountID: z.string(),
  ticketID: z.string(),
  foreignID: z.string().optional(),
});

/** @internal */
export type WebhookDataTicketCreated$Outbound = {
  accountID: string;
  ticketID: string;
  foreignID?: string | undefined;
};

/** @internal */
export const WebhookDataTicketCreated$outboundSchema: z.ZodType<
  WebhookDataTicketCreated$Outbound,
  z.ZodTypeDef,
  WebhookDataTicketCreated
> = z.object({
  accountID: z.string(),
  ticketID: z.string(),
  foreignID: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookDataTicketCreated$ {
  /** @deprecated use `WebhookDataTicketCreated$inboundSchema` instead. */
  export const inboundSchema = WebhookDataTicketCreated$inboundSchema;
  /** @deprecated use `WebhookDataTicketCreated$outboundSchema` instead. */
  export const outboundSchema = WebhookDataTicketCreated$outboundSchema;
  /** @deprecated use `WebhookDataTicketCreated$Outbound` instead. */
  export type Outbound = WebhookDataTicketCreated$Outbound;
}

export function webhookDataTicketCreatedToJSON(
  webhookDataTicketCreated: WebhookDataTicketCreated,
): string {
  return JSON.stringify(
    WebhookDataTicketCreated$outboundSchema.parse(webhookDataTicketCreated),
  );
}

export function webhookDataTicketCreatedFromJSON(
  jsonString: string,
): SafeParseResult<WebhookDataTicketCreated, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WebhookDataTicketCreated$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WebhookDataTicketCreated' from JSON`,
  );
}
