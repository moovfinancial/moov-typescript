/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The payment method used to push or pull funds to a bank account.
 *
 * @remarks
 * The push payment method can only be ach-credit-standard or ach-credit-same-day. The pull payment method can only be ach-debit-fund.
 */
export type SweepConfigPaymentMethod = {
  /**
   * ID of the payment method.
   */
  paymentMethodID: string;
  disabledOn?: Date | undefined;
};

/** @internal */
export const SweepConfigPaymentMethod$inboundSchema: z.ZodType<
  SweepConfigPaymentMethod,
  z.ZodTypeDef,
  unknown
> = z.object({
  paymentMethodID: z.string(),
  disabledOn: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
});

/** @internal */
export type SweepConfigPaymentMethod$Outbound = {
  paymentMethodID: string;
  disabledOn?: string | undefined;
};

/** @internal */
export const SweepConfigPaymentMethod$outboundSchema: z.ZodType<
  SweepConfigPaymentMethod$Outbound,
  z.ZodTypeDef,
  SweepConfigPaymentMethod
> = z.object({
  paymentMethodID: z.string(),
  disabledOn: z.date().transform(v => v.toISOString()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SweepConfigPaymentMethod$ {
  /** @deprecated use `SweepConfigPaymentMethod$inboundSchema` instead. */
  export const inboundSchema = SweepConfigPaymentMethod$inboundSchema;
  /** @deprecated use `SweepConfigPaymentMethod$outboundSchema` instead. */
  export const outboundSchema = SweepConfigPaymentMethod$outboundSchema;
  /** @deprecated use `SweepConfigPaymentMethod$Outbound` instead. */
  export type Outbound = SweepConfigPaymentMethod$Outbound;
}

export function sweepConfigPaymentMethodToJSON(
  sweepConfigPaymentMethod: SweepConfigPaymentMethod,
): string {
  return JSON.stringify(
    SweepConfigPaymentMethod$outboundSchema.parse(sweepConfigPaymentMethod),
  );
}

export function sweepConfigPaymentMethodFromJSON(
  jsonString: string,
): SafeParseResult<SweepConfigPaymentMethod, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SweepConfigPaymentMethod$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SweepConfigPaymentMethod' from JSON`,
  );
}
