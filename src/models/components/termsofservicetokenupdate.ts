/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * An encrypted value used to record acceptance of Moov's Terms of Service.
 */
export type TermsOfServiceTokenUpdate = {
  token?: string | undefined;
};

/** @internal */
export const TermsOfServiceTokenUpdate$inboundSchema: z.ZodType<
  TermsOfServiceTokenUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  token: z.string().optional(),
});

/** @internal */
export type TermsOfServiceTokenUpdate$Outbound = {
  token?: string | undefined;
};

/** @internal */
export const TermsOfServiceTokenUpdate$outboundSchema: z.ZodType<
  TermsOfServiceTokenUpdate$Outbound,
  z.ZodTypeDef,
  TermsOfServiceTokenUpdate
> = z.object({
  token: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TermsOfServiceTokenUpdate$ {
  /** @deprecated use `TermsOfServiceTokenUpdate$inboundSchema` instead. */
  export const inboundSchema = TermsOfServiceTokenUpdate$inboundSchema;
  /** @deprecated use `TermsOfServiceTokenUpdate$outboundSchema` instead. */
  export const outboundSchema = TermsOfServiceTokenUpdate$outboundSchema;
  /** @deprecated use `TermsOfServiceTokenUpdate$Outbound` instead. */
  export type Outbound = TermsOfServiceTokenUpdate$Outbound;
}

export function termsOfServiceTokenUpdateToJSON(
  termsOfServiceTokenUpdate: TermsOfServiceTokenUpdate,
): string {
  return JSON.stringify(
    TermsOfServiceTokenUpdate$outboundSchema.parse(termsOfServiceTokenUpdate),
  );
}

export function termsOfServiceTokenUpdateFromJSON(
  jsonString: string,
): SafeParseResult<TermsOfServiceTokenUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TermsOfServiceTokenUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TermsOfServiceTokenUpdate' from JSON`,
  );
}
