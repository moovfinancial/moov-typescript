/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type WebhookDataBankAccountDeleted = {
  bankAccountID: string;
  accountID: string;
};

/** @internal */
export const WebhookDataBankAccountDeleted$inboundSchema: z.ZodType<
  WebhookDataBankAccountDeleted,
  z.ZodTypeDef,
  unknown
> = z.object({
  bankAccountID: z.string(),
  accountID: z.string(),
});

/** @internal */
export type WebhookDataBankAccountDeleted$Outbound = {
  bankAccountID: string;
  accountID: string;
};

/** @internal */
export const WebhookDataBankAccountDeleted$outboundSchema: z.ZodType<
  WebhookDataBankAccountDeleted$Outbound,
  z.ZodTypeDef,
  WebhookDataBankAccountDeleted
> = z.object({
  bankAccountID: z.string(),
  accountID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookDataBankAccountDeleted$ {
  /** @deprecated use `WebhookDataBankAccountDeleted$inboundSchema` instead. */
  export const inboundSchema = WebhookDataBankAccountDeleted$inboundSchema;
  /** @deprecated use `WebhookDataBankAccountDeleted$outboundSchema` instead. */
  export const outboundSchema = WebhookDataBankAccountDeleted$outboundSchema;
  /** @deprecated use `WebhookDataBankAccountDeleted$Outbound` instead. */
  export type Outbound = WebhookDataBankAccountDeleted$Outbound;
}

export function webhookDataBankAccountDeletedToJSON(
  webhookDataBankAccountDeleted: WebhookDataBankAccountDeleted,
): string {
  return JSON.stringify(
    WebhookDataBankAccountDeleted$outboundSchema.parse(
      webhookDataBankAccountDeleted,
    ),
  );
}

export function webhookDataBankAccountDeletedFromJSON(
  jsonString: string,
): SafeParseResult<WebhookDataBankAccountDeleted, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WebhookDataBankAccountDeleted$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WebhookDataBankAccountDeleted' from JSON`,
  );
}
