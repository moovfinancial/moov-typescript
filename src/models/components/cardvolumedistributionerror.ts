/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CardVolumeDistributionError = {
  ecommercePercentage?: string | undefined;
  cardPresentPercentage?: string | undefined;
  mailOrPhonePercentage?: string | undefined;
  debtRepaymentPercentage?: string | undefined;
};

/** @internal */
export const CardVolumeDistributionError$inboundSchema: z.ZodType<
  CardVolumeDistributionError,
  z.ZodTypeDef,
  unknown
> = z.object({
  ecommercePercentage: z.string().optional(),
  cardPresentPercentage: z.string().optional(),
  mailOrPhonePercentage: z.string().optional(),
  debtRepaymentPercentage: z.string().optional(),
});

/** @internal */
export type CardVolumeDistributionError$Outbound = {
  ecommercePercentage?: string | undefined;
  cardPresentPercentage?: string | undefined;
  mailOrPhonePercentage?: string | undefined;
  debtRepaymentPercentage?: string | undefined;
};

/** @internal */
export const CardVolumeDistributionError$outboundSchema: z.ZodType<
  CardVolumeDistributionError$Outbound,
  z.ZodTypeDef,
  CardVolumeDistributionError
> = z.object({
  ecommercePercentage: z.string().optional(),
  cardPresentPercentage: z.string().optional(),
  mailOrPhonePercentage: z.string().optional(),
  debtRepaymentPercentage: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardVolumeDistributionError$ {
  /** @deprecated use `CardVolumeDistributionError$inboundSchema` instead. */
  export const inboundSchema = CardVolumeDistributionError$inboundSchema;
  /** @deprecated use `CardVolumeDistributionError$outboundSchema` instead. */
  export const outboundSchema = CardVolumeDistributionError$outboundSchema;
  /** @deprecated use `CardVolumeDistributionError$Outbound` instead. */
  export type Outbound = CardVolumeDistributionError$Outbound;
}

export function cardVolumeDistributionErrorToJSON(
  cardVolumeDistributionError: CardVolumeDistributionError,
): string {
  return JSON.stringify(
    CardVolumeDistributionError$outboundSchema.parse(
      cardVolumeDistributionError,
    ),
  );
}

export function cardVolumeDistributionErrorFromJSON(
  jsonString: string,
): SafeParseResult<CardVolumeDistributionError, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CardVolumeDistributionError$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CardVolumeDistributionError' from JSON`,
  );
}
