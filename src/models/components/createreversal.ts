/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateReversal = {
  /**
   * Amount to reverse in cents. Partial amounts will automatically trigger a refund instead of a cancellation.
   */
  amount: number;
};

/** @internal */
export const CreateReversal$inboundSchema: z.ZodType<
  CreateReversal,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.number().int(),
});

/** @internal */
export type CreateReversal$Outbound = {
  amount: number;
};

/** @internal */
export const CreateReversal$outboundSchema: z.ZodType<
  CreateReversal$Outbound,
  z.ZodTypeDef,
  CreateReversal
> = z.object({
  amount: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateReversal$ {
  /** @deprecated use `CreateReversal$inboundSchema` instead. */
  export const inboundSchema = CreateReversal$inboundSchema;
  /** @deprecated use `CreateReversal$outboundSchema` instead. */
  export const outboundSchema = CreateReversal$outboundSchema;
  /** @deprecated use `CreateReversal$Outbound` instead. */
  export type Outbound = CreateReversal$Outbound;
}

export function createReversalToJSON(createReversal: CreateReversal): string {
  return JSON.stringify(CreateReversal$outboundSchema.parse(createReversal));
}

export function createReversalFromJSON(
  jsonString: string,
): SafeParseResult<CreateReversal, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateReversal$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateReversal' from JSON`,
  );
}
