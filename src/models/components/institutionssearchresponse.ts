/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ACHInstitution,
  ACHInstitution$inboundSchema,
  ACHInstitution$Outbound,
  ACHInstitution$outboundSchema,
} from "./achinstitution.js";
import {
  FedNowInstitution,
  FedNowInstitution$inboundSchema,
  FedNowInstitution$Outbound,
  FedNowInstitution$outboundSchema,
} from "./fednowinstitution.js";
import {
  RTPInstitution,
  RTPInstitution$inboundSchema,
  RTPInstitution$Outbound,
  RTPInstitution$outboundSchema,
} from "./rtpinstitution.js";
import {
  WireInstitution,
  WireInstitution$inboundSchema,
  WireInstitution$Outbound,
  WireInstitution$outboundSchema,
} from "./wireinstitution.js";

export type InstitutionsSearchResponse = {
  ach: Array<ACHInstitution> | null;
  rtp: Array<RTPInstitution> | null;
  wire: Array<WireInstitution> | null;
  fednow: Array<FedNowInstitution> | null;
};

/** @internal */
export const InstitutionsSearchResponse$inboundSchema: z.ZodType<
  InstitutionsSearchResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ach: z.nullable(z.array(ACHInstitution$inboundSchema)),
  rtp: z.nullable(z.array(RTPInstitution$inboundSchema)),
  wire: z.nullable(z.array(WireInstitution$inboundSchema)),
  fednow: z.nullable(z.array(FedNowInstitution$inboundSchema)),
});

/** @internal */
export type InstitutionsSearchResponse$Outbound = {
  ach: Array<ACHInstitution$Outbound> | null;
  rtp: Array<RTPInstitution$Outbound> | null;
  wire: Array<WireInstitution$Outbound> | null;
  fednow: Array<FedNowInstitution$Outbound> | null;
};

/** @internal */
export const InstitutionsSearchResponse$outboundSchema: z.ZodType<
  InstitutionsSearchResponse$Outbound,
  z.ZodTypeDef,
  InstitutionsSearchResponse
> = z.object({
  ach: z.nullable(z.array(ACHInstitution$outboundSchema)),
  rtp: z.nullable(z.array(RTPInstitution$outboundSchema)),
  wire: z.nullable(z.array(WireInstitution$outboundSchema)),
  fednow: z.nullable(z.array(FedNowInstitution$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InstitutionsSearchResponse$ {
  /** @deprecated use `InstitutionsSearchResponse$inboundSchema` instead. */
  export const inboundSchema = InstitutionsSearchResponse$inboundSchema;
  /** @deprecated use `InstitutionsSearchResponse$outboundSchema` instead. */
  export const outboundSchema = InstitutionsSearchResponse$outboundSchema;
  /** @deprecated use `InstitutionsSearchResponse$Outbound` instead. */
  export type Outbound = InstitutionsSearchResponse$Outbound;
}

export function institutionsSearchResponseToJSON(
  institutionsSearchResponse: InstitutionsSearchResponse,
): string {
  return JSON.stringify(
    InstitutionsSearchResponse$outboundSchema.parse(institutionsSearchResponse),
  );
}

export function institutionsSearchResponseFromJSON(
  jsonString: string,
): SafeParseResult<InstitutionsSearchResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InstitutionsSearchResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InstitutionsSearchResponse' from JSON`,
  );
}
