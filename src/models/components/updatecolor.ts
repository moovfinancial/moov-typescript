/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateColor = {
  accent?: string | undefined;
};

/** @internal */
export const UpdateColor$inboundSchema: z.ZodType<
  UpdateColor,
  z.ZodTypeDef,
  unknown
> = z.object({
  accent: z.string().optional(),
});

/** @internal */
export type UpdateColor$Outbound = {
  accent?: string | undefined;
};

/** @internal */
export const UpdateColor$outboundSchema: z.ZodType<
  UpdateColor$Outbound,
  z.ZodTypeDef,
  UpdateColor
> = z.object({
  accent: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateColor$ {
  /** @deprecated use `UpdateColor$inboundSchema` instead. */
  export const inboundSchema = UpdateColor$inboundSchema;
  /** @deprecated use `UpdateColor$outboundSchema` instead. */
  export const outboundSchema = UpdateColor$outboundSchema;
  /** @deprecated use `UpdateColor$Outbound` instead. */
  export type Outbound = UpdateColor$Outbound;
}

export function updateColorToJSON(updateColor: UpdateColor): string {
  return JSON.stringify(UpdateColor$outboundSchema.parse(updateColor));
}

export function updateColorFromJSON(
  jsonString: string,
): SafeParseResult<UpdateColor, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateColor$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateColor' from JSON`,
  );
}
