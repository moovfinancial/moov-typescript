/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  EstimatedActivity,
  EstimatedActivity$inboundSchema,
  EstimatedActivity$Outbound,
  EstimatedActivity$outboundSchema,
} from "./estimatedactivity.js";

export type SendFundsRtp = {
  estimatedActivity?: EstimatedActivity | undefined;
};

/** @internal */
export const SendFundsRtp$inboundSchema: z.ZodType<
  SendFundsRtp,
  z.ZodTypeDef,
  unknown
> = z.object({
  estimatedActivity: EstimatedActivity$inboundSchema.optional(),
});

/** @internal */
export type SendFundsRtp$Outbound = {
  estimatedActivity?: EstimatedActivity$Outbound | undefined;
};

/** @internal */
export const SendFundsRtp$outboundSchema: z.ZodType<
  SendFundsRtp$Outbound,
  z.ZodTypeDef,
  SendFundsRtp
> = z.object({
  estimatedActivity: EstimatedActivity$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendFundsRtp$ {
  /** @deprecated use `SendFundsRtp$inboundSchema` instead. */
  export const inboundSchema = SendFundsRtp$inboundSchema;
  /** @deprecated use `SendFundsRtp$outboundSchema` instead. */
  export const outboundSchema = SendFundsRtp$outboundSchema;
  /** @deprecated use `SendFundsRtp$Outbound` instead. */
  export type Outbound = SendFundsRtp$Outbound;
}

export function sendFundsRtpToJSON(sendFundsRtp: SendFundsRtp): string {
  return JSON.stringify(SendFundsRtp$outboundSchema.parse(sendFundsRtp));
}

export function sendFundsRtpFromJSON(
  jsonString: string,
): SafeParseResult<SendFundsRtp, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SendFundsRtp$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SendFundsRtp' from JSON`,
  );
}
