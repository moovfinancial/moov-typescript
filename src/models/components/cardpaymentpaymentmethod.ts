/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PaymentMethodsCard,
  PaymentMethodsCard$inboundSchema,
  PaymentMethodsCard$Outbound,
  PaymentMethodsCard$outboundSchema,
} from "./paymentmethodscard.js";

export const CardPaymentPaymentMethodPaymentMethodType = {
  CardPayment: "card-payment",
} as const;
export type CardPaymentPaymentMethodPaymentMethodType = ClosedEnum<
  typeof CardPaymentPaymentMethodPaymentMethodType
>;

export type CardPaymentPaymentMethod = {
  /**
   * ID of the payment method.
   */
  paymentMethodID: string;
  paymentMethodType: CardPaymentPaymentMethodPaymentMethodType;
  /**
   * A card as contained within a payment method.
   */
  card: PaymentMethodsCard;
};

/** @internal */
export const CardPaymentPaymentMethodPaymentMethodType$inboundSchema:
  z.ZodNativeEnum<typeof CardPaymentPaymentMethodPaymentMethodType> = z
    .nativeEnum(CardPaymentPaymentMethodPaymentMethodType);

/** @internal */
export const CardPaymentPaymentMethodPaymentMethodType$outboundSchema:
  z.ZodNativeEnum<typeof CardPaymentPaymentMethodPaymentMethodType> =
    CardPaymentPaymentMethodPaymentMethodType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardPaymentPaymentMethodPaymentMethodType$ {
  /** @deprecated use `CardPaymentPaymentMethodPaymentMethodType$inboundSchema` instead. */
  export const inboundSchema =
    CardPaymentPaymentMethodPaymentMethodType$inboundSchema;
  /** @deprecated use `CardPaymentPaymentMethodPaymentMethodType$outboundSchema` instead. */
  export const outboundSchema =
    CardPaymentPaymentMethodPaymentMethodType$outboundSchema;
}

/** @internal */
export const CardPaymentPaymentMethod$inboundSchema: z.ZodType<
  CardPaymentPaymentMethod,
  z.ZodTypeDef,
  unknown
> = z.object({
  paymentMethodID: z.string(),
  paymentMethodType: CardPaymentPaymentMethodPaymentMethodType$inboundSchema,
  card: PaymentMethodsCard$inboundSchema,
});

/** @internal */
export type CardPaymentPaymentMethod$Outbound = {
  paymentMethodID: string;
  paymentMethodType: string;
  card: PaymentMethodsCard$Outbound;
};

/** @internal */
export const CardPaymentPaymentMethod$outboundSchema: z.ZodType<
  CardPaymentPaymentMethod$Outbound,
  z.ZodTypeDef,
  CardPaymentPaymentMethod
> = z.object({
  paymentMethodID: z.string(),
  paymentMethodType: CardPaymentPaymentMethodPaymentMethodType$outboundSchema,
  card: PaymentMethodsCard$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardPaymentPaymentMethod$ {
  /** @deprecated use `CardPaymentPaymentMethod$inboundSchema` instead. */
  export const inboundSchema = CardPaymentPaymentMethod$inboundSchema;
  /** @deprecated use `CardPaymentPaymentMethod$outboundSchema` instead. */
  export const outboundSchema = CardPaymentPaymentMethod$outboundSchema;
  /** @deprecated use `CardPaymentPaymentMethod$Outbound` instead. */
  export type Outbound = CardPaymentPaymentMethod$Outbound;
}

export function cardPaymentPaymentMethodToJSON(
  cardPaymentPaymentMethod: CardPaymentPaymentMethod,
): string {
  return JSON.stringify(
    CardPaymentPaymentMethod$outboundSchema.parse(cardPaymentPaymentMethod),
  );
}

export function cardPaymentPaymentMethodFromJSON(
  jsonString: string,
): SafeParseResult<CardPaymentPaymentMethod, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CardPaymentPaymentMethod$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CardPaymentPaymentMethod' from JSON`,
  );
}
