/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GeneratedByBankAccountID = {
  bankAccountID?: string | undefined;
};

/** @internal */
export const GeneratedByBankAccountID$inboundSchema: z.ZodType<
  GeneratedByBankAccountID,
  z.ZodTypeDef,
  unknown
> = z.object({
  BankAccountID: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "BankAccountID": "bankAccountID",
  });
});

/** @internal */
export type GeneratedByBankAccountID$Outbound = {
  BankAccountID?: string | undefined;
};

/** @internal */
export const GeneratedByBankAccountID$outboundSchema: z.ZodType<
  GeneratedByBankAccountID$Outbound,
  z.ZodTypeDef,
  GeneratedByBankAccountID
> = z.object({
  bankAccountID: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    bankAccountID: "BankAccountID",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GeneratedByBankAccountID$ {
  /** @deprecated use `GeneratedByBankAccountID$inboundSchema` instead. */
  export const inboundSchema = GeneratedByBankAccountID$inboundSchema;
  /** @deprecated use `GeneratedByBankAccountID$outboundSchema` instead. */
  export const outboundSchema = GeneratedByBankAccountID$outboundSchema;
  /** @deprecated use `GeneratedByBankAccountID$Outbound` instead. */
  export type Outbound = GeneratedByBankAccountID$Outbound;
}

export function generatedByBankAccountIDToJSON(
  generatedByBankAccountID: GeneratedByBankAccountID,
): string {
  return JSON.stringify(
    GeneratedByBankAccountID$outboundSchema.parse(generatedByBankAccountID),
  );
}

export function generatedByBankAccountIDFromJSON(
  jsonString: string,
): SafeParseResult<GeneratedByBankAccountID, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GeneratedByBankAccountID$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GeneratedByBankAccountID' from JSON`,
  );
}
