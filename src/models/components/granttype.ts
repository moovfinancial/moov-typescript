/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The type of grant being requested.
 *
 * @remarks
 *
 *   - `client_credentials`: A grant type used by clients to obtain an access token
 *   - `refresh_token`: A grant type used by clients to obtain a new access token using a refresh token
 */
export const GrantType = {
  ClientCredentials: "client_credentials",
  RefreshToken: "refresh_token",
} as const;
/**
 * The type of grant being requested.
 *
 * @remarks
 *
 *   - `client_credentials`: A grant type used by clients to obtain an access token
 *   - `refresh_token`: A grant type used by clients to obtain a new access token using a refresh token
 */
export type GrantType = ClosedEnum<typeof GrantType>;

/** @internal */
export const GrantType$inboundSchema: z.ZodNativeEnum<typeof GrantType> = z
  .nativeEnum(GrantType);

/** @internal */
export const GrantType$outboundSchema: z.ZodNativeEnum<typeof GrantType> =
  GrantType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GrantType$ {
  /** @deprecated use `GrantType$inboundSchema` instead. */
  export const inboundSchema = GrantType$inboundSchema;
  /** @deprecated use `GrantType$outboundSchema` instead. */
  export const outboundSchema = GrantType$outboundSchema;
}
