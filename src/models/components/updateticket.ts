/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  UpdateTicketStatus,
  UpdateTicketStatus$inboundSchema,
  UpdateTicketStatus$outboundSchema,
} from "./updateticketstatus.js";

/**
 * Request to update a support ticket.
 */
export type UpdateTicket = {
  status?: UpdateTicketStatus | undefined;
};

/** @internal */
export const UpdateTicket$inboundSchema: z.ZodType<
  UpdateTicket,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: UpdateTicketStatus$inboundSchema.optional(),
});

/** @internal */
export type UpdateTicket$Outbound = {
  status?: string | undefined;
};

/** @internal */
export const UpdateTicket$outboundSchema: z.ZodType<
  UpdateTicket$Outbound,
  z.ZodTypeDef,
  UpdateTicket
> = z.object({
  status: UpdateTicketStatus$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateTicket$ {
  /** @deprecated use `UpdateTicket$inboundSchema` instead. */
  export const inboundSchema = UpdateTicket$inboundSchema;
  /** @deprecated use `UpdateTicket$outboundSchema` instead. */
  export const outboundSchema = UpdateTicket$outboundSchema;
  /** @deprecated use `UpdateTicket$Outbound` instead. */
  export type Outbound = UpdateTicket$Outbound;
}

export function updateTicketToJSON(updateTicket: UpdateTicket): string {
  return JSON.stringify(UpdateTicket$outboundSchema.parse(updateTicket));
}

export function updateTicketFromJSON(
  jsonString: string,
): SafeParseResult<UpdateTicket, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateTicket$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateTicket' from JSON`,
  );
}
