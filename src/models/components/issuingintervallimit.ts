/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Specifies the time frame for the velocity limit. Currently supports only per-transaction limits.
 */
export const IssuingIntervalLimit = {
  PerTransaction: "per-transaction",
} as const;
/**
 * Specifies the time frame for the velocity limit. Currently supports only per-transaction limits.
 */
export type IssuingIntervalLimit = ClosedEnum<typeof IssuingIntervalLimit>;

/** @internal */
export const IssuingIntervalLimit$inboundSchema: z.ZodNativeEnum<
  typeof IssuingIntervalLimit
> = z.nativeEnum(IssuingIntervalLimit);

/** @internal */
export const IssuingIntervalLimit$outboundSchema: z.ZodNativeEnum<
  typeof IssuingIntervalLimit
> = IssuingIntervalLimit$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IssuingIntervalLimit$ {
  /** @deprecated use `IssuingIntervalLimit$inboundSchema` instead. */
  export const inboundSchema = IssuingIntervalLimit$inboundSchema;
  /** @deprecated use `IssuingIntervalLimit$outboundSchema` instead. */
  export const outboundSchema = IssuingIntervalLimit$outboundSchema;
}
