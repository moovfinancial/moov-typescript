/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AmountDecimalValidationError,
  AmountDecimalValidationError$inboundSchema,
  AmountDecimalValidationError$Outbound,
  AmountDecimalValidationError$outboundSchema,
} from "./amountdecimalvalidationerror.js";
import {
  AssignProductImageValidationError,
  AssignProductImageValidationError$inboundSchema,
  AssignProductImageValidationError$Outbound,
  AssignProductImageValidationError$outboundSchema,
} from "./assignproductimagevalidationerror.js";

export type ProductOptionValidationError = {
  name?: string | undefined;
  description?: string | undefined;
  priceModifier?: AmountDecimalValidationError | undefined;
  images?: { [k: string]: AssignProductImageValidationError } | undefined;
};

/** @internal */
export const ProductOptionValidationError$inboundSchema: z.ZodType<
  ProductOptionValidationError,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  description: z.string().optional(),
  priceModifier: AmountDecimalValidationError$inboundSchema.optional(),
  images: z.record(AssignProductImageValidationError$inboundSchema).optional(),
});

/** @internal */
export type ProductOptionValidationError$Outbound = {
  name?: string | undefined;
  description?: string | undefined;
  priceModifier?: AmountDecimalValidationError$Outbound | undefined;
  images?:
    | { [k: string]: AssignProductImageValidationError$Outbound }
    | undefined;
};

/** @internal */
export const ProductOptionValidationError$outboundSchema: z.ZodType<
  ProductOptionValidationError$Outbound,
  z.ZodTypeDef,
  ProductOptionValidationError
> = z.object({
  name: z.string().optional(),
  description: z.string().optional(),
  priceModifier: AmountDecimalValidationError$outboundSchema.optional(),
  images: z.record(AssignProductImageValidationError$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductOptionValidationError$ {
  /** @deprecated use `ProductOptionValidationError$inboundSchema` instead. */
  export const inboundSchema = ProductOptionValidationError$inboundSchema;
  /** @deprecated use `ProductOptionValidationError$outboundSchema` instead. */
  export const outboundSchema = ProductOptionValidationError$outboundSchema;
  /** @deprecated use `ProductOptionValidationError$Outbound` instead. */
  export type Outbound = ProductOptionValidationError$Outbound;
}

export function productOptionValidationErrorToJSON(
  productOptionValidationError: ProductOptionValidationError,
): string {
  return JSON.stringify(
    ProductOptionValidationError$outboundSchema.parse(
      productOptionValidationError,
    ),
  );
}

export function productOptionValidationErrorFromJSON(
  jsonString: string,
): SafeParseResult<ProductOptionValidationError, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ProductOptionValidationError$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ProductOptionValidationError' from JSON`,
  );
}
