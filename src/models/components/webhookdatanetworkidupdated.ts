/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type WebhookDataNetworkIDUpdated = {
  accountID: string;
  visaMid?: string | undefined;
  mastercardMid?: string | undefined;
  discoverMid?: string | undefined;
  amexMid?: string | undefined;
  updatedOn?: Date | undefined;
};

/** @internal */
export const WebhookDataNetworkIDUpdated$inboundSchema: z.ZodType<
  WebhookDataNetworkIDUpdated,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountID: z.string(),
  visaMid: z.string().optional(),
  mastercardMid: z.string().optional(),
  discoverMid: z.string().optional(),
  amexMid: z.string().optional(),
  updatedOn: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
});

/** @internal */
export type WebhookDataNetworkIDUpdated$Outbound = {
  accountID: string;
  visaMid?: string | undefined;
  mastercardMid?: string | undefined;
  discoverMid?: string | undefined;
  amexMid?: string | undefined;
  updatedOn?: string | undefined;
};

/** @internal */
export const WebhookDataNetworkIDUpdated$outboundSchema: z.ZodType<
  WebhookDataNetworkIDUpdated$Outbound,
  z.ZodTypeDef,
  WebhookDataNetworkIDUpdated
> = z.object({
  accountID: z.string(),
  visaMid: z.string().optional(),
  mastercardMid: z.string().optional(),
  discoverMid: z.string().optional(),
  amexMid: z.string().optional(),
  updatedOn: z.date().transform(v => v.toISOString()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookDataNetworkIDUpdated$ {
  /** @deprecated use `WebhookDataNetworkIDUpdated$inboundSchema` instead. */
  export const inboundSchema = WebhookDataNetworkIDUpdated$inboundSchema;
  /** @deprecated use `WebhookDataNetworkIDUpdated$outboundSchema` instead. */
  export const outboundSchema = WebhookDataNetworkIDUpdated$outboundSchema;
  /** @deprecated use `WebhookDataNetworkIDUpdated$Outbound` instead. */
  export type Outbound = WebhookDataNetworkIDUpdated$Outbound;
}

export function webhookDataNetworkIDUpdatedToJSON(
  webhookDataNetworkIDUpdated: WebhookDataNetworkIDUpdated,
): string {
  return JSON.stringify(
    WebhookDataNetworkIDUpdated$outboundSchema.parse(
      webhookDataNetworkIDUpdated,
    ),
  );
}

export function webhookDataNetworkIDUpdatedFromJSON(
  jsonString: string,
): SafeParseResult<WebhookDataNetworkIDUpdated, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WebhookDataNetworkIDUpdated$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WebhookDataNetworkIDUpdated' from JSON`,
  );
}
