/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CompleteBankAccountVerification = {
  /**
   * Code provided by user from their bank account transactions
   */
  code: string;
};

/** @internal */
export const CompleteBankAccountVerification$inboundSchema: z.ZodType<
  CompleteBankAccountVerification,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string(),
});

/** @internal */
export type CompleteBankAccountVerification$Outbound = {
  code: string;
};

/** @internal */
export const CompleteBankAccountVerification$outboundSchema: z.ZodType<
  CompleteBankAccountVerification$Outbound,
  z.ZodTypeDef,
  CompleteBankAccountVerification
> = z.object({
  code: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompleteBankAccountVerification$ {
  /** @deprecated use `CompleteBankAccountVerification$inboundSchema` instead. */
  export const inboundSchema = CompleteBankAccountVerification$inboundSchema;
  /** @deprecated use `CompleteBankAccountVerification$outboundSchema` instead. */
  export const outboundSchema = CompleteBankAccountVerification$outboundSchema;
  /** @deprecated use `CompleteBankAccountVerification$Outbound` instead. */
  export type Outbound = CompleteBankAccountVerification$Outbound;
}

export function completeBankAccountVerificationToJSON(
  completeBankAccountVerification: CompleteBankAccountVerification,
): string {
  return JSON.stringify(
    CompleteBankAccountVerification$outboundSchema.parse(
      completeBankAccountVerification,
    ),
  );
}

export function completeBankAccountVerificationFromJSON(
  jsonString: string,
): SafeParseResult<CompleteBankAccountVerification, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CompleteBankAccountVerification$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CompleteBankAccountVerification' from JSON`,
  );
}
