/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Reason for a transfer's failure.
 */
export const TransferFailureReason = {
  SourcePaymentError: "source-payment-error",
  DestinationPaymentError: "destination-payment-error",
  WalletInsufficientFunds: "wallet-insufficient-funds",
  RejectedHighRisk: "rejected-high-risk",
  ProcessingError: "processing-error",
} as const;
/**
 * Reason for a transfer's failure.
 */
export type TransferFailureReason = ClosedEnum<typeof TransferFailureReason>;

/** @internal */
export const TransferFailureReason$inboundSchema: z.ZodNativeEnum<
  typeof TransferFailureReason
> = z.nativeEnum(TransferFailureReason);

/** @internal */
export const TransferFailureReason$outboundSchema: z.ZodNativeEnum<
  typeof TransferFailureReason
> = TransferFailureReason$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TransferFailureReason$ {
  /** @deprecated use `TransferFailureReason$inboundSchema` instead. */
  export const inboundSchema = TransferFailureReason$inboundSchema;
  /** @deprecated use `TransferFailureReason$outboundSchema` instead. */
  export const outboundSchema = TransferFailureReason$outboundSchema;
}
