/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Specifies the type of spend card to be issued. Presently supports virtual only, providing a digital number without a physical card.
 */
export const IssuedCardFormFactor = {
  Virtual: "virtual",
} as const;
/**
 * Specifies the type of spend card to be issued. Presently supports virtual only, providing a digital number without a physical card.
 */
export type IssuedCardFormFactor = ClosedEnum<typeof IssuedCardFormFactor>;

/** @internal */
export const IssuedCardFormFactor$inboundSchema: z.ZodNativeEnum<
  typeof IssuedCardFormFactor
> = z.nativeEnum(IssuedCardFormFactor);

/** @internal */
export const IssuedCardFormFactor$outboundSchema: z.ZodNativeEnum<
  typeof IssuedCardFormFactor
> = IssuedCardFormFactor$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IssuedCardFormFactor$ {
  /** @deprecated use `IssuedCardFormFactor$inboundSchema` instead. */
  export const inboundSchema = IssuedCardFormFactor$inboundSchema;
  /** @deprecated use `IssuedCardFormFactor$outboundSchema` instead. */
  export const outboundSchema = IssuedCardFormFactor$outboundSchema;
}
