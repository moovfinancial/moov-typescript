/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  MicroDepositStatus,
  MicroDepositStatus$inboundSchema,
  MicroDepositStatus$outboundSchema,
} from "./microdepositstatus.js";

export type CompletedMicroDeposits = {
  status: MicroDepositStatus;
};

/** @internal */
export const CompletedMicroDeposits$inboundSchema: z.ZodType<
  CompletedMicroDeposits,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: MicroDepositStatus$inboundSchema,
});

/** @internal */
export type CompletedMicroDeposits$Outbound = {
  status: string;
};

/** @internal */
export const CompletedMicroDeposits$outboundSchema: z.ZodType<
  CompletedMicroDeposits$Outbound,
  z.ZodTypeDef,
  CompletedMicroDeposits
> = z.object({
  status: MicroDepositStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompletedMicroDeposits$ {
  /** @deprecated use `CompletedMicroDeposits$inboundSchema` instead. */
  export const inboundSchema = CompletedMicroDeposits$inboundSchema;
  /** @deprecated use `CompletedMicroDeposits$outboundSchema` instead. */
  export const outboundSchema = CompletedMicroDeposits$outboundSchema;
  /** @deprecated use `CompletedMicroDeposits$Outbound` instead. */
  export type Outbound = CompletedMicroDeposits$Outbound;
}

export function completedMicroDepositsToJSON(
  completedMicroDeposits: CompletedMicroDeposits,
): string {
  return JSON.stringify(
    CompletedMicroDeposits$outboundSchema.parse(completedMicroDeposits),
  );
}

export function completedMicroDepositsFromJSON(
  jsonString: string,
): SafeParseResult<CompletedMicroDeposits, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CompletedMicroDeposits$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CompletedMicroDeposits' from JSON`,
  );
}
