/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  SweepConfigStatus,
  SweepConfigStatus$inboundSchema,
  SweepConfigStatus$outboundSchema,
} from "./sweepconfigstatus.js";

export type PatchSweepConfig = {
  status?: SweepConfigStatus | undefined;
  /**
   * ID of the payment method.
   */
  pushPaymentMethodID?: string | undefined;
  /**
   * ID of the payment method.
   */
  pullPaymentMethodID?: string | undefined;
  /**
   * The text that appears on the banking statement. The default descriptor is a 10 character ID if an override is not set in the sweep configs statementDescriptor.
   */
  statementDescriptor?: string | undefined;
  minimumBalance?: string | undefined;
};

/** @internal */
export const PatchSweepConfig$inboundSchema: z.ZodType<
  PatchSweepConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: SweepConfigStatus$inboundSchema.optional(),
  pushPaymentMethodID: z.string().optional(),
  pullPaymentMethodID: z.string().optional(),
  statementDescriptor: z.string().optional(),
  minimumBalance: z.string().optional(),
});

/** @internal */
export type PatchSweepConfig$Outbound = {
  status?: string | undefined;
  pushPaymentMethodID?: string | undefined;
  pullPaymentMethodID?: string | undefined;
  statementDescriptor?: string | undefined;
  minimumBalance?: string | undefined;
};

/** @internal */
export const PatchSweepConfig$outboundSchema: z.ZodType<
  PatchSweepConfig$Outbound,
  z.ZodTypeDef,
  PatchSweepConfig
> = z.object({
  status: SweepConfigStatus$outboundSchema.optional(),
  pushPaymentMethodID: z.string().optional(),
  pullPaymentMethodID: z.string().optional(),
  statementDescriptor: z.string().optional(),
  minimumBalance: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchSweepConfig$ {
  /** @deprecated use `PatchSweepConfig$inboundSchema` instead. */
  export const inboundSchema = PatchSweepConfig$inboundSchema;
  /** @deprecated use `PatchSweepConfig$outboundSchema` instead. */
  export const outboundSchema = PatchSweepConfig$outboundSchema;
  /** @deprecated use `PatchSweepConfig$Outbound` instead. */
  export type Outbound = PatchSweepConfig$Outbound;
}

export function patchSweepConfigToJSON(
  patchSweepConfig: PatchSweepConfig,
): string {
  return JSON.stringify(
    PatchSweepConfig$outboundSchema.parse(patchSweepConfig),
  );
}

export function patchSweepConfigFromJSON(
  jsonString: string,
): SafeParseResult<PatchSweepConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PatchSweepConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchSweepConfig' from JSON`,
  );
}
