/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GeneratedByDisputeID = {
  disputeID?: string | undefined;
};

/** @internal */
export const GeneratedByDisputeID$inboundSchema: z.ZodType<
  GeneratedByDisputeID,
  z.ZodTypeDef,
  unknown
> = z.object({
  DisputeID: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "DisputeID": "disputeID",
  });
});

/** @internal */
export type GeneratedByDisputeID$Outbound = {
  DisputeID?: string | undefined;
};

/** @internal */
export const GeneratedByDisputeID$outboundSchema: z.ZodType<
  GeneratedByDisputeID$Outbound,
  z.ZodTypeDef,
  GeneratedByDisputeID
> = z.object({
  disputeID: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    disputeID: "DisputeID",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GeneratedByDisputeID$ {
  /** @deprecated use `GeneratedByDisputeID$inboundSchema` instead. */
  export const inboundSchema = GeneratedByDisputeID$inboundSchema;
  /** @deprecated use `GeneratedByDisputeID$outboundSchema` instead. */
  export const outboundSchema = GeneratedByDisputeID$outboundSchema;
  /** @deprecated use `GeneratedByDisputeID$Outbound` instead. */
  export type Outbound = GeneratedByDisputeID$Outbound;
}

export function generatedByDisputeIDToJSON(
  generatedByDisputeID: GeneratedByDisputeID,
): string {
  return JSON.stringify(
    GeneratedByDisputeID$outboundSchema.parse(generatedByDisputeID),
  );
}

export function generatedByDisputeIDFromJSON(
  jsonString: string,
): SafeParseResult<GeneratedByDisputeID, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GeneratedByDisputeID$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GeneratedByDisputeID' from JSON`,
  );
}
