/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AmountDecimal,
  AmountDecimal$inboundSchema,
  AmountDecimal$Outbound,
  AmountDecimal$outboundSchema,
} from "./amountdecimal.js";

/**
 * Details of volume and fees for a specific payment method.
 */
export type BillingSummaryDetails = {
  /**
   * The total transaction volume amount.
   */
  volumeAmount?: AmountDecimal | undefined;
  /**
   * The total number of transactions.
   */
  volumeCount?: number | undefined;
  /**
   * The total fee amount.
   */
  feeAmount?: AmountDecimal | undefined;
};

/** @internal */
export const BillingSummaryDetails$inboundSchema: z.ZodType<
  BillingSummaryDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  volumeAmount: AmountDecimal$inboundSchema.optional(),
  volumeCount: z.number().int().optional(),
  feeAmount: AmountDecimal$inboundSchema.optional(),
});

/** @internal */
export type BillingSummaryDetails$Outbound = {
  volumeAmount?: AmountDecimal$Outbound | undefined;
  volumeCount?: number | undefined;
  feeAmount?: AmountDecimal$Outbound | undefined;
};

/** @internal */
export const BillingSummaryDetails$outboundSchema: z.ZodType<
  BillingSummaryDetails$Outbound,
  z.ZodTypeDef,
  BillingSummaryDetails
> = z.object({
  volumeAmount: AmountDecimal$outboundSchema.optional(),
  volumeCount: z.number().int().optional(),
  feeAmount: AmountDecimal$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BillingSummaryDetails$ {
  /** @deprecated use `BillingSummaryDetails$inboundSchema` instead. */
  export const inboundSchema = BillingSummaryDetails$inboundSchema;
  /** @deprecated use `BillingSummaryDetails$outboundSchema` instead. */
  export const outboundSchema = BillingSummaryDetails$outboundSchema;
  /** @deprecated use `BillingSummaryDetails$Outbound` instead. */
  export type Outbound = BillingSummaryDetails$Outbound;
}

export function billingSummaryDetailsToJSON(
  billingSummaryDetails: BillingSummaryDetails,
): string {
  return JSON.stringify(
    BillingSummaryDetails$outboundSchema.parse(billingSummaryDetails),
  );
}

export function billingSummaryDetailsFromJSON(
  jsonString: string,
): SafeParseResult<BillingSummaryDetails, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BillingSummaryDetails$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BillingSummaryDetails' from JSON`,
  );
}
