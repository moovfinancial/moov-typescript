/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CreateTransferDestinationACH,
  CreateTransferDestinationACH$inboundSchema,
  CreateTransferDestinationACH$Outbound,
  CreateTransferDestinationACH$outboundSchema,
} from "./createtransferdestinationach.js";
import {
  CreateTransferDestinationCard,
  CreateTransferDestinationCard$inboundSchema,
  CreateTransferDestinationCard$Outbound,
  CreateTransferDestinationCard$outboundSchema,
} from "./createtransferdestinationcard.js";

/**
 * The final stage of a transfer and the ultimate recipient of the funds.
 */
export type CreateTransferDestination = {
  paymentMethodID: string;
  cardDetails?: CreateTransferDestinationCard | undefined;
  achDetails?: CreateTransferDestinationACH | undefined;
};

/** @internal */
export const CreateTransferDestination$inboundSchema: z.ZodType<
  CreateTransferDestination,
  z.ZodTypeDef,
  unknown
> = z.object({
  paymentMethodID: z.string(),
  cardDetails: CreateTransferDestinationCard$inboundSchema.optional(),
  achDetails: CreateTransferDestinationACH$inboundSchema.optional(),
});

/** @internal */
export type CreateTransferDestination$Outbound = {
  paymentMethodID: string;
  cardDetails?: CreateTransferDestinationCard$Outbound | undefined;
  achDetails?: CreateTransferDestinationACH$Outbound | undefined;
};

/** @internal */
export const CreateTransferDestination$outboundSchema: z.ZodType<
  CreateTransferDestination$Outbound,
  z.ZodTypeDef,
  CreateTransferDestination
> = z.object({
  paymentMethodID: z.string(),
  cardDetails: CreateTransferDestinationCard$outboundSchema.optional(),
  achDetails: CreateTransferDestinationACH$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTransferDestination$ {
  /** @deprecated use `CreateTransferDestination$inboundSchema` instead. */
  export const inboundSchema = CreateTransferDestination$inboundSchema;
  /** @deprecated use `CreateTransferDestination$outboundSchema` instead. */
  export const outboundSchema = CreateTransferDestination$outboundSchema;
  /** @deprecated use `CreateTransferDestination$Outbound` instead. */
  export type Outbound = CreateTransferDestination$Outbound;
}

export function createTransferDestinationToJSON(
  createTransferDestination: CreateTransferDestination,
): string {
  return JSON.stringify(
    CreateTransferDestination$outboundSchema.parse(createTransferDestination),
  );
}

export function createTransferDestinationFromJSON(
  jsonString: string,
): SafeParseResult<CreateTransferDestination, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateTransferDestination$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateTransferDestination' from JSON`,
  );
}
