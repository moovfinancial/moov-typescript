/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PaymentMethodsCard,
  PaymentMethodsCard$inboundSchema,
  PaymentMethodsCard$Outbound,
  PaymentMethodsCard$outboundSchema,
} from "./paymentmethodscard.js";

export const PullFromCardPaymentMethodPaymentMethodType = {
  PullFromCard: "pull-from-card",
} as const;
export type PullFromCardPaymentMethodPaymentMethodType = ClosedEnum<
  typeof PullFromCardPaymentMethodPaymentMethodType
>;

export type PullFromCardPaymentMethod = {
  /**
   * ID of the payment method.
   */
  paymentMethodID: string;
  paymentMethodType: PullFromCardPaymentMethodPaymentMethodType;
  /**
   * A card as contained within a payment method.
   */
  card: PaymentMethodsCard;
};

/** @internal */
export const PullFromCardPaymentMethodPaymentMethodType$inboundSchema:
  z.ZodNativeEnum<typeof PullFromCardPaymentMethodPaymentMethodType> = z
    .nativeEnum(PullFromCardPaymentMethodPaymentMethodType);

/** @internal */
export const PullFromCardPaymentMethodPaymentMethodType$outboundSchema:
  z.ZodNativeEnum<typeof PullFromCardPaymentMethodPaymentMethodType> =
    PullFromCardPaymentMethodPaymentMethodType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PullFromCardPaymentMethodPaymentMethodType$ {
  /** @deprecated use `PullFromCardPaymentMethodPaymentMethodType$inboundSchema` instead. */
  export const inboundSchema =
    PullFromCardPaymentMethodPaymentMethodType$inboundSchema;
  /** @deprecated use `PullFromCardPaymentMethodPaymentMethodType$outboundSchema` instead. */
  export const outboundSchema =
    PullFromCardPaymentMethodPaymentMethodType$outboundSchema;
}

/** @internal */
export const PullFromCardPaymentMethod$inboundSchema: z.ZodType<
  PullFromCardPaymentMethod,
  z.ZodTypeDef,
  unknown
> = z.object({
  paymentMethodID: z.string(),
  paymentMethodType: PullFromCardPaymentMethodPaymentMethodType$inboundSchema,
  card: PaymentMethodsCard$inboundSchema,
});

/** @internal */
export type PullFromCardPaymentMethod$Outbound = {
  paymentMethodID: string;
  paymentMethodType: string;
  card: PaymentMethodsCard$Outbound;
};

/** @internal */
export const PullFromCardPaymentMethod$outboundSchema: z.ZodType<
  PullFromCardPaymentMethod$Outbound,
  z.ZodTypeDef,
  PullFromCardPaymentMethod
> = z.object({
  paymentMethodID: z.string(),
  paymentMethodType: PullFromCardPaymentMethodPaymentMethodType$outboundSchema,
  card: PaymentMethodsCard$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PullFromCardPaymentMethod$ {
  /** @deprecated use `PullFromCardPaymentMethod$inboundSchema` instead. */
  export const inboundSchema = PullFromCardPaymentMethod$inboundSchema;
  /** @deprecated use `PullFromCardPaymentMethod$outboundSchema` instead. */
  export const outboundSchema = PullFromCardPaymentMethod$outboundSchema;
  /** @deprecated use `PullFromCardPaymentMethod$Outbound` instead. */
  export type Outbound = PullFromCardPaymentMethod$Outbound;
}

export function pullFromCardPaymentMethodToJSON(
  pullFromCardPaymentMethod: PullFromCardPaymentMethod,
): string {
  return JSON.stringify(
    PullFromCardPaymentMethod$outboundSchema.parse(pullFromCardPaymentMethod),
  );
}

export function pullFromCardPaymentMethodFromJSON(
  jsonString: string,
): SafeParseResult<PullFromCardPaymentMethod, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PullFromCardPaymentMethod$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PullFromCardPaymentMethod' from JSON`,
  );
}
