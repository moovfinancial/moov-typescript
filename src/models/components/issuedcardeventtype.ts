/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The type of event that occurred on the card.
 */
export const IssuedCardEventType = {
  Authorization: "authorization",
  Reversal: "reversal",
  AuthorizationAdvice: "authorization-advice",
  AuthorizationExpiration: "authorization-expiration",
  AuthorizationIncremental: "authorization-incremental",
  Clearing: "clearing",
} as const;
/**
 * The type of event that occurred on the card.
 */
export type IssuedCardEventType = ClosedEnum<typeof IssuedCardEventType>;

/** @internal */
export const IssuedCardEventType$inboundSchema: z.ZodNativeEnum<
  typeof IssuedCardEventType
> = z.nativeEnum(IssuedCardEventType);

/** @internal */
export const IssuedCardEventType$outboundSchema: z.ZodNativeEnum<
  typeof IssuedCardEventType
> = IssuedCardEventType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IssuedCardEventType$ {
  /** @deprecated use `IssuedCardEventType$inboundSchema` instead. */
  export const inboundSchema = IssuedCardEventType$inboundSchema;
  /** @deprecated use `IssuedCardEventType$outboundSchema` instead. */
  export const outboundSchema = IssuedCardEventType$outboundSchema;
}
