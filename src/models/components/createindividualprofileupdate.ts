/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AddressUpdate,
  AddressUpdate$inboundSchema,
  AddressUpdate$Outbound,
  AddressUpdate$outboundSchema,
} from "./addressupdate.js";
import {
  BirthDateUpdate,
  BirthDateUpdate$inboundSchema,
  BirthDateUpdate$Outbound,
  BirthDateUpdate$outboundSchema,
} from "./birthdateupdate.js";
import {
  GovernmentID,
  GovernmentID$inboundSchema,
  GovernmentID$Outbound,
  GovernmentID$outboundSchema,
} from "./governmentid.js";
import {
  IndividualNameUpdate,
  IndividualNameUpdate$inboundSchema,
  IndividualNameUpdate$Outbound,
  IndividualNameUpdate$outboundSchema,
} from "./individualnameupdate.js";
import {
  PhoneNumber,
  PhoneNumber$inboundSchema,
  PhoneNumber$Outbound,
  PhoneNumber$outboundSchema,
} from "./phonenumber.js";

export type CreateIndividualProfileUpdate = {
  name?: IndividualNameUpdate | undefined;
  phone?: PhoneNumber | undefined;
  email?: string | undefined;
  address?: AddressUpdate | undefined;
  birthDate?: BirthDateUpdate | undefined;
  governmentID?: GovernmentID | undefined;
};

/** @internal */
export const CreateIndividualProfileUpdate$inboundSchema: z.ZodType<
  CreateIndividualProfileUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: IndividualNameUpdate$inboundSchema.optional(),
  phone: PhoneNumber$inboundSchema.optional(),
  email: z.string().optional(),
  address: AddressUpdate$inboundSchema.optional(),
  birthDate: BirthDateUpdate$inboundSchema.optional(),
  governmentID: GovernmentID$inboundSchema.optional(),
});

/** @internal */
export type CreateIndividualProfileUpdate$Outbound = {
  name?: IndividualNameUpdate$Outbound | undefined;
  phone?: PhoneNumber$Outbound | undefined;
  email?: string | undefined;
  address?: AddressUpdate$Outbound | undefined;
  birthDate?: BirthDateUpdate$Outbound | undefined;
  governmentID?: GovernmentID$Outbound | undefined;
};

/** @internal */
export const CreateIndividualProfileUpdate$outboundSchema: z.ZodType<
  CreateIndividualProfileUpdate$Outbound,
  z.ZodTypeDef,
  CreateIndividualProfileUpdate
> = z.object({
  name: IndividualNameUpdate$outboundSchema.optional(),
  phone: PhoneNumber$outboundSchema.optional(),
  email: z.string().optional(),
  address: AddressUpdate$outboundSchema.optional(),
  birthDate: BirthDateUpdate$outboundSchema.optional(),
  governmentID: GovernmentID$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateIndividualProfileUpdate$ {
  /** @deprecated use `CreateIndividualProfileUpdate$inboundSchema` instead. */
  export const inboundSchema = CreateIndividualProfileUpdate$inboundSchema;
  /** @deprecated use `CreateIndividualProfileUpdate$outboundSchema` instead. */
  export const outboundSchema = CreateIndividualProfileUpdate$outboundSchema;
  /** @deprecated use `CreateIndividualProfileUpdate$Outbound` instead. */
  export type Outbound = CreateIndividualProfileUpdate$Outbound;
}

export function createIndividualProfileUpdateToJSON(
  createIndividualProfileUpdate: CreateIndividualProfileUpdate,
): string {
  return JSON.stringify(
    CreateIndividualProfileUpdate$outboundSchema.parse(
      createIndividualProfileUpdate,
    ),
  );
}

export function createIndividualProfileUpdateFromJSON(
  jsonString: string,
): SafeParseResult<CreateIndividualProfileUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateIndividualProfileUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateIndividualProfileUpdate' from JSON`,
  );
}
