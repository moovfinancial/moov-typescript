/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  MoneyTransferPullFromCardError,
  MoneyTransferPullFromCardError$inboundSchema,
  MoneyTransferPullFromCardError$Outbound,
  MoneyTransferPullFromCardError$outboundSchema,
} from "./moneytransferpullfromcarderror.js";
import {
  MoneyTransferPushToCardError,
  MoneyTransferPushToCardError$inboundSchema,
  MoneyTransferPushToCardError$Outbound,
  MoneyTransferPushToCardError$outboundSchema,
} from "./moneytransferpushtocarderror.js";

export type MoneyTransferError = {
  pullFromCard?: MoneyTransferPullFromCardError | undefined;
  pushToCard?: MoneyTransferPushToCardError | undefined;
};

/** @internal */
export const MoneyTransferError$inboundSchema: z.ZodType<
  MoneyTransferError,
  z.ZodTypeDef,
  unknown
> = z.object({
  pullFromCard: MoneyTransferPullFromCardError$inboundSchema.optional(),
  pushToCard: MoneyTransferPushToCardError$inboundSchema.optional(),
});

/** @internal */
export type MoneyTransferError$Outbound = {
  pullFromCard?: MoneyTransferPullFromCardError$Outbound | undefined;
  pushToCard?: MoneyTransferPushToCardError$Outbound | undefined;
};

/** @internal */
export const MoneyTransferError$outboundSchema: z.ZodType<
  MoneyTransferError$Outbound,
  z.ZodTypeDef,
  MoneyTransferError
> = z.object({
  pullFromCard: MoneyTransferPullFromCardError$outboundSchema.optional(),
  pushToCard: MoneyTransferPushToCardError$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MoneyTransferError$ {
  /** @deprecated use `MoneyTransferError$inboundSchema` instead. */
  export const inboundSchema = MoneyTransferError$inboundSchema;
  /** @deprecated use `MoneyTransferError$outboundSchema` instead. */
  export const outboundSchema = MoneyTransferError$outboundSchema;
  /** @deprecated use `MoneyTransferError$Outbound` instead. */
  export type Outbound = MoneyTransferError$Outbound;
}

export function moneyTransferErrorToJSON(
  moneyTransferError: MoneyTransferError,
): string {
  return JSON.stringify(
    MoneyTransferError$outboundSchema.parse(moneyTransferError),
  );
}

export function moneyTransferErrorFromJSON(
  jsonString: string,
): SafeParseResult<MoneyTransferError, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MoneyTransferError$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MoneyTransferError' from JSON`,
  );
}
