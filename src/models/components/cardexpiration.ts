/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The expiration date of the card or token.
 */
export type CardExpiration = {
  month: string;
  year: string;
};

/** @internal */
export const CardExpiration$inboundSchema: z.ZodType<
  CardExpiration,
  z.ZodTypeDef,
  unknown
> = z.object({
  month: z.string(),
  year: z.string(),
});

/** @internal */
export type CardExpiration$Outbound = {
  month: string;
  year: string;
};

/** @internal */
export const CardExpiration$outboundSchema: z.ZodType<
  CardExpiration$Outbound,
  z.ZodTypeDef,
  CardExpiration
> = z.object({
  month: z.string(),
  year: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardExpiration$ {
  /** @deprecated use `CardExpiration$inboundSchema` instead. */
  export const inboundSchema = CardExpiration$inboundSchema;
  /** @deprecated use `CardExpiration$outboundSchema` instead. */
  export const outboundSchema = CardExpiration$outboundSchema;
  /** @deprecated use `CardExpiration$Outbound` instead. */
  export type Outbound = CardExpiration$Outbound;
}

export function cardExpirationToJSON(cardExpiration: CardExpiration): string {
  return JSON.stringify(CardExpiration$outboundSchema.parse(cardExpiration));
}

export function cardExpirationFromJSON(
  jsonString: string,
): SafeParseResult<CardExpiration, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CardExpiration$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CardExpiration' from JSON`,
  );
}
