/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ImageMetadataValidationError = {
  altText?: string | undefined;
};

/** @internal */
export const ImageMetadataValidationError$inboundSchema: z.ZodType<
  ImageMetadataValidationError,
  z.ZodTypeDef,
  unknown
> = z.object({
  altText: z.string().optional(),
});

/** @internal */
export type ImageMetadataValidationError$Outbound = {
  altText?: string | undefined;
};

/** @internal */
export const ImageMetadataValidationError$outboundSchema: z.ZodType<
  ImageMetadataValidationError$Outbound,
  z.ZodTypeDef,
  ImageMetadataValidationError
> = z.object({
  altText: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageMetadataValidationError$ {
  /** @deprecated use `ImageMetadataValidationError$inboundSchema` instead. */
  export const inboundSchema = ImageMetadataValidationError$inboundSchema;
  /** @deprecated use `ImageMetadataValidationError$outboundSchema` instead. */
  export const outboundSchema = ImageMetadataValidationError$outboundSchema;
  /** @deprecated use `ImageMetadataValidationError$Outbound` instead. */
  export type Outbound = ImageMetadataValidationError$Outbound;
}

export function imageMetadataValidationErrorToJSON(
  imageMetadataValidationError: ImageMetadataValidationError,
): string {
  return JSON.stringify(
    ImageMetadataValidationError$outboundSchema.parse(
      imageMetadataValidationError,
    ),
  );
}

export function imageMetadataValidationErrorFromJSON(
  jsonString: string,
): SafeParseResult<ImageMetadataValidationError, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ImageMetadataValidationError$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ImageMetadataValidationError' from JSON`,
  );
}
