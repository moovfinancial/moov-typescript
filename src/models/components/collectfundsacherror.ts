/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  EstimatedActivityError,
  EstimatedActivityError$inboundSchema,
  EstimatedActivityError$Outbound,
  EstimatedActivityError$outboundSchema,
} from "./estimatedactivityerror.js";

export type CollectFundsAchError = {
  estimatedActivity?: EstimatedActivityError | undefined;
};

/** @internal */
export const CollectFundsAchError$inboundSchema: z.ZodType<
  CollectFundsAchError,
  z.ZodTypeDef,
  unknown
> = z.object({
  estimatedActivity: EstimatedActivityError$inboundSchema.optional(),
});

/** @internal */
export type CollectFundsAchError$Outbound = {
  estimatedActivity?: EstimatedActivityError$Outbound | undefined;
};

/** @internal */
export const CollectFundsAchError$outboundSchema: z.ZodType<
  CollectFundsAchError$Outbound,
  z.ZodTypeDef,
  CollectFundsAchError
> = z.object({
  estimatedActivity: EstimatedActivityError$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CollectFundsAchError$ {
  /** @deprecated use `CollectFundsAchError$inboundSchema` instead. */
  export const inboundSchema = CollectFundsAchError$inboundSchema;
  /** @deprecated use `CollectFundsAchError$outboundSchema` instead. */
  export const outboundSchema = CollectFundsAchError$outboundSchema;
  /** @deprecated use `CollectFundsAchError$Outbound` instead. */
  export type Outbound = CollectFundsAchError$Outbound;
}

export function collectFundsAchErrorToJSON(
  collectFundsAchError: CollectFundsAchError,
): string {
  return JSON.stringify(
    CollectFundsAchError$outboundSchema.parse(collectFundsAchError),
  );
}

export function collectFundsAchErrorFromJSON(
  jsonString: string,
): SafeParseResult<CollectFundsAchError, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CollectFundsAchError$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CollectFundsAchError' from JSON`,
  );
}
