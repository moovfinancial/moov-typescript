/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  EstimatedActivity,
  EstimatedActivity$inboundSchema,
  EstimatedActivity$Outbound,
  EstimatedActivity$outboundSchema,
} from "./estimatedactivity.js";

export type SendFundsAch = {
  estimatedActivity?: EstimatedActivity | undefined;
};

/** @internal */
export const SendFundsAch$inboundSchema: z.ZodType<
  SendFundsAch,
  z.ZodTypeDef,
  unknown
> = z.object({
  estimatedActivity: EstimatedActivity$inboundSchema.optional(),
});

/** @internal */
export type SendFundsAch$Outbound = {
  estimatedActivity?: EstimatedActivity$Outbound | undefined;
};

/** @internal */
export const SendFundsAch$outboundSchema: z.ZodType<
  SendFundsAch$Outbound,
  z.ZodTypeDef,
  SendFundsAch
> = z.object({
  estimatedActivity: EstimatedActivity$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendFundsAch$ {
  /** @deprecated use `SendFundsAch$inboundSchema` instead. */
  export const inboundSchema = SendFundsAch$inboundSchema;
  /** @deprecated use `SendFundsAch$outboundSchema` instead. */
  export const outboundSchema = SendFundsAch$outboundSchema;
  /** @deprecated use `SendFundsAch$Outbound` instead. */
  export type Outbound = SendFundsAch$Outbound;
}

export function sendFundsAchToJSON(sendFundsAch: SendFundsAch): string {
  return JSON.stringify(SendFundsAch$outboundSchema.parse(sendFundsAch));
}

export function sendFundsAchFromJSON(
  jsonString: string,
): SafeParseResult<SendFundsAch, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SendFundsAch$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SendFundsAch' from JSON`,
  );
}
