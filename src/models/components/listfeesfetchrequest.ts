/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Array of fee IDs to fetch.
 */
export type ListFeesFetchRequest = {
  feeIDs?: Array<string> | undefined;
};

/** @internal */
export const ListFeesFetchRequest$inboundSchema: z.ZodType<
  ListFeesFetchRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  feeIDs: z.array(z.string()).optional(),
});

/** @internal */
export type ListFeesFetchRequest$Outbound = {
  feeIDs?: Array<string> | undefined;
};

/** @internal */
export const ListFeesFetchRequest$outboundSchema: z.ZodType<
  ListFeesFetchRequest$Outbound,
  z.ZodTypeDef,
  ListFeesFetchRequest
> = z.object({
  feeIDs: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListFeesFetchRequest$ {
  /** @deprecated use `ListFeesFetchRequest$inboundSchema` instead. */
  export const inboundSchema = ListFeesFetchRequest$inboundSchema;
  /** @deprecated use `ListFeesFetchRequest$outboundSchema` instead. */
  export const outboundSchema = ListFeesFetchRequest$outboundSchema;
  /** @deprecated use `ListFeesFetchRequest$Outbound` instead. */
  export type Outbound = ListFeesFetchRequest$Outbound;
}

export function listFeesFetchRequestToJSON(
  listFeesFetchRequest: ListFeesFetchRequest,
): string {
  return JSON.stringify(
    ListFeesFetchRequest$outboundSchema.parse(listFeesFetchRequest),
  );
}

export function listFeesFetchRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListFeesFetchRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListFeesFetchRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListFeesFetchRequest' from JSON`,
  );
}
