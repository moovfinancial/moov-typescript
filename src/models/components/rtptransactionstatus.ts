/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Status of a transaction within the RTP lifecycle.
 */
export const RTPTransactionStatus = {
  Initiated: "initiated",
  Completed: "completed",
  Failed: "failed",
  AcceptedWithoutPosting: "accepted-without-posting",
} as const;
/**
 * Status of a transaction within the RTP lifecycle.
 */
export type RTPTransactionStatus = ClosedEnum<typeof RTPTransactionStatus>;

/** @internal */
export const RTPTransactionStatus$inboundSchema: z.ZodNativeEnum<
  typeof RTPTransactionStatus
> = z.nativeEnum(RTPTransactionStatus);

/** @internal */
export const RTPTransactionStatus$outboundSchema: z.ZodNativeEnum<
  typeof RTPTransactionStatus
> = RTPTransactionStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RTPTransactionStatus$ {
  /** @deprecated use `RTPTransactionStatus$inboundSchema` instead. */
  export const inboundSchema = RTPTransactionStatus$inboundSchema;
  /** @deprecated use `RTPTransactionStatus$outboundSchema` instead. */
  export const outboundSchema = RTPTransactionStatus$outboundSchema;
}
