/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Moov API versions.
 *
 * @remarks
 *
 * API versioning follows the format `vYYYY.QQ.BB`, where
 *   - `YYYY` is the year
 *   - `QQ` is the two-digit month for the first month of the quarter (e.g., 01, 04, 07, 10)
 *   - `BB` is an optional build number starting at `.01` for subsequent builds in the same quarter.
 *     - If no build number is specified, the version refers to the initial release of the quarter.
 *
 * The `latest` version represents the most recent development state. It may include breaking changes and should be treated as a beta release.
 */
export const Versions = {
  V202401: "v2024.01",
  V202501: "v2025.01",
  V202504: "v2025.04",
  V202507: "v2025.07",
  V202510: "v2025.10",
  Latest: "latest",
} as const;
/**
 * Moov API versions.
 *
 * @remarks
 *
 * API versioning follows the format `vYYYY.QQ.BB`, where
 *   - `YYYY` is the year
 *   - `QQ` is the two-digit month for the first month of the quarter (e.g., 01, 04, 07, 10)
 *   - `BB` is an optional build number starting at `.01` for subsequent builds in the same quarter.
 *     - If no build number is specified, the version refers to the initial release of the quarter.
 *
 * The `latest` version represents the most recent development state. It may include breaking changes and should be treated as a beta release.
 */
export type Versions = ClosedEnum<typeof Versions>;

/** @internal */
export const Versions$inboundSchema: z.ZodNativeEnum<typeof Versions> = z
  .nativeEnum(Versions);

/** @internal */
export const Versions$outboundSchema: z.ZodNativeEnum<typeof Versions> =
  Versions$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Versions$ {
  /** @deprecated use `Versions$inboundSchema` instead. */
  export const inboundSchema = Versions$inboundSchema;
  /** @deprecated use `Versions$outboundSchema` instead. */
  export const outboundSchema = Versions$outboundSchema;
}
