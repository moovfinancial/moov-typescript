/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Payment method details for the source or destination of a transfer.
 */
export type WebhookTransferPaymentMethodDetails = {
  accountID: string;
  paymentMethodID: string;
};

/** @internal */
export const WebhookTransferPaymentMethodDetails$inboundSchema: z.ZodType<
  WebhookTransferPaymentMethodDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountID: z.string(),
  paymentMethodID: z.string(),
});

/** @internal */
export type WebhookTransferPaymentMethodDetails$Outbound = {
  accountID: string;
  paymentMethodID: string;
};

/** @internal */
export const WebhookTransferPaymentMethodDetails$outboundSchema: z.ZodType<
  WebhookTransferPaymentMethodDetails$Outbound,
  z.ZodTypeDef,
  WebhookTransferPaymentMethodDetails
> = z.object({
  accountID: z.string(),
  paymentMethodID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookTransferPaymentMethodDetails$ {
  /** @deprecated use `WebhookTransferPaymentMethodDetails$inboundSchema` instead. */
  export const inboundSchema =
    WebhookTransferPaymentMethodDetails$inboundSchema;
  /** @deprecated use `WebhookTransferPaymentMethodDetails$outboundSchema` instead. */
  export const outboundSchema =
    WebhookTransferPaymentMethodDetails$outboundSchema;
  /** @deprecated use `WebhookTransferPaymentMethodDetails$Outbound` instead. */
  export type Outbound = WebhookTransferPaymentMethodDetails$Outbound;
}

export function webhookTransferPaymentMethodDetailsToJSON(
  webhookTransferPaymentMethodDetails: WebhookTransferPaymentMethodDetails,
): string {
  return JSON.stringify(
    WebhookTransferPaymentMethodDetails$outboundSchema.parse(
      webhookTransferPaymentMethodDetails,
    ),
  );
}

export function webhookTransferPaymentMethodDetailsFromJSON(
  jsonString: string,
): SafeParseResult<WebhookTransferPaymentMethodDetails, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      WebhookTransferPaymentMethodDetails$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WebhookTransferPaymentMethodDetails' from JSON`,
  );
}
