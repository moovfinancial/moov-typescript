/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EnrichedIndustryCodes = {
  naics?: string | undefined;
  sic?: string | undefined;
};

/** @internal */
export const EnrichedIndustryCodes$inboundSchema: z.ZodType<
  EnrichedIndustryCodes,
  z.ZodTypeDef,
  unknown
> = z.object({
  naics: z.string().optional(),
  sic: z.string().optional(),
});

/** @internal */
export type EnrichedIndustryCodes$Outbound = {
  naics?: string | undefined;
  sic?: string | undefined;
};

/** @internal */
export const EnrichedIndustryCodes$outboundSchema: z.ZodType<
  EnrichedIndustryCodes$Outbound,
  z.ZodTypeDef,
  EnrichedIndustryCodes
> = z.object({
  naics: z.string().optional(),
  sic: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EnrichedIndustryCodes$ {
  /** @deprecated use `EnrichedIndustryCodes$inboundSchema` instead. */
  export const inboundSchema = EnrichedIndustryCodes$inboundSchema;
  /** @deprecated use `EnrichedIndustryCodes$outboundSchema` instead. */
  export const outboundSchema = EnrichedIndustryCodes$outboundSchema;
  /** @deprecated use `EnrichedIndustryCodes$Outbound` instead. */
  export type Outbound = EnrichedIndustryCodes$Outbound;
}

export function enrichedIndustryCodesToJSON(
  enrichedIndustryCodes: EnrichedIndustryCodes,
): string {
  return JSON.stringify(
    EnrichedIndustryCodes$outboundSchema.parse(enrichedIndustryCodes),
  );
}

export function enrichedIndustryCodesFromJSON(
  jsonString: string,
): SafeParseResult<EnrichedIndustryCodes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EnrichedIndustryCodes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EnrichedIndustryCodes' from JSON`,
  );
}
