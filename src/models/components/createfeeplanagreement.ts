/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateFeePlanAgreement = {
  planID: string;
};

/** @internal */
export const CreateFeePlanAgreement$inboundSchema: z.ZodType<
  CreateFeePlanAgreement,
  z.ZodTypeDef,
  unknown
> = z.object({
  planID: z.string(),
});

/** @internal */
export type CreateFeePlanAgreement$Outbound = {
  planID: string;
};

/** @internal */
export const CreateFeePlanAgreement$outboundSchema: z.ZodType<
  CreateFeePlanAgreement$Outbound,
  z.ZodTypeDef,
  CreateFeePlanAgreement
> = z.object({
  planID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateFeePlanAgreement$ {
  /** @deprecated use `CreateFeePlanAgreement$inboundSchema` instead. */
  export const inboundSchema = CreateFeePlanAgreement$inboundSchema;
  /** @deprecated use `CreateFeePlanAgreement$outboundSchema` instead. */
  export const outboundSchema = CreateFeePlanAgreement$outboundSchema;
  /** @deprecated use `CreateFeePlanAgreement$Outbound` instead. */
  export type Outbound = CreateFeePlanAgreement$Outbound;
}

export function createFeePlanAgreementToJSON(
  createFeePlanAgreement: CreateFeePlanAgreement,
): string {
  return JSON.stringify(
    CreateFeePlanAgreement$outboundSchema.parse(createFeePlanAgreement),
  );
}

export function createFeePlanAgreementFromJSON(
  jsonString: string,
): SafeParseResult<CreateFeePlanAgreement, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateFeePlanAgreement$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateFeePlanAgreement' from JSON`,
  );
}
