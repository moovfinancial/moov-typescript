/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PaymentMethodsCard,
  PaymentMethodsCard$inboundSchema,
  PaymentMethodsCard$Outbound,
  PaymentMethodsCard$outboundSchema,
} from "./paymentmethodscard.js";

export const PushToCardPaymentMethodPaymentMethodType = {
  PushToCard: "push-to-card",
} as const;
export type PushToCardPaymentMethodPaymentMethodType = ClosedEnum<
  typeof PushToCardPaymentMethodPaymentMethodType
>;

export type PushToCardPaymentMethod = {
  /**
   * ID of the payment method.
   */
  paymentMethodID: string;
  paymentMethodType: PushToCardPaymentMethodPaymentMethodType;
  /**
   * A card as contained within a payment method.
   */
  card: PaymentMethodsCard;
};

/** @internal */
export const PushToCardPaymentMethodPaymentMethodType$inboundSchema:
  z.ZodNativeEnum<typeof PushToCardPaymentMethodPaymentMethodType> = z
    .nativeEnum(PushToCardPaymentMethodPaymentMethodType);

/** @internal */
export const PushToCardPaymentMethodPaymentMethodType$outboundSchema:
  z.ZodNativeEnum<typeof PushToCardPaymentMethodPaymentMethodType> =
    PushToCardPaymentMethodPaymentMethodType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PushToCardPaymentMethodPaymentMethodType$ {
  /** @deprecated use `PushToCardPaymentMethodPaymentMethodType$inboundSchema` instead. */
  export const inboundSchema =
    PushToCardPaymentMethodPaymentMethodType$inboundSchema;
  /** @deprecated use `PushToCardPaymentMethodPaymentMethodType$outboundSchema` instead. */
  export const outboundSchema =
    PushToCardPaymentMethodPaymentMethodType$outboundSchema;
}

/** @internal */
export const PushToCardPaymentMethod$inboundSchema: z.ZodType<
  PushToCardPaymentMethod,
  z.ZodTypeDef,
  unknown
> = z.object({
  paymentMethodID: z.string(),
  paymentMethodType: PushToCardPaymentMethodPaymentMethodType$inboundSchema,
  card: PaymentMethodsCard$inboundSchema,
});

/** @internal */
export type PushToCardPaymentMethod$Outbound = {
  paymentMethodID: string;
  paymentMethodType: string;
  card: PaymentMethodsCard$Outbound;
};

/** @internal */
export const PushToCardPaymentMethod$outboundSchema: z.ZodType<
  PushToCardPaymentMethod$Outbound,
  z.ZodTypeDef,
  PushToCardPaymentMethod
> = z.object({
  paymentMethodID: z.string(),
  paymentMethodType: PushToCardPaymentMethodPaymentMethodType$outboundSchema,
  card: PaymentMethodsCard$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PushToCardPaymentMethod$ {
  /** @deprecated use `PushToCardPaymentMethod$inboundSchema` instead. */
  export const inboundSchema = PushToCardPaymentMethod$inboundSchema;
  /** @deprecated use `PushToCardPaymentMethod$outboundSchema` instead. */
  export const outboundSchema = PushToCardPaymentMethod$outboundSchema;
  /** @deprecated use `PushToCardPaymentMethod$Outbound` instead. */
  export type Outbound = PushToCardPaymentMethod$Outbound;
}

export function pushToCardPaymentMethodToJSON(
  pushToCardPaymentMethod: PushToCardPaymentMethod,
): string {
  return JSON.stringify(
    PushToCardPaymentMethod$outboundSchema.parse(pushToCardPaymentMethod),
  );
}

export function pushToCardPaymentMethodFromJSON(
  jsonString: string,
): SafeParseResult<PushToCardPaymentMethod, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PushToCardPaymentMethod$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PushToCardPaymentMethod' from JSON`,
  );
}
