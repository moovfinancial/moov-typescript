/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { ClosedEnum } from "../../types/enums.js";

export const PendingLitigation = {
  BankruptcyOrInsolvency: "bankruptcy-or-insolvency",
  ConsumerProtectionOrClassAction: "consumer-protection-or-class-action",
  DataBreachOrPrivacy: "data-breach-or-privacy",
  EmploymentOrWorkplaceDisputes: "employment-or-workplace-disputes",
  FraudOrFinancialCrime: "fraud-or-financial-crime",
  GovernmentEnforcementOrInvestigation:
    "government-enforcement-or-investigation",
  IntellectualProperty: "intellectual-property",
  None: "none",
  Other: "other",
  PersonalInjuryOrMedical: "personal-injury-or-medical",
} as const;
export type PendingLitigation = ClosedEnum<typeof PendingLitigation>;

/** @internal */
export const PendingLitigation$inboundSchema: z.ZodNativeEnum<
  typeof PendingLitigation
> = z.nativeEnum(PendingLitigation);

/** @internal */
export const PendingLitigation$outboundSchema: z.ZodNativeEnum<
  typeof PendingLitigation
> = PendingLitigation$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PendingLitigation$ {
  /** @deprecated use `PendingLitigation$inboundSchema` instead. */
  export const inboundSchema = PendingLitigation$inboundSchema;
  /** @deprecated use `PendingLitigation$outboundSchema` instead. */
  export const outboundSchema = PendingLitigation$outboundSchema;
}
