/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The phase of a dispute within the dispute lifecycle.
 */
export const DisputePhase = {
  PreDispute: "pre-dispute",
  Inquiry: "inquiry",
  Chargeback: "chargeback",
  Unknown: "unknown",
} as const;
/**
 * The phase of a dispute within the dispute lifecycle.
 */
export type DisputePhase = ClosedEnum<typeof DisputePhase>;

/** @internal */
export const DisputePhase$inboundSchema: z.ZodNativeEnum<typeof DisputePhase> =
  z.nativeEnum(DisputePhase);

/** @internal */
export const DisputePhase$outboundSchema: z.ZodNativeEnum<typeof DisputePhase> =
  DisputePhase$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DisputePhase$ {
  /** @deprecated use `DisputePhase$inboundSchema` instead. */
  export const inboundSchema = DisputePhase$inboundSchema;
  /** @deprecated use `DisputePhase$outboundSchema` instead. */
  export const outboundSchema = DisputePhase$outboundSchema;
}
