/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type BrandColor = {
  /**
   * A CSS hex color representing an accent color.
   */
  accent: string;
};

/** @internal */
export const BrandColor$inboundSchema: z.ZodType<
  BrandColor,
  z.ZodTypeDef,
  unknown
> = z.object({
  accent: z.string(),
});

/** @internal */
export type BrandColor$Outbound = {
  accent: string;
};

/** @internal */
export const BrandColor$outboundSchema: z.ZodType<
  BrandColor$Outbound,
  z.ZodTypeDef,
  BrandColor
> = z.object({
  accent: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BrandColor$ {
  /** @deprecated use `BrandColor$inboundSchema` instead. */
  export const inboundSchema = BrandColor$inboundSchema;
  /** @deprecated use `BrandColor$outboundSchema` instead. */
  export const outboundSchema = BrandColor$outboundSchema;
  /** @deprecated use `BrandColor$Outbound` instead. */
  export type Outbound = BrandColor$Outbound;
}

export function brandColorToJSON(brandColor: BrandColor): string {
  return JSON.stringify(BrandColor$outboundSchema.parse(brandColor));
}

export function brandColorFromJSON(
  jsonString: string,
): SafeParseResult<BrandColor, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BrandColor$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BrandColor' from JSON`,
  );
}
