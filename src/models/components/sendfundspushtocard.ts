/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  EstimatedActivity,
  EstimatedActivity$inboundSchema,
  EstimatedActivity$Outbound,
  EstimatedActivity$outboundSchema,
} from "./estimatedactivity.js";

export type SendFundsPushToCard = {
  estimatedActivity?: EstimatedActivity | undefined;
};

/** @internal */
export const SendFundsPushToCard$inboundSchema: z.ZodType<
  SendFundsPushToCard,
  z.ZodTypeDef,
  unknown
> = z.object({
  estimatedActivity: EstimatedActivity$inboundSchema.optional(),
});

/** @internal */
export type SendFundsPushToCard$Outbound = {
  estimatedActivity?: EstimatedActivity$Outbound | undefined;
};

/** @internal */
export const SendFundsPushToCard$outboundSchema: z.ZodType<
  SendFundsPushToCard$Outbound,
  z.ZodTypeDef,
  SendFundsPushToCard
> = z.object({
  estimatedActivity: EstimatedActivity$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendFundsPushToCard$ {
  /** @deprecated use `SendFundsPushToCard$inboundSchema` instead. */
  export const inboundSchema = SendFundsPushToCard$inboundSchema;
  /** @deprecated use `SendFundsPushToCard$outboundSchema` instead. */
  export const outboundSchema = SendFundsPushToCard$outboundSchema;
  /** @deprecated use `SendFundsPushToCard$Outbound` instead. */
  export type Outbound = SendFundsPushToCard$Outbound;
}

export function sendFundsPushToCardToJSON(
  sendFundsPushToCard: SendFundsPushToCard,
): string {
  return JSON.stringify(
    SendFundsPushToCard$outboundSchema.parse(sendFundsPushToCard),
  );
}

export function sendFundsPushToCardFromJSON(
  jsonString: string,
): SafeParseResult<SendFundsPushToCard, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SendFundsPushToCard$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SendFundsPushToCard' from JSON`,
  );
}
