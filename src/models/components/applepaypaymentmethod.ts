/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ApplePayResponse,
  ApplePayResponse$inboundSchema,
  ApplePayResponse$Outbound,
  ApplePayResponse$outboundSchema,
} from "./applepayresponse.js";

export const ApplePayPaymentMethodPaymentMethodType = {
  ApplePay: "apple-pay",
} as const;
export type ApplePayPaymentMethodPaymentMethodType = ClosedEnum<
  typeof ApplePayPaymentMethodPaymentMethodType
>;

export type ApplePayPaymentMethod = {
  /**
   * ID of the payment method.
   */
  paymentMethodID: string;
  paymentMethodType: ApplePayPaymentMethodPaymentMethodType;
  /**
   * Describes an Apple Pay token on a Moov account.
   */
  applePay: ApplePayResponse;
};

/** @internal */
export const ApplePayPaymentMethodPaymentMethodType$inboundSchema:
  z.ZodNativeEnum<typeof ApplePayPaymentMethodPaymentMethodType> = z.nativeEnum(
    ApplePayPaymentMethodPaymentMethodType,
  );

/** @internal */
export const ApplePayPaymentMethodPaymentMethodType$outboundSchema:
  z.ZodNativeEnum<typeof ApplePayPaymentMethodPaymentMethodType> =
    ApplePayPaymentMethodPaymentMethodType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplePayPaymentMethodPaymentMethodType$ {
  /** @deprecated use `ApplePayPaymentMethodPaymentMethodType$inboundSchema` instead. */
  export const inboundSchema =
    ApplePayPaymentMethodPaymentMethodType$inboundSchema;
  /** @deprecated use `ApplePayPaymentMethodPaymentMethodType$outboundSchema` instead. */
  export const outboundSchema =
    ApplePayPaymentMethodPaymentMethodType$outboundSchema;
}

/** @internal */
export const ApplePayPaymentMethod$inboundSchema: z.ZodType<
  ApplePayPaymentMethod,
  z.ZodTypeDef,
  unknown
> = z.object({
  paymentMethodID: z.string(),
  paymentMethodType: ApplePayPaymentMethodPaymentMethodType$inboundSchema,
  applePay: ApplePayResponse$inboundSchema,
});

/** @internal */
export type ApplePayPaymentMethod$Outbound = {
  paymentMethodID: string;
  paymentMethodType: string;
  applePay: ApplePayResponse$Outbound;
};

/** @internal */
export const ApplePayPaymentMethod$outboundSchema: z.ZodType<
  ApplePayPaymentMethod$Outbound,
  z.ZodTypeDef,
  ApplePayPaymentMethod
> = z.object({
  paymentMethodID: z.string(),
  paymentMethodType: ApplePayPaymentMethodPaymentMethodType$outboundSchema,
  applePay: ApplePayResponse$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplePayPaymentMethod$ {
  /** @deprecated use `ApplePayPaymentMethod$inboundSchema` instead. */
  export const inboundSchema = ApplePayPaymentMethod$inboundSchema;
  /** @deprecated use `ApplePayPaymentMethod$outboundSchema` instead. */
  export const outboundSchema = ApplePayPaymentMethod$outboundSchema;
  /** @deprecated use `ApplePayPaymentMethod$Outbound` instead. */
  export type Outbound = ApplePayPaymentMethod$Outbound;
}

export function applePayPaymentMethodToJSON(
  applePayPaymentMethod: ApplePayPaymentMethod,
): string {
  return JSON.stringify(
    ApplePayPaymentMethod$outboundSchema.parse(applePayPaymentMethod),
  );
}

export function applePayPaymentMethodFromJSON(
  jsonString: string,
): SafeParseResult<ApplePayPaymentMethod, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApplePayPaymentMethod$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApplePayPaymentMethod' from JSON`,
  );
}
