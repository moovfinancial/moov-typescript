/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { ClosedEnum } from "../../types/enums.js";

/**
 * An [RFC 6750](https://www.rfc-editor.org/rfc/rfc6750#section-6.1) token type.
 */
export const TokenType = {
  Bearer: "Bearer",
} as const;
/**
 * An [RFC 6750](https://www.rfc-editor.org/rfc/rfc6750#section-6.1) token type.
 */
export type TokenType = ClosedEnum<typeof TokenType>;

/** @internal */
export const TokenType$inboundSchema: z.ZodNativeEnum<typeof TokenType> = z
  .nativeEnum(TokenType);

/** @internal */
export const TokenType$outboundSchema: z.ZodNativeEnum<typeof TokenType> =
  TokenType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TokenType$ {
  /** @deprecated use `TokenType$inboundSchema` instead. */
  export const inboundSchema = TokenType$inboundSchema;
  /** @deprecated use `TokenType$outboundSchema` instead. */
  export const outboundSchema = TokenType$outboundSchema;
}
