/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RTPServices = {
  /**
   * Can the institution receive payments
   */
  receivePayments: boolean;
  /**
   * Can the institution receive request for payment messages
   */
  receiveRequestForPayment: boolean;
};

/** @internal */
export const RTPServices$inboundSchema: z.ZodType<
  RTPServices,
  z.ZodTypeDef,
  unknown
> = z.object({
  receivePayments: z.boolean(),
  receiveRequestForPayment: z.boolean(),
});

/** @internal */
export type RTPServices$Outbound = {
  receivePayments: boolean;
  receiveRequestForPayment: boolean;
};

/** @internal */
export const RTPServices$outboundSchema: z.ZodType<
  RTPServices$Outbound,
  z.ZodTypeDef,
  RTPServices
> = z.object({
  receivePayments: z.boolean(),
  receiveRequestForPayment: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RTPServices$ {
  /** @deprecated use `RTPServices$inboundSchema` instead. */
  export const inboundSchema = RTPServices$inboundSchema;
  /** @deprecated use `RTPServices$outboundSchema` instead. */
  export const outboundSchema = RTPServices$outboundSchema;
  /** @deprecated use `RTPServices$Outbound` instead. */
  export type Outbound = RTPServices$Outbound;
}

export function rtpServicesToJSON(rtpServices: RTPServices): string {
  return JSON.stringify(RTPServices$outboundSchema.parse(rtpServices));
}

export function rtpServicesFromJSON(
  jsonString: string,
): SafeParseResult<RTPServices, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RTPServices$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RTPServices' from JSON`,
  );
}
