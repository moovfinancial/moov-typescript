/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PaymentMethodsWallet,
  PaymentMethodsWallet$inboundSchema,
  PaymentMethodsWallet$Outbound,
  PaymentMethodsWallet$outboundSchema,
} from "./paymentmethodswallet.js";

export const MoovWalletPaymentMethodPaymentMethodType = {
  MoovWallet: "moov-wallet",
} as const;
export type MoovWalletPaymentMethodPaymentMethodType = ClosedEnum<
  typeof MoovWalletPaymentMethodPaymentMethodType
>;

export type MoovWalletPaymentMethod = {
  /**
   * ID of the payment method.
   */
  paymentMethodID: string;
  paymentMethodType: MoovWalletPaymentMethodPaymentMethodType;
  wallet: PaymentMethodsWallet;
};

/** @internal */
export const MoovWalletPaymentMethodPaymentMethodType$inboundSchema:
  z.ZodNativeEnum<typeof MoovWalletPaymentMethodPaymentMethodType> = z
    .nativeEnum(MoovWalletPaymentMethodPaymentMethodType);

/** @internal */
export const MoovWalletPaymentMethodPaymentMethodType$outboundSchema:
  z.ZodNativeEnum<typeof MoovWalletPaymentMethodPaymentMethodType> =
    MoovWalletPaymentMethodPaymentMethodType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MoovWalletPaymentMethodPaymentMethodType$ {
  /** @deprecated use `MoovWalletPaymentMethodPaymentMethodType$inboundSchema` instead. */
  export const inboundSchema =
    MoovWalletPaymentMethodPaymentMethodType$inboundSchema;
  /** @deprecated use `MoovWalletPaymentMethodPaymentMethodType$outboundSchema` instead. */
  export const outboundSchema =
    MoovWalletPaymentMethodPaymentMethodType$outboundSchema;
}

/** @internal */
export const MoovWalletPaymentMethod$inboundSchema: z.ZodType<
  MoovWalletPaymentMethod,
  z.ZodTypeDef,
  unknown
> = z.object({
  paymentMethodID: z.string(),
  paymentMethodType: MoovWalletPaymentMethodPaymentMethodType$inboundSchema,
  wallet: PaymentMethodsWallet$inboundSchema,
});

/** @internal */
export type MoovWalletPaymentMethod$Outbound = {
  paymentMethodID: string;
  paymentMethodType: string;
  wallet: PaymentMethodsWallet$Outbound;
};

/** @internal */
export const MoovWalletPaymentMethod$outboundSchema: z.ZodType<
  MoovWalletPaymentMethod$Outbound,
  z.ZodTypeDef,
  MoovWalletPaymentMethod
> = z.object({
  paymentMethodID: z.string(),
  paymentMethodType: MoovWalletPaymentMethodPaymentMethodType$outboundSchema,
  wallet: PaymentMethodsWallet$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MoovWalletPaymentMethod$ {
  /** @deprecated use `MoovWalletPaymentMethod$inboundSchema` instead. */
  export const inboundSchema = MoovWalletPaymentMethod$inboundSchema;
  /** @deprecated use `MoovWalletPaymentMethod$outboundSchema` instead. */
  export const outboundSchema = MoovWalletPaymentMethod$outboundSchema;
  /** @deprecated use `MoovWalletPaymentMethod$Outbound` instead. */
  export type Outbound = MoovWalletPaymentMethod$Outbound;
}

export function moovWalletPaymentMethodToJSON(
  moovWalletPaymentMethod: MoovWalletPaymentMethod,
): string {
  return JSON.stringify(
    MoovWalletPaymentMethod$outboundSchema.parse(moovWalletPaymentMethod),
  );
}

export function moovWalletPaymentMethodFromJSON(
  jsonString: string,
): SafeParseResult<MoovWalletPaymentMethod, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MoovWalletPaymentMethod$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MoovWalletPaymentMethod' from JSON`,
  );
}
