/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Address,
  Address$inboundSchema,
  Address$Outbound,
  Address$outboundSchema,
} from "./address.js";
import {
  BirthDate,
  BirthDate$inboundSchema,
  BirthDate$Outbound,
  BirthDate$outboundSchema,
} from "./birthdate.js";
import {
  GovernmentID,
  GovernmentID$inboundSchema,
  GovernmentID$Outbound,
  GovernmentID$outboundSchema,
} from "./governmentid.js";
import {
  IndividualName,
  IndividualName$inboundSchema,
  IndividualName$Outbound,
  IndividualName$outboundSchema,
} from "./individualname.js";
import {
  PhoneNumber,
  PhoneNumber$inboundSchema,
  PhoneNumber$Outbound,
  PhoneNumber$outboundSchema,
} from "./phonenumber.js";

export type CreateIndividualProfile = {
  name: IndividualName;
  phone?: PhoneNumber | undefined;
  email?: string | undefined;
  address?: Address | undefined;
  birthDate?: BirthDate | undefined;
  governmentID?: GovernmentID | undefined;
};

/** @internal */
export const CreateIndividualProfile$inboundSchema: z.ZodType<
  CreateIndividualProfile,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: IndividualName$inboundSchema,
  phone: PhoneNumber$inboundSchema.optional(),
  email: z.string().optional(),
  address: Address$inboundSchema.optional(),
  birthDate: BirthDate$inboundSchema.optional(),
  governmentID: GovernmentID$inboundSchema.optional(),
});

/** @internal */
export type CreateIndividualProfile$Outbound = {
  name: IndividualName$Outbound;
  phone?: PhoneNumber$Outbound | undefined;
  email?: string | undefined;
  address?: Address$Outbound | undefined;
  birthDate?: BirthDate$Outbound | undefined;
  governmentID?: GovernmentID$Outbound | undefined;
};

/** @internal */
export const CreateIndividualProfile$outboundSchema: z.ZodType<
  CreateIndividualProfile$Outbound,
  z.ZodTypeDef,
  CreateIndividualProfile
> = z.object({
  name: IndividualName$outboundSchema,
  phone: PhoneNumber$outboundSchema.optional(),
  email: z.string().optional(),
  address: Address$outboundSchema.optional(),
  birthDate: BirthDate$outboundSchema.optional(),
  governmentID: GovernmentID$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateIndividualProfile$ {
  /** @deprecated use `CreateIndividualProfile$inboundSchema` instead. */
  export const inboundSchema = CreateIndividualProfile$inboundSchema;
  /** @deprecated use `CreateIndividualProfile$outboundSchema` instead. */
  export const outboundSchema = CreateIndividualProfile$outboundSchema;
  /** @deprecated use `CreateIndividualProfile$Outbound` instead. */
  export type Outbound = CreateIndividualProfile$Outbound;
}

export function createIndividualProfileToJSON(
  createIndividualProfile: CreateIndividualProfile,
): string {
  return JSON.stringify(
    CreateIndividualProfile$outboundSchema.parse(createIndividualProfile),
  );
}

export function createIndividualProfileFromJSON(
  jsonString: string,
): SafeParseResult<CreateIndividualProfile, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateIndividualProfile$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateIndividualProfile' from JSON`,
  );
}
