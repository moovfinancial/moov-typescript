/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  TerminalApplicationStatus,
  TerminalApplicationStatus$inboundSchema,
  TerminalApplicationStatus$outboundSchema,
} from "./terminalapplicationstatus.js";

export type WebhookDataTerminalApplicationCreated = {
  terminalApplicationID: string;
  /**
   * Status of the terminal application.
   */
  status: TerminalApplicationStatus;
};

/** @internal */
export const WebhookDataTerminalApplicationCreated$inboundSchema: z.ZodType<
  WebhookDataTerminalApplicationCreated,
  z.ZodTypeDef,
  unknown
> = z.object({
  terminalApplicationID: z.string(),
  status: TerminalApplicationStatus$inboundSchema,
});

/** @internal */
export type WebhookDataTerminalApplicationCreated$Outbound = {
  terminalApplicationID: string;
  status: string;
};

/** @internal */
export const WebhookDataTerminalApplicationCreated$outboundSchema: z.ZodType<
  WebhookDataTerminalApplicationCreated$Outbound,
  z.ZodTypeDef,
  WebhookDataTerminalApplicationCreated
> = z.object({
  terminalApplicationID: z.string(),
  status: TerminalApplicationStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookDataTerminalApplicationCreated$ {
  /** @deprecated use `WebhookDataTerminalApplicationCreated$inboundSchema` instead. */
  export const inboundSchema =
    WebhookDataTerminalApplicationCreated$inboundSchema;
  /** @deprecated use `WebhookDataTerminalApplicationCreated$outboundSchema` instead. */
  export const outboundSchema =
    WebhookDataTerminalApplicationCreated$outboundSchema;
  /** @deprecated use `WebhookDataTerminalApplicationCreated$Outbound` instead. */
  export type Outbound = WebhookDataTerminalApplicationCreated$Outbound;
}

export function webhookDataTerminalApplicationCreatedToJSON(
  webhookDataTerminalApplicationCreated: WebhookDataTerminalApplicationCreated,
): string {
  return JSON.stringify(
    WebhookDataTerminalApplicationCreated$outboundSchema.parse(
      webhookDataTerminalApplicationCreated,
    ),
  );
}

export function webhookDataTerminalApplicationCreatedFromJSON(
  jsonString: string,
): SafeParseResult<WebhookDataTerminalApplicationCreated, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      WebhookDataTerminalApplicationCreated$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WebhookDataTerminalApplicationCreated' from JSON`,
  );
}
