/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const RequirementErrorCode = {
  InvalidValue: "invalid-value",
  FailedAutomaticVerification: "failed-automatic-verification",
  FailedOther: "failed-other",
  InvalidAddress: "invalid-address",
  AddressRestricted: "address-restricted",
  TaxIdMismatch: "tax-id-mismatch",
  DocumentIdMismatch: "document-id-mismatch",
  DocumentDateOfBirthMismatch: "document-date-of-birth-mismatch",
  DocumentNameMismatch: "document-name-mismatch",
  DocumentAddressMismatch: "document-address.mismatch",
  DocumentNumberMismatch: "document-number-mismatch",
  DocumentIncomplete: "document-incomplete",
  DocumentFailedRisk: "document-failed-risk",
  DocumentIllegible: "document-illegible",
  DocumentUnsupported: "document-unsupported",
  DocumentNotUploaded: "document-not-uploaded",
  DocumentCorrupt: "document-corrupt",
  DocumentExpired: "document-expired",
} as const;
export type RequirementErrorCode = ClosedEnum<typeof RequirementErrorCode>;

/** @internal */
export const RequirementErrorCode$inboundSchema: z.ZodNativeEnum<
  typeof RequirementErrorCode
> = z.nativeEnum(RequirementErrorCode);

/** @internal */
export const RequirementErrorCode$outboundSchema: z.ZodNativeEnum<
  typeof RequirementErrorCode
> = RequirementErrorCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequirementErrorCode$ {
  /** @deprecated use `RequirementErrorCode$inboundSchema` instead. */
  export const inboundSchema = RequirementErrorCode$inboundSchema;
  /** @deprecated use `RequirementErrorCode$outboundSchema` instead. */
  export const outboundSchema = RequirementErrorCode$outboundSchema;
}
