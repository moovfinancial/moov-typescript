/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  SendFundsAchError,
  SendFundsAchError$inboundSchema,
  SendFundsAchError$Outbound,
  SendFundsAchError$outboundSchema,
} from "./sendfundsacherror.js";
import {
  SendFundsInstantBankError,
  SendFundsInstantBankError$inboundSchema,
  SendFundsInstantBankError$Outbound,
  SendFundsInstantBankError$outboundSchema,
} from "./sendfundsinstantbankerror.js";
import {
  SendFundsPushToCardError,
  SendFundsPushToCardError$inboundSchema,
  SendFundsPushToCardError$Outbound,
  SendFundsPushToCardError$outboundSchema,
} from "./sendfundspushtocarderror.js";
import {
  SendFundsRtpError,
  SendFundsRtpError$inboundSchema,
  SendFundsRtpError$Outbound,
  SendFundsRtpError$outboundSchema,
} from "./sendfundsrtperror.js";

export type SendFundsError = {
  ach?: SendFundsAchError | undefined;
  pushToCard?: SendFundsPushToCardError | undefined;
  rtp?: SendFundsRtpError | undefined;
  instantBank?: SendFundsInstantBankError | undefined;
};

/** @internal */
export const SendFundsError$inboundSchema: z.ZodType<
  SendFundsError,
  z.ZodTypeDef,
  unknown
> = z.object({
  ach: SendFundsAchError$inboundSchema.optional(),
  pushToCard: SendFundsPushToCardError$inboundSchema.optional(),
  rtp: SendFundsRtpError$inboundSchema.optional(),
  instantBank: SendFundsInstantBankError$inboundSchema.optional(),
});

/** @internal */
export type SendFundsError$Outbound = {
  ach?: SendFundsAchError$Outbound | undefined;
  pushToCard?: SendFundsPushToCardError$Outbound | undefined;
  rtp?: SendFundsRtpError$Outbound | undefined;
  instantBank?: SendFundsInstantBankError$Outbound | undefined;
};

/** @internal */
export const SendFundsError$outboundSchema: z.ZodType<
  SendFundsError$Outbound,
  z.ZodTypeDef,
  SendFundsError
> = z.object({
  ach: SendFundsAchError$outboundSchema.optional(),
  pushToCard: SendFundsPushToCardError$outboundSchema.optional(),
  rtp: SendFundsRtpError$outboundSchema.optional(),
  instantBank: SendFundsInstantBankError$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendFundsError$ {
  /** @deprecated use `SendFundsError$inboundSchema` instead. */
  export const inboundSchema = SendFundsError$inboundSchema;
  /** @deprecated use `SendFundsError$outboundSchema` instead. */
  export const outboundSchema = SendFundsError$outboundSchema;
  /** @deprecated use `SendFundsError$Outbound` instead. */
  export type Outbound = SendFundsError$Outbound;
}

export function sendFundsErrorToJSON(sendFundsError: SendFundsError): string {
  return JSON.stringify(SendFundsError$outboundSchema.parse(sendFundsError));
}

export function sendFundsErrorFromJSON(
  jsonString: string,
): SafeParseResult<SendFundsError, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SendFundsError$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SendFundsError' from JSON`,
  );
}
