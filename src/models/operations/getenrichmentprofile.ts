/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetEnrichmentProfileSecurity = {
  basicAuth?: components.SchemeBasicAuth | undefined;
  oAuth2Auth?: string | undefined;
};

export type GetEnrichmentProfileRequest = {
  /**
   * Specify an API version.
   */
  xMoovVersion?: components.Versions | undefined;
  email: string;
};

/** @internal */
export const GetEnrichmentProfileSecurity$inboundSchema: z.ZodType<
  GetEnrichmentProfileSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  BasicAuth: components.SchemeBasicAuth$inboundSchema.optional(),
  OAuth2Auth: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "BasicAuth": "basicAuth",
    "OAuth2Auth": "oAuth2Auth",
  });
});

/** @internal */
export type GetEnrichmentProfileSecurity$Outbound = {
  BasicAuth?: components.SchemeBasicAuth$Outbound | undefined;
  OAuth2Auth?: string | undefined;
};

/** @internal */
export const GetEnrichmentProfileSecurity$outboundSchema: z.ZodType<
  GetEnrichmentProfileSecurity$Outbound,
  z.ZodTypeDef,
  GetEnrichmentProfileSecurity
> = z.object({
  basicAuth: components.SchemeBasicAuth$outboundSchema.optional(),
  oAuth2Auth: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    basicAuth: "BasicAuth",
    oAuth2Auth: "OAuth2Auth",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEnrichmentProfileSecurity$ {
  /** @deprecated use `GetEnrichmentProfileSecurity$inboundSchema` instead. */
  export const inboundSchema = GetEnrichmentProfileSecurity$inboundSchema;
  /** @deprecated use `GetEnrichmentProfileSecurity$outboundSchema` instead. */
  export const outboundSchema = GetEnrichmentProfileSecurity$outboundSchema;
  /** @deprecated use `GetEnrichmentProfileSecurity$Outbound` instead. */
  export type Outbound = GetEnrichmentProfileSecurity$Outbound;
}

export function getEnrichmentProfileSecurityToJSON(
  getEnrichmentProfileSecurity: GetEnrichmentProfileSecurity,
): string {
  return JSON.stringify(
    GetEnrichmentProfileSecurity$outboundSchema.parse(
      getEnrichmentProfileSecurity,
    ),
  );
}

export function getEnrichmentProfileSecurityFromJSON(
  jsonString: string,
): SafeParseResult<GetEnrichmentProfileSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEnrichmentProfileSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEnrichmentProfileSecurity' from JSON`,
  );
}

/** @internal */
export const GetEnrichmentProfileRequest$inboundSchema: z.ZodType<
  GetEnrichmentProfileRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "x-moov-version": components.Versions$inboundSchema.optional(),
  email: z.string(),
}).transform((v) => {
  return remap$(v, {
    "x-moov-version": "xMoovVersion",
  });
});

/** @internal */
export type GetEnrichmentProfileRequest$Outbound = {
  "x-moov-version"?: string | undefined;
  email: string;
};

/** @internal */
export const GetEnrichmentProfileRequest$outboundSchema: z.ZodType<
  GetEnrichmentProfileRequest$Outbound,
  z.ZodTypeDef,
  GetEnrichmentProfileRequest
> = z.object({
  xMoovVersion: components.Versions$outboundSchema.optional(),
  email: z.string(),
}).transform((v) => {
  return remap$(v, {
    xMoovVersion: "x-moov-version",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEnrichmentProfileRequest$ {
  /** @deprecated use `GetEnrichmentProfileRequest$inboundSchema` instead. */
  export const inboundSchema = GetEnrichmentProfileRequest$inboundSchema;
  /** @deprecated use `GetEnrichmentProfileRequest$outboundSchema` instead. */
  export const outboundSchema = GetEnrichmentProfileRequest$outboundSchema;
  /** @deprecated use `GetEnrichmentProfileRequest$Outbound` instead. */
  export type Outbound = GetEnrichmentProfileRequest$Outbound;
}

export function getEnrichmentProfileRequestToJSON(
  getEnrichmentProfileRequest: GetEnrichmentProfileRequest,
): string {
  return JSON.stringify(
    GetEnrichmentProfileRequest$outboundSchema.parse(
      getEnrichmentProfileRequest,
    ),
  );
}

export function getEnrichmentProfileRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetEnrichmentProfileRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEnrichmentProfileRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEnrichmentProfileRequest' from JSON`,
  );
}
