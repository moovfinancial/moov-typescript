/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GenerateEndToEndKeyGlobals = {
  /**
   * Specify an API version.
   *
   * @remarks
   *
   * API versioning follows the format `vYYYY.QQ.BB`, where
   *   - `YYYY` is the year
   *   - `QQ` is the two-digit month for the first month of the quarter (e.g., 01, 04, 07, 10)
   *   - `BB` is the build number, starting at `.01`, for subsequent builds in the same quarter.
   *     - For example, `v2024.01.00` is the initial release of the first quarter of 2024.
   *
   * The `latest` version represents the most recent development state. It may include breaking changes and should be treated as a beta release.
   */
  xMoovVersion?: string | undefined;
};

export type GenerateEndToEndKeyRequest = {};

export type GenerateEndToEndKeyResponse = {
  headers: { [k: string]: Array<string> };
  result: components.JSONWebKey;
};

/** @internal */
export const GenerateEndToEndKeyGlobals$inboundSchema: z.ZodType<
  GenerateEndToEndKeyGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  "X-Moov-Version": z.string().default("v2024.01.00"),
}).transform((v) => {
  return remap$(v, {
    "X-Moov-Version": "xMoovVersion",
  });
});

/** @internal */
export type GenerateEndToEndKeyGlobals$Outbound = {
  "X-Moov-Version": string;
};

/** @internal */
export const GenerateEndToEndKeyGlobals$outboundSchema: z.ZodType<
  GenerateEndToEndKeyGlobals$Outbound,
  z.ZodTypeDef,
  GenerateEndToEndKeyGlobals
> = z.object({
  xMoovVersion: z.string().default("v2024.01.00"),
}).transform((v) => {
  return remap$(v, {
    xMoovVersion: "X-Moov-Version",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerateEndToEndKeyGlobals$ {
  /** @deprecated use `GenerateEndToEndKeyGlobals$inboundSchema` instead. */
  export const inboundSchema = GenerateEndToEndKeyGlobals$inboundSchema;
  /** @deprecated use `GenerateEndToEndKeyGlobals$outboundSchema` instead. */
  export const outboundSchema = GenerateEndToEndKeyGlobals$outboundSchema;
  /** @deprecated use `GenerateEndToEndKeyGlobals$Outbound` instead. */
  export type Outbound = GenerateEndToEndKeyGlobals$Outbound;
}

export function generateEndToEndKeyGlobalsToJSON(
  generateEndToEndKeyGlobals: GenerateEndToEndKeyGlobals,
): string {
  return JSON.stringify(
    GenerateEndToEndKeyGlobals$outboundSchema.parse(generateEndToEndKeyGlobals),
  );
}

export function generateEndToEndKeyGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<GenerateEndToEndKeyGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GenerateEndToEndKeyGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GenerateEndToEndKeyGlobals' from JSON`,
  );
}

/** @internal */
export const GenerateEndToEndKeyRequest$inboundSchema: z.ZodType<
  GenerateEndToEndKeyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type GenerateEndToEndKeyRequest$Outbound = {};

/** @internal */
export const GenerateEndToEndKeyRequest$outboundSchema: z.ZodType<
  GenerateEndToEndKeyRequest$Outbound,
  z.ZodTypeDef,
  GenerateEndToEndKeyRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerateEndToEndKeyRequest$ {
  /** @deprecated use `GenerateEndToEndKeyRequest$inboundSchema` instead. */
  export const inboundSchema = GenerateEndToEndKeyRequest$inboundSchema;
  /** @deprecated use `GenerateEndToEndKeyRequest$outboundSchema` instead. */
  export const outboundSchema = GenerateEndToEndKeyRequest$outboundSchema;
  /** @deprecated use `GenerateEndToEndKeyRequest$Outbound` instead. */
  export type Outbound = GenerateEndToEndKeyRequest$Outbound;
}

export function generateEndToEndKeyRequestToJSON(
  generateEndToEndKeyRequest: GenerateEndToEndKeyRequest,
): string {
  return JSON.stringify(
    GenerateEndToEndKeyRequest$outboundSchema.parse(generateEndToEndKeyRequest),
  );
}

export function generateEndToEndKeyRequestFromJSON(
  jsonString: string,
): SafeParseResult<GenerateEndToEndKeyRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GenerateEndToEndKeyRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GenerateEndToEndKeyRequest' from JSON`,
  );
}

/** @internal */
export const GenerateEndToEndKeyResponse$inboundSchema: z.ZodType<
  GenerateEndToEndKeyResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())).default({}),
  Result: components.JSONWebKey$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
    "Result": "result",
  });
});

/** @internal */
export type GenerateEndToEndKeyResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
  Result: components.JSONWebKey$Outbound;
};

/** @internal */
export const GenerateEndToEndKeyResponse$outboundSchema: z.ZodType<
  GenerateEndToEndKeyResponse$Outbound,
  z.ZodTypeDef,
  GenerateEndToEndKeyResponse
> = z.object({
  headers: z.record(z.array(z.string())),
  result: components.JSONWebKey$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerateEndToEndKeyResponse$ {
  /** @deprecated use `GenerateEndToEndKeyResponse$inboundSchema` instead. */
  export const inboundSchema = GenerateEndToEndKeyResponse$inboundSchema;
  /** @deprecated use `GenerateEndToEndKeyResponse$outboundSchema` instead. */
  export const outboundSchema = GenerateEndToEndKeyResponse$outboundSchema;
  /** @deprecated use `GenerateEndToEndKeyResponse$Outbound` instead. */
  export type Outbound = GenerateEndToEndKeyResponse$Outbound;
}

export function generateEndToEndKeyResponseToJSON(
  generateEndToEndKeyResponse: GenerateEndToEndKeyResponse,
): string {
  return JSON.stringify(
    GenerateEndToEndKeyResponse$outboundSchema.parse(
      generateEndToEndKeyResponse,
    ),
  );
}

export function generateEndToEndKeyResponseFromJSON(
  jsonString: string,
): SafeParseResult<GenerateEndToEndKeyResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GenerateEndToEndKeyResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GenerateEndToEndKeyResponse' from JSON`,
  );
}
