/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";
import { MoovError } from "./mooverror.js";

export type CreateTicketErrorData = {
  title?: string | undefined;
  body?: string | undefined;
  contact?: components.CreateTicketContactError | undefined;
};

export class CreateTicketError extends MoovError {
  title?: string | undefined;
  contact?: components.CreateTicketContactError | undefined;

  /** The original data that was passed to this error instance. */
  data$: CreateTicketErrorData;

  constructor(
    err: CreateTicketErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    if (err.title != null) this.title = err.title;
    if (err.contact != null) this.contact = err.contact;

    this.name = "CreateTicketError";
  }
}

/** @internal */
export const CreateTicketError$inboundSchema: z.ZodType<
  CreateTicketError,
  z.ZodTypeDef,
  unknown
> = z.object({
  title: z.string().optional(),
  body: z.string().optional(),
  contact: components.CreateTicketContactError$inboundSchema.optional(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new CreateTicketError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type CreateTicketError$Outbound = {
  title?: string | undefined;
  body?: string | undefined;
  contact?: components.CreateTicketContactError$Outbound | undefined;
};

/** @internal */
export const CreateTicketError$outboundSchema: z.ZodType<
  CreateTicketError$Outbound,
  z.ZodTypeDef,
  CreateTicketError
> = z.instanceof(CreateTicketError)
  .transform(v => v.data$)
  .pipe(z.object({
    title: z.string().optional(),
    body: z.string().optional(),
    contact: components.CreateTicketContactError$outboundSchema.optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTicketError$ {
  /** @deprecated use `CreateTicketError$inboundSchema` instead. */
  export const inboundSchema = CreateTicketError$inboundSchema;
  /** @deprecated use `CreateTicketError$outboundSchema` instead. */
  export const outboundSchema = CreateTicketError$outboundSchema;
  /** @deprecated use `CreateTicketError$Outbound` instead. */
  export type Outbound = CreateTicketError$Outbound;
}
